#
# Apply a multigrid preconditioner to the A11 block of a schur - complement
# solve.
#
# NOTE: The number of multigrid levels needs to be added as an option to the
# input XML file as follows:
#
#   <include>Experimental/MultigridForRegularSCR.xml</include>
#   <param name="mgLevels">2</param>
#

# The schur-complement options; see 'options-scr.opt' for details.

-scr_ksp_type fgmres

# outer iteration tolerance (pressure)
-scr_ksp_rtol 1.0e-5     

# inner iteration tolerance (search velocity)    		
-A11_ksp_rtol 1.0e-6  

# back solver tolerance (velocity)       	
-scr_vel_back_solve_rtol 1.0e-7
-backsolveA11_ksp_type fgmres   
-backsolve_A11_ksp_rtol 1.0e-7

-scr_use_previous_guess
-A11_ksp_type fgmres
-Q22_pc_type gkgdiag
# -no_scale

# -pc_mg_monitor 
#-log_summary


#-scr_ksp_monitor
#-scr_ksp_converged_reason
#-scr_ksp_solution_summary
# -A11_ksp_monitor
#-A11_ksp_converged_reason


# Define the MG type, either as 'multiplicative' or 'additive'. We use
# 'multiplicative' by default, not entirely sure why this is preferable to
# 'additive'.

-A11_pc_mg_type multiplicative
-A11_pc_mg_type additive

# Select either a V-cycle, 'v', or a W-cycle 'w'. By default we use a V-cycle
# as it is usually enough.

-A11_pc_mg_cycle_type w
# -pc_mg_cycle_type v 

# Select the number of cycles to perform per MG precondition. For particularly
# difficult problems this may need to be increased.

-A11_pc_mg_multiplicative_cycles 4
# -pc_mg_multiplicative_cycles 1

# Optionally set the coarsest level's solve. By default we don't bother
# specifying anything and let PETSc use a redundant direct solve.

#-A11_mg_coarse_ksp_type cg
-A11_mg_coarse_ksp_type preonly
-A11_mg_coarse_ksp_max_it 400
-A11_mg_coarse_ksp_rtol 1e-3
#-A11_mg_coarse_pc_type sor
-A11_mg_coarse_pc_type lu
#-A11_mg_coarse_pc_sub_type cholesky

# There are two ways to set information on finer levels. The first is to
# specify a single option that translates to every level. The second is to
# specify each level individually. These lines set all levels together.

#-mg_levels_ksp_type minres
#-mg_levels_ksp_max_its 3
#-mg_levels_pc_type sor
#-mg_levels_pc_sub_type cholesky

#-A11_mg_levels_ksp_type minres
-A11_mg_levels_ksp_max_its 6
-A11_mg_levels_ksp_convergence_test skip
-A11_mg_levels_ksp_type fgmres
-A11_mg_levels_pc_type sor
-A11_mg_levels_pc_sub_type cholesky

-A11_pc_mg_smoothup 5
-A11_pc_mg_smoothdown 5


# The accelerating MG is one of the best ways to kill off nasty problems effectively. Some tuning helps
# because you can bracket low and high smoothing values if you have seen what works. But a wide range can
# be very effective, so that's what we set by default.

-mg_accelerating_smoothing true
-mg_smoothing_adjust_on_convergence_rate false

# Monitor (usual sort of thing)

#####
-mg_accelerating_smoothing_view 1

# Range of values for the up / down smooth and 
# where to start at the beginning of each new iteration - if you have experience
# that a particular solution needs a lot of iterations then you can help the 
# algorithm out by suggesting it starts high.

-mg_smooths_min 2 
-mg_smooths_max 200
-mg_smooths_to_start 3

# The manner in which the smoothing cycles changes as the problem gets easier or harder. 
# The specified acceleration is a factor which increases or decreases the number of cycles to smooths * or / acceleration
# The specified increment increases or decreases the number of cycles to smooths + or - increment.
# Should be a big number if a lot of variation is seen in the problem. 

-mg_smoothing_acceleration 1.1
-mg_smoothing_increment 1

# And this is a target which says we'll try to get at least one order of magnitude reduction in 
# residual over this number of V cycles with the fiddling about in smoothing, but not more than
# two orders. This is to allow us to progress to smaller, cheaper operations when the calculation 
# is easy

-mg_target_cycles_10fold_reduction 5


# The following lines show how to set each level individually, although only
# level 1 is shown.

#-A11_mg_levels_1_ksp_type richardson
#-A11_mg_levels_1_ksp_max_it 1
#-A11_mg_levels_1_pc_type bjacobi
#-A11_mg_levels_1_pc_sub_type sor




