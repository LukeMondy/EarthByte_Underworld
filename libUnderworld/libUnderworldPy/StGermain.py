# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.0
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_StGermain', [dirname(__file__)])
        except ImportError:
            import _StGermain
            return _StGermain
        if fp is not None:
            try:
                _mod = imp.load_module('_StGermain', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _StGermain = swig_import_helper()
    del swig_import_helper
else:
    import _StGermain
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0



def Variable_GetValueAtInt(*args):
  return _StGermain.Variable_GetValueAtInt(*args)
Variable_GetValueAtInt = _StGermain.Variable_GetValueAtInt

def Variable_GetValueAtFloat(*args):
  return _StGermain.Variable_GetValueAtFloat(*args)
Variable_GetValueAtFloat = _StGermain.Variable_GetValueAtFloat

def Variable_GetValueAtDouble(*args):
  return _StGermain.Variable_GetValueAtDouble(*args)
Variable_GetValueAtDouble = _StGermain.Variable_GetValueAtDouble
VC_ValueType_Double = _StGermain.VC_ValueType_Double
VC_ValueType_Int = _StGermain.VC_ValueType_Int
VC_ValueType_Short = _StGermain.VC_ValueType_Short
VC_ValueType_Char = _StGermain.VC_ValueType_Char
VC_ValueType_Ptr = _StGermain.VC_ValueType_Ptr
VC_ValueType_DoubleArray = _StGermain.VC_ValueType_DoubleArray
VC_ValueType_CFIndex = _StGermain.VC_ValueType_CFIndex
False = _StGermain.False
True = _StGermain.True
Name_Invalid = _StGermain.Name_Invalid
Type_Invalid = _StGermain.Type_Invalid
MEMORY_POINTER_RELEASED = _StGermain.MEMORY_POINTER_RELEASED
MEMORY_POINTER_PERSISTENT = _StGermain.MEMORY_POINTER_PERSISTENT
GLOBAL = _StGermain.GLOBAL
NON_GLOBAL = _StGermain.NON_GLOBAL
KEEP = _StGermain.KEEP
DELETE = _StGermain.DELETE
Dictionary_Entry_Value_Type_String = _StGermain.Dictionary_Entry_Value_Type_String
Dictionary_Entry_Value_Type_Double = _StGermain.Dictionary_Entry_Value_Type_Double
Dictionary_Entry_Value_Type_UnsignedInt = _StGermain.Dictionary_Entry_Value_Type_UnsignedInt
Dictionary_Entry_Value_Type_Int = _StGermain.Dictionary_Entry_Value_Type_Int
Dictionary_Entry_Value_Type_UnsignedLong = _StGermain.Dictionary_Entry_Value_Type_UnsignedLong
Dictionary_Entry_Value_Type_Bool = _StGermain.Dictionary_Entry_Value_Type_Bool
Dictionary_Entry_Value_Type_Struct = _StGermain.Dictionary_Entry_Value_Type_Struct
Dictionary_Entry_Value_Type_List = _StGermain.Dictionary_Entry_Value_Type_List
Dictionary_Entry_Value_Type_VoidPtr = _StGermain.Dictionary_Entry_Value_Type_VoidPtr
Dictionary_Entry_Value_Num_Types = _StGermain.Dictionary_Entry_Value_Num_Types
class _Stg_Class(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, _Stg_Class, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, _Stg_Class, name)
    __repr__ = _swig_repr
    __swig_setmethods__["_sizeOfSelf"] = _StGermain._Stg_Class__sizeOfSelf_set
    __swig_getmethods__["_sizeOfSelf"] = _StGermain._Stg_Class__sizeOfSelf_get
    if _newclass:_sizeOfSelf = _swig_property(_StGermain._Stg_Class__sizeOfSelf_get, _StGermain._Stg_Class__sizeOfSelf_set)
    __swig_setmethods__["_deleteSelf"] = _StGermain._Stg_Class__deleteSelf_set
    __swig_getmethods__["_deleteSelf"] = _StGermain._Stg_Class__deleteSelf_get
    if _newclass:_deleteSelf = _swig_property(_StGermain._Stg_Class__deleteSelf_get, _StGermain._Stg_Class__deleteSelf_set)
    __swig_setmethods__["type"] = _StGermain._Stg_Class_type_set
    __swig_getmethods__["type"] = _StGermain._Stg_Class_type_get
    if _newclass:type = _swig_property(_StGermain._Stg_Class_type_get, _StGermain._Stg_Class_type_set)
    __swig_setmethods__["nRefs"] = _StGermain._Stg_Class_nRefs_set
    __swig_getmethods__["nRefs"] = _StGermain._Stg_Class_nRefs_get
    if _newclass:nRefs = _swig_property(_StGermain._Stg_Class_nRefs_get, _StGermain._Stg_Class_nRefs_set)
    __swig_setmethods__["_delete"] = _StGermain._Stg_Class__delete_set
    __swig_getmethods__["_delete"] = _StGermain._Stg_Class__delete_get
    if _newclass:_delete = _swig_property(_StGermain._Stg_Class__delete_get, _StGermain._Stg_Class__delete_set)
    __swig_setmethods__["_print"] = _StGermain._Stg_Class__print_set
    __swig_getmethods__["_print"] = _StGermain._Stg_Class__print_get
    if _newclass:_print = _swig_property(_StGermain._Stg_Class__print_get, _StGermain._Stg_Class__print_set)
    __swig_setmethods__["_copy"] = _StGermain._Stg_Class__copy_set
    __swig_getmethods__["_copy"] = _StGermain._Stg_Class__copy_get
    if _newclass:_copy = _swig_property(_StGermain._Stg_Class__copy_get, _StGermain._Stg_Class__copy_set)
    def __init__(self): 
        this = _StGermain.new__Stg_Class()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _StGermain.delete__Stg_Class
    __del__ = lambda self : None;
_Stg_Class_swigregister = _StGermain._Stg_Class_swigregister
_Stg_Class_swigregister(_Stg_Class)
cvar = _StGermain.cvar
Stg_Class_Type = cvar.Stg_Class_Type


def _Stg_Class_New(*args):
  return _StGermain._Stg_Class_New(*args)
_Stg_Class_New = _StGermain._Stg_Class_New

def _Stg_Class_Init(*args):
  return _StGermain._Stg_Class_Init(*args)
_Stg_Class_Init = _StGermain._Stg_Class_Init

def Stg_Class_Delete(*args):
  return _StGermain.Stg_Class_Delete(*args)
Stg_Class_Delete = _StGermain.Stg_Class_Delete

def Stg_Class_Print(*args):
  return _StGermain.Stg_Class_Print(*args)
Stg_Class_Print = _StGermain.Stg_Class_Print

def Stg_Generic_Copy(*args):
  return _StGermain.Stg_Generic_Copy(*args)
Stg_Generic_Copy = _StGermain.Stg_Generic_Copy

def Stg_Class_Copy(*args):
  return _StGermain.Stg_Class_Copy(*args)
Stg_Class_Copy = _StGermain.Stg_Class_Copy

def _Stg_Class_Delete(*args):
  return _StGermain._Stg_Class_Delete(*args)
_Stg_Class_Delete = _StGermain._Stg_Class_Delete

def _Stg_Class_Print(*args):
  return _StGermain._Stg_Class_Print(*args)
_Stg_Class_Print = _StGermain._Stg_Class_Print

def _Stg_Class_Copy(*args):
  return _StGermain._Stg_Class_Copy(*args)
_Stg_Class_Copy = _StGermain._Stg_Class_Copy

def Stg_Class_GetTypeFunc(*args):
  return _StGermain.Stg_Class_GetTypeFunc(*args)
Stg_Class_GetTypeFunc = _StGermain.Stg_Class_GetTypeFunc

def Stg_Class_AddRef(*args):
  return _StGermain.Stg_Class_AddRef(*args)
Stg_Class_AddRef = _StGermain.Stg_Class_AddRef

def Stg_Class_RemoveRef(*args):
  return _StGermain.Stg_Class_RemoveRef(*args)
Stg_Class_RemoveRef = _StGermain.Stg_Class_RemoveRef
class _Stg_Object(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, _Stg_Object, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, _Stg_Object, name)
    __repr__ = _swig_repr
    __swig_setmethods__["_sizeOfSelf"] = _StGermain._Stg_Object__sizeOfSelf_set
    __swig_getmethods__["_sizeOfSelf"] = _StGermain._Stg_Object__sizeOfSelf_get
    if _newclass:_sizeOfSelf = _swig_property(_StGermain._Stg_Object__sizeOfSelf_get, _StGermain._Stg_Object__sizeOfSelf_set)
    __swig_setmethods__["_deleteSelf"] = _StGermain._Stg_Object__deleteSelf_set
    __swig_getmethods__["_deleteSelf"] = _StGermain._Stg_Object__deleteSelf_get
    if _newclass:_deleteSelf = _swig_property(_StGermain._Stg_Object__deleteSelf_get, _StGermain._Stg_Object__deleteSelf_set)
    __swig_setmethods__["type"] = _StGermain._Stg_Object_type_set
    __swig_getmethods__["type"] = _StGermain._Stg_Object_type_get
    if _newclass:type = _swig_property(_StGermain._Stg_Object_type_get, _StGermain._Stg_Object_type_set)
    __swig_setmethods__["nRefs"] = _StGermain._Stg_Object_nRefs_set
    __swig_getmethods__["nRefs"] = _StGermain._Stg_Object_nRefs_get
    if _newclass:nRefs = _swig_property(_StGermain._Stg_Object_nRefs_get, _StGermain._Stg_Object_nRefs_set)
    __swig_setmethods__["_delete"] = _StGermain._Stg_Object__delete_set
    __swig_getmethods__["_delete"] = _StGermain._Stg_Object__delete_get
    if _newclass:_delete = _swig_property(_StGermain._Stg_Object__delete_get, _StGermain._Stg_Object__delete_set)
    __swig_setmethods__["_print"] = _StGermain._Stg_Object__print_set
    __swig_getmethods__["_print"] = _StGermain._Stg_Object__print_get
    if _newclass:_print = _swig_property(_StGermain._Stg_Object__print_get, _StGermain._Stg_Object__print_set)
    __swig_setmethods__["_copy"] = _StGermain._Stg_Object__copy_set
    __swig_getmethods__["_copy"] = _StGermain._Stg_Object__copy_get
    if _newclass:_copy = _swig_property(_StGermain._Stg_Object__copy_get, _StGermain._Stg_Object__copy_set)
    __swig_setmethods__["name"] = _StGermain._Stg_Object_name_set
    __swig_getmethods__["name"] = _StGermain._Stg_Object_name_get
    if _newclass:name = _swig_property(_StGermain._Stg_Object_name_get, _StGermain._Stg_Object_name_set)
    __swig_setmethods__["nameAllocationType"] = _StGermain._Stg_Object_nameAllocationType_set
    __swig_getmethods__["nameAllocationType"] = _StGermain._Stg_Object_nameAllocationType_get
    if _newclass:nameAllocationType = _swig_property(_StGermain._Stg_Object_nameAllocationType_get, _StGermain._Stg_Object_nameAllocationType_set)
    def __init__(self): 
        this = _StGermain.new__Stg_Object()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _StGermain.delete__Stg_Object
    __del__ = lambda self : None;
_Stg_Object_swigregister = _StGermain._Stg_Object_swigregister
_Stg_Object_swigregister(_Stg_Object)
Stg_Object_Type = cvar.Stg_Object_Type

ZERO = _StGermain.ZERO

def _Stg_Object_New(*args):
  return _StGermain._Stg_Object_New(*args)
_Stg_Object_New = _StGermain._Stg_Object_New

def _Stg_Object_Init(*args):
  return _StGermain._Stg_Object_Init(*args)
_Stg_Object_Init = _StGermain._Stg_Object_Init

def _Stg_Object_Delete(*args):
  return _StGermain._Stg_Object_Delete(*args)
_Stg_Object_Delete = _StGermain._Stg_Object_Delete

def _Stg_Object_Print(*args):
  return _StGermain._Stg_Object_Print(*args)
_Stg_Object_Print = _StGermain._Stg_Object_Print

def _Stg_Object_Copy(*args):
  return _StGermain._Stg_Object_Copy(*args)
_Stg_Object_Copy = _StGermain._Stg_Object_Copy

def Stg_Object_SetName(*args):
  return _StGermain.Stg_Object_SetName(*args)
Stg_Object_SetName = _StGermain.Stg_Object_SetName

def _Stg_Object_GetNameFunc(*args):
  return _StGermain._Stg_Object_GetNameFunc(*args)
_Stg_Object_GetNameFunc = _StGermain._Stg_Object_GetNameFunc

def Stg_Object_AppendSuffix(*args):
  return _StGermain.Stg_Object_AppendSuffix(*args)
Stg_Object_AppendSuffix = _StGermain.Stg_Object_AppendSuffix
class Stg_Component(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Stg_Component, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Stg_Component, name)
    __repr__ = _swig_repr
    __swig_setmethods__["_sizeOfSelf"] = _StGermain.Stg_Component__sizeOfSelf_set
    __swig_getmethods__["_sizeOfSelf"] = _StGermain.Stg_Component__sizeOfSelf_get
    if _newclass:_sizeOfSelf = _swig_property(_StGermain.Stg_Component__sizeOfSelf_get, _StGermain.Stg_Component__sizeOfSelf_set)
    __swig_setmethods__["_deleteSelf"] = _StGermain.Stg_Component__deleteSelf_set
    __swig_getmethods__["_deleteSelf"] = _StGermain.Stg_Component__deleteSelf_get
    if _newclass:_deleteSelf = _swig_property(_StGermain.Stg_Component__deleteSelf_get, _StGermain.Stg_Component__deleteSelf_set)
    __swig_setmethods__["type"] = _StGermain.Stg_Component_type_set
    __swig_getmethods__["type"] = _StGermain.Stg_Component_type_get
    if _newclass:type = _swig_property(_StGermain.Stg_Component_type_get, _StGermain.Stg_Component_type_set)
    __swig_setmethods__["nRefs"] = _StGermain.Stg_Component_nRefs_set
    __swig_getmethods__["nRefs"] = _StGermain.Stg_Component_nRefs_get
    if _newclass:nRefs = _swig_property(_StGermain.Stg_Component_nRefs_get, _StGermain.Stg_Component_nRefs_set)
    __swig_setmethods__["_delete"] = _StGermain.Stg_Component__delete_set
    __swig_getmethods__["_delete"] = _StGermain.Stg_Component__delete_get
    if _newclass:_delete = _swig_property(_StGermain.Stg_Component__delete_get, _StGermain.Stg_Component__delete_set)
    __swig_setmethods__["_print"] = _StGermain.Stg_Component__print_set
    __swig_getmethods__["_print"] = _StGermain.Stg_Component__print_get
    if _newclass:_print = _swig_property(_StGermain.Stg_Component__print_get, _StGermain.Stg_Component__print_set)
    __swig_setmethods__["_copy"] = _StGermain.Stg_Component__copy_set
    __swig_getmethods__["_copy"] = _StGermain.Stg_Component__copy_get
    if _newclass:_copy = _swig_property(_StGermain.Stg_Component__copy_get, _StGermain.Stg_Component__copy_set)
    __swig_setmethods__["name"] = _StGermain.Stg_Component_name_set
    __swig_getmethods__["name"] = _StGermain.Stg_Component_name_get
    if _newclass:name = _swig_property(_StGermain.Stg_Component_name_get, _StGermain.Stg_Component_name_set)
    __swig_setmethods__["nameAllocationType"] = _StGermain.Stg_Component_nameAllocationType_set
    __swig_getmethods__["nameAllocationType"] = _StGermain.Stg_Component_nameAllocationType_get
    if _newclass:nameAllocationType = _swig_property(_StGermain.Stg_Component_nameAllocationType_get, _StGermain.Stg_Component_nameAllocationType_set)
    __swig_setmethods__["_defaultConstructor"] = _StGermain.Stg_Component__defaultConstructor_set
    __swig_getmethods__["_defaultConstructor"] = _StGermain.Stg_Component__defaultConstructor_get
    if _newclass:_defaultConstructor = _swig_property(_StGermain.Stg_Component__defaultConstructor_get, _StGermain.Stg_Component__defaultConstructor_set)
    __swig_setmethods__["_construct"] = _StGermain.Stg_Component__construct_set
    __swig_getmethods__["_construct"] = _StGermain.Stg_Component__construct_get
    if _newclass:_construct = _swig_property(_StGermain.Stg_Component__construct_get, _StGermain.Stg_Component__construct_set)
    __swig_setmethods__["_build"] = _StGermain.Stg_Component__build_set
    __swig_getmethods__["_build"] = _StGermain.Stg_Component__build_get
    if _newclass:_build = _swig_property(_StGermain.Stg_Component__build_get, _StGermain.Stg_Component__build_set)
    __swig_setmethods__["_initialise"] = _StGermain.Stg_Component__initialise_set
    __swig_getmethods__["_initialise"] = _StGermain.Stg_Component__initialise_get
    if _newclass:_initialise = _swig_property(_StGermain.Stg_Component__initialise_get, _StGermain.Stg_Component__initialise_set)
    __swig_setmethods__["_execute"] = _StGermain.Stg_Component__execute_set
    __swig_getmethods__["_execute"] = _StGermain.Stg_Component__execute_get
    if _newclass:_execute = _swig_property(_StGermain.Stg_Component__execute_get, _StGermain.Stg_Component__execute_set)
    __swig_setmethods__["_destroy"] = _StGermain.Stg_Component__destroy_set
    __swig_getmethods__["_destroy"] = _StGermain.Stg_Component__destroy_get
    if _newclass:_destroy = _swig_property(_StGermain.Stg_Component__destroy_get, _StGermain.Stg_Component__destroy_set)
    __swig_setmethods__["isConstructed"] = _StGermain.Stg_Component_isConstructed_set
    __swig_getmethods__["isConstructed"] = _StGermain.Stg_Component_isConstructed_get
    if _newclass:isConstructed = _swig_property(_StGermain.Stg_Component_isConstructed_get, _StGermain.Stg_Component_isConstructed_set)
    __swig_setmethods__["isBuilt"] = _StGermain.Stg_Component_isBuilt_set
    __swig_getmethods__["isBuilt"] = _StGermain.Stg_Component_isBuilt_get
    if _newclass:isBuilt = _swig_property(_StGermain.Stg_Component_isBuilt_get, _StGermain.Stg_Component_isBuilt_set)
    __swig_setmethods__["isInitialised"] = _StGermain.Stg_Component_isInitialised_set
    __swig_getmethods__["isInitialised"] = _StGermain.Stg_Component_isInitialised_get
    if _newclass:isInitialised = _swig_property(_StGermain.Stg_Component_isInitialised_get, _StGermain.Stg_Component_isInitialised_set)
    __swig_setmethods__["hasExecuted"] = _StGermain.Stg_Component_hasExecuted_set
    __swig_getmethods__["hasExecuted"] = _StGermain.Stg_Component_hasExecuted_get
    if _newclass:hasExecuted = _swig_property(_StGermain.Stg_Component_hasExecuted_get, _StGermain.Stg_Component_hasExecuted_set)
    __swig_setmethods__["isDestroyed"] = _StGermain.Stg_Component_isDestroyed_set
    __swig_getmethods__["isDestroyed"] = _StGermain.Stg_Component_isDestroyed_get
    if _newclass:isDestroyed = _swig_property(_StGermain.Stg_Component_isDestroyed_get, _StGermain.Stg_Component_isDestroyed_set)
    __swig_setmethods__["constructType"] = _StGermain.Stg_Component_constructType_set
    __swig_getmethods__["constructType"] = _StGermain.Stg_Component_constructType_get
    if _newclass:constructType = _swig_property(_StGermain.Stg_Component_constructType_get, _StGermain.Stg_Component_constructType_set)
    __swig_setmethods__["buildType"] = _StGermain.Stg_Component_buildType_set
    __swig_getmethods__["buildType"] = _StGermain.Stg_Component_buildType_get
    if _newclass:buildType = _swig_property(_StGermain.Stg_Component_buildType_get, _StGermain.Stg_Component_buildType_set)
    __swig_setmethods__["initialiseType"] = _StGermain.Stg_Component_initialiseType_set
    __swig_getmethods__["initialiseType"] = _StGermain.Stg_Component_initialiseType_get
    if _newclass:initialiseType = _swig_property(_StGermain.Stg_Component_initialiseType_get, _StGermain.Stg_Component_initialiseType_set)
    __swig_setmethods__["executeType"] = _StGermain.Stg_Component_executeType_set
    __swig_getmethods__["executeType"] = _StGermain.Stg_Component_executeType_get
    if _newclass:executeType = _swig_property(_StGermain.Stg_Component_executeType_get, _StGermain.Stg_Component_executeType_set)
    __swig_setmethods__["destroyType"] = _StGermain.Stg_Component_destroyType_set
    __swig_getmethods__["destroyType"] = _StGermain.Stg_Component_destroyType_get
    if _newclass:destroyType = _swig_property(_StGermain.Stg_Component_destroyType_get, _StGermain.Stg_Component_destroyType_set)
    def __init__(self): 
        this = _StGermain.new_Stg_Component()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _StGermain.delete_Stg_Component
    __del__ = lambda self : None;
Stg_Component_swigregister = _StGermain.Stg_Component_swigregister
Stg_Component_swigregister(Stg_Component)
Stg_Component_Type = cvar.Stg_Component_Type


def _Stg_Component_New(*args):
  return _StGermain._Stg_Component_New(*args)
_Stg_Component_New = _StGermain._Stg_Component_New

def _Stg_Component_Init(*args):
  return _StGermain._Stg_Component_Init(*args)
_Stg_Component_Init = _StGermain._Stg_Component_Init

def _Stg_Component_Delete(*args):
  return _StGermain._Stg_Component_Delete(*args)
_Stg_Component_Delete = _StGermain._Stg_Component_Delete

def _Stg_Component_Print(*args):
  return _StGermain._Stg_Component_Print(*args)
_Stg_Component_Print = _StGermain._Stg_Component_Print

def _Stg_Component_Copy(*args):
  return _StGermain._Stg_Component_Copy(*args)
_Stg_Component_Copy = _StGermain._Stg_Component_Copy

def Stg_Component_AssignFromXML(*args):
  return _StGermain.Stg_Component_AssignFromXML(*args)
Stg_Component_AssignFromXML = _StGermain.Stg_Component_AssignFromXML

def Stg_Component_Build(*args):
  return _StGermain.Stg_Component_Build(*args)
Stg_Component_Build = _StGermain.Stg_Component_Build

def Stg_Component_Initialise(*args):
  return _StGermain.Stg_Component_Initialise(*args)
Stg_Component_Initialise = _StGermain.Stg_Component_Initialise

def Stg_Component_Execute(*args):
  return _StGermain.Stg_Component_Execute(*args)
Stg_Component_Execute = _StGermain.Stg_Component_Execute

def Stg_Component_Destroy(*args):
  return _StGermain.Stg_Component_Destroy(*args)
Stg_Component_Destroy = _StGermain.Stg_Component_Destroy

def Stg_Component_IsConstructed(*args):
  return _StGermain.Stg_Component_IsConstructed(*args)
Stg_Component_IsConstructed = _StGermain.Stg_Component_IsConstructed

def Stg_Component_IsBuilt(*args):
  return _StGermain.Stg_Component_IsBuilt(*args)
Stg_Component_IsBuilt = _StGermain.Stg_Component_IsBuilt

def Stg_Component_IsInitialised(*args):
  return _StGermain.Stg_Component_IsInitialised(*args)
Stg_Component_IsInitialised = _StGermain.Stg_Component_IsInitialised

def Stg_Component_HasExecuted(*args):
  return _StGermain.Stg_Component_HasExecuted(*args)
Stg_Component_HasExecuted = _StGermain.Stg_Component_HasExecuted

def Stg_Component_IsDestroyed(*args):
  return _StGermain.Stg_Component_IsDestroyed(*args)
Stg_Component_IsDestroyed = _StGermain.Stg_Component_IsDestroyed

def Stg_Component_SetupStreamFromDictionary(*args):
  return _StGermain.Stg_Component_SetupStreamFromDictionary(*args)
Stg_Component_SetupStreamFromDictionary = _StGermain.Stg_Component_SetupStreamFromDictionary
class LiveComponentRegister(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, LiveComponentRegister, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, LiveComponentRegister, name)
    __repr__ = _swig_repr
    __swig_setmethods__["_sizeOfSelf"] = _StGermain.LiveComponentRegister__sizeOfSelf_set
    __swig_getmethods__["_sizeOfSelf"] = _StGermain.LiveComponentRegister__sizeOfSelf_get
    if _newclass:_sizeOfSelf = _swig_property(_StGermain.LiveComponentRegister__sizeOfSelf_get, _StGermain.LiveComponentRegister__sizeOfSelf_set)
    __swig_setmethods__["_deleteSelf"] = _StGermain.LiveComponentRegister__deleteSelf_set
    __swig_getmethods__["_deleteSelf"] = _StGermain.LiveComponentRegister__deleteSelf_get
    if _newclass:_deleteSelf = _swig_property(_StGermain.LiveComponentRegister__deleteSelf_get, _StGermain.LiveComponentRegister__deleteSelf_set)
    __swig_setmethods__["type"] = _StGermain.LiveComponentRegister_type_set
    __swig_getmethods__["type"] = _StGermain.LiveComponentRegister_type_get
    if _newclass:type = _swig_property(_StGermain.LiveComponentRegister_type_get, _StGermain.LiveComponentRegister_type_set)
    __swig_setmethods__["nRefs"] = _StGermain.LiveComponentRegister_nRefs_set
    __swig_getmethods__["nRefs"] = _StGermain.LiveComponentRegister_nRefs_get
    if _newclass:nRefs = _swig_property(_StGermain.LiveComponentRegister_nRefs_get, _StGermain.LiveComponentRegister_nRefs_set)
    __swig_setmethods__["_delete"] = _StGermain.LiveComponentRegister__delete_set
    __swig_getmethods__["_delete"] = _StGermain.LiveComponentRegister__delete_get
    if _newclass:_delete = _swig_property(_StGermain.LiveComponentRegister__delete_get, _StGermain.LiveComponentRegister__delete_set)
    __swig_setmethods__["_print"] = _StGermain.LiveComponentRegister__print_set
    __swig_getmethods__["_print"] = _StGermain.LiveComponentRegister__print_get
    if _newclass:_print = _swig_property(_StGermain.LiveComponentRegister__print_get, _StGermain.LiveComponentRegister__print_set)
    __swig_setmethods__["_copy"] = _StGermain.LiveComponentRegister__copy_set
    __swig_getmethods__["_copy"] = _StGermain.LiveComponentRegister__copy_get
    if _newclass:_copy = _swig_property(_StGermain.LiveComponentRegister__copy_get, _StGermain.LiveComponentRegister__copy_set)
    __swig_setmethods__["componentList"] = _StGermain.LiveComponentRegister_componentList_set
    __swig_getmethods__["componentList"] = _StGermain.LiveComponentRegister_componentList_get
    if _newclass:componentList = _swig_property(_StGermain.LiveComponentRegister_componentList_get, _StGermain.LiveComponentRegister_componentList_set)
    def __init__(self): 
        this = _StGermain.new_LiveComponentRegister()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _StGermain.delete_LiveComponentRegister
    __del__ = lambda self : None;
LiveComponentRegister_swigregister = _StGermain.LiveComponentRegister_swigregister
LiveComponentRegister_swigregister(LiveComponentRegister)
LiveComponentRegister_Type = cvar.LiveComponentRegister_Type


def _LiveComponentRegister_New(*args):
  return _StGermain._LiveComponentRegister_New(*args)
_LiveComponentRegister_New = _StGermain._LiveComponentRegister_New

def LiveComponentRegister_New():
  return _StGermain.LiveComponentRegister_New()
LiveComponentRegister_New = _StGermain.LiveComponentRegister_New

def _LiveComponentRegister_Init(*args):
  return _StGermain._LiveComponentRegister_Init(*args)
_LiveComponentRegister_Init = _StGermain._LiveComponentRegister_Init

def LiveComponentRegister_Init(*args):
  return _StGermain.LiveComponentRegister_Init(*args)
LiveComponentRegister_Init = _StGermain.LiveComponentRegister_Init

def _LiveComponentRegister_Delete(*args):
  return _StGermain._LiveComponentRegister_Delete(*args)
_LiveComponentRegister_Delete = _StGermain._LiveComponentRegister_Delete

def _LiveComponentRegister_Print(*args):
  return _StGermain._LiveComponentRegister_Print(*args)
_LiveComponentRegister_Print = _StGermain._LiveComponentRegister_Print

def LiveComponentRegister_Add(*args):
  return _StGermain.LiveComponentRegister_Add(*args)
LiveComponentRegister_Add = _StGermain.LiveComponentRegister_Add

def LiveComponentRegister_IfRegThenAdd(*args):
  return _StGermain.LiveComponentRegister_IfRegThenAdd(*args)
LiveComponentRegister_IfRegThenAdd = _StGermain.LiveComponentRegister_IfRegThenAdd

def LiveComponentRegister_Get(*args):
  return _StGermain.LiveComponentRegister_Get(*args)
LiveComponentRegister_Get = _StGermain.LiveComponentRegister_Get

def LiveComponentRegister_At(*args):
  return _StGermain.LiveComponentRegister_At(*args)
LiveComponentRegister_At = _StGermain.LiveComponentRegister_At

def LiveComponentRegister_RemoveOneComponentsEntry(*args):
  return _StGermain.LiveComponentRegister_RemoveOneComponentsEntry(*args)
LiveComponentRegister_RemoveOneComponentsEntry = _StGermain.LiveComponentRegister_RemoveOneComponentsEntry

def LiveComponentRegister_GetCount(*args):
  return _StGermain.LiveComponentRegister_GetCount(*args)
LiveComponentRegister_GetCount = _StGermain.LiveComponentRegister_GetCount

def LiveComponentRegister_BuildAll(*args):
  return _StGermain.LiveComponentRegister_BuildAll(*args)
LiveComponentRegister_BuildAll = _StGermain.LiveComponentRegister_BuildAll

def LiveComponentRegister_InitialiseAll(*args):
  return _StGermain.LiveComponentRegister_InitialiseAll(*args)
LiveComponentRegister_InitialiseAll = _StGermain.LiveComponentRegister_InitialiseAll

def LiveComponentRegister_DeleteAll(*args):
  return _StGermain.LiveComponentRegister_DeleteAll(*args)
LiveComponentRegister_DeleteAll = _StGermain.LiveComponentRegister_DeleteAll

def LiveComponentRegister_GetLiveComponentRegister():
  return _StGermain.LiveComponentRegister_GetLiveComponentRegister()
LiveComponentRegister_GetLiveComponentRegister = _StGermain.LiveComponentRegister_GetLiveComponentRegister

def LiveComponentRegister_PrintSimilar(*args):
  return _StGermain.LiveComponentRegister_PrintSimilar(*args)
LiveComponentRegister_PrintSimilar = _StGermain.LiveComponentRegister_PrintSimilar

def LiveComponentRegister_DestroyAll(*args):
  return _StGermain.LiveComponentRegister_DestroyAll(*args)
LiveComponentRegister_DestroyAll = _StGermain.LiveComponentRegister_DestroyAll
class Stg_ComponentFactory(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Stg_ComponentFactory, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Stg_ComponentFactory, name)
    __repr__ = _swig_repr
    __swig_setmethods__["_sizeOfSelf"] = _StGermain.Stg_ComponentFactory__sizeOfSelf_set
    __swig_getmethods__["_sizeOfSelf"] = _StGermain.Stg_ComponentFactory__sizeOfSelf_get
    if _newclass:_sizeOfSelf = _swig_property(_StGermain.Stg_ComponentFactory__sizeOfSelf_get, _StGermain.Stg_ComponentFactory__sizeOfSelf_set)
    __swig_setmethods__["_deleteSelf"] = _StGermain.Stg_ComponentFactory__deleteSelf_set
    __swig_getmethods__["_deleteSelf"] = _StGermain.Stg_ComponentFactory__deleteSelf_get
    if _newclass:_deleteSelf = _swig_property(_StGermain.Stg_ComponentFactory__deleteSelf_get, _StGermain.Stg_ComponentFactory__deleteSelf_set)
    __swig_setmethods__["type"] = _StGermain.Stg_ComponentFactory_type_set
    __swig_getmethods__["type"] = _StGermain.Stg_ComponentFactory_type_get
    if _newclass:type = _swig_property(_StGermain.Stg_ComponentFactory_type_get, _StGermain.Stg_ComponentFactory_type_set)
    __swig_setmethods__["nRefs"] = _StGermain.Stg_ComponentFactory_nRefs_set
    __swig_getmethods__["nRefs"] = _StGermain.Stg_ComponentFactory_nRefs_get
    if _newclass:nRefs = _swig_property(_StGermain.Stg_ComponentFactory_nRefs_get, _StGermain.Stg_ComponentFactory_nRefs_set)
    __swig_setmethods__["_delete"] = _StGermain.Stg_ComponentFactory__delete_set
    __swig_getmethods__["_delete"] = _StGermain.Stg_ComponentFactory__delete_get
    if _newclass:_delete = _swig_property(_StGermain.Stg_ComponentFactory__delete_get, _StGermain.Stg_ComponentFactory__delete_set)
    __swig_setmethods__["_print"] = _StGermain.Stg_ComponentFactory__print_set
    __swig_getmethods__["_print"] = _StGermain.Stg_ComponentFactory__print_get
    if _newclass:_print = _swig_property(_StGermain.Stg_ComponentFactory__print_get, _StGermain.Stg_ComponentFactory__print_set)
    __swig_setmethods__["_copy"] = _StGermain.Stg_ComponentFactory__copy_set
    __swig_getmethods__["_copy"] = _StGermain.Stg_ComponentFactory__copy_get
    if _newclass:_copy = _swig_property(_StGermain.Stg_ComponentFactory__copy_get, _StGermain.Stg_ComponentFactory__copy_set)
    __swig_setmethods__["getDouble"] = _StGermain.Stg_ComponentFactory_getDouble_set
    __swig_getmethods__["getDouble"] = _StGermain.Stg_ComponentFactory_getDouble_get
    if _newclass:getDouble = _swig_property(_StGermain.Stg_ComponentFactory_getDouble_get, _StGermain.Stg_ComponentFactory_getDouble_set)
    __swig_setmethods__["getInt"] = _StGermain.Stg_ComponentFactory_getInt_set
    __swig_getmethods__["getInt"] = _StGermain.Stg_ComponentFactory_getInt_get
    if _newclass:getInt = _swig_property(_StGermain.Stg_ComponentFactory_getInt_get, _StGermain.Stg_ComponentFactory_getInt_set)
    __swig_setmethods__["getUnsignedInt"] = _StGermain.Stg_ComponentFactory_getUnsignedInt_set
    __swig_getmethods__["getUnsignedInt"] = _StGermain.Stg_ComponentFactory_getUnsignedInt_get
    if _newclass:getUnsignedInt = _swig_property(_StGermain.Stg_ComponentFactory_getUnsignedInt_get, _StGermain.Stg_ComponentFactory_getUnsignedInt_set)
    __swig_setmethods__["getBool"] = _StGermain.Stg_ComponentFactory_getBool_set
    __swig_getmethods__["getBool"] = _StGermain.Stg_ComponentFactory_getBool_get
    if _newclass:getBool = _swig_property(_StGermain.Stg_ComponentFactory_getBool_get, _StGermain.Stg_ComponentFactory_getBool_set)
    __swig_setmethods__["getString"] = _StGermain.Stg_ComponentFactory_getString_set
    __swig_getmethods__["getString"] = _StGermain.Stg_ComponentFactory_getString_get
    if _newclass:getString = _swig_property(_StGermain.Stg_ComponentFactory_getString_get, _StGermain.Stg_ComponentFactory_getString_set)
    __swig_setmethods__["getRootDictDouble"] = _StGermain.Stg_ComponentFactory_getRootDictDouble_set
    __swig_getmethods__["getRootDictDouble"] = _StGermain.Stg_ComponentFactory_getRootDictDouble_get
    if _newclass:getRootDictDouble = _swig_property(_StGermain.Stg_ComponentFactory_getRootDictDouble_get, _StGermain.Stg_ComponentFactory_getRootDictDouble_set)
    __swig_setmethods__["getRootDictInt"] = _StGermain.Stg_ComponentFactory_getRootDictInt_set
    __swig_getmethods__["getRootDictInt"] = _StGermain.Stg_ComponentFactory_getRootDictInt_get
    if _newclass:getRootDictInt = _swig_property(_StGermain.Stg_ComponentFactory_getRootDictInt_get, _StGermain.Stg_ComponentFactory_getRootDictInt_set)
    __swig_setmethods__["getRootDictUnsignedInt"] = _StGermain.Stg_ComponentFactory_getRootDictUnsignedInt_set
    __swig_getmethods__["getRootDictUnsignedInt"] = _StGermain.Stg_ComponentFactory_getRootDictUnsignedInt_get
    if _newclass:getRootDictUnsignedInt = _swig_property(_StGermain.Stg_ComponentFactory_getRootDictUnsignedInt_get, _StGermain.Stg_ComponentFactory_getRootDictUnsignedInt_set)
    __swig_setmethods__["getRootDictBool"] = _StGermain.Stg_ComponentFactory_getRootDictBool_set
    __swig_getmethods__["getRootDictBool"] = _StGermain.Stg_ComponentFactory_getRootDictBool_get
    if _newclass:getRootDictBool = _swig_property(_StGermain.Stg_ComponentFactory_getRootDictBool_get, _StGermain.Stg_ComponentFactory_getRootDictBool_set)
    __swig_setmethods__["getRootDictString"] = _StGermain.Stg_ComponentFactory_getRootDictString_set
    __swig_getmethods__["getRootDictString"] = _StGermain.Stg_ComponentFactory_getRootDictString_get
    if _newclass:getRootDictString = _swig_property(_StGermain.Stg_ComponentFactory_getRootDictString_get, _StGermain.Stg_ComponentFactory_getRootDictString_set)
    __swig_setmethods__["constructByName"] = _StGermain.Stg_ComponentFactory_constructByName_set
    __swig_getmethods__["constructByName"] = _StGermain.Stg_ComponentFactory_constructByName_get
    if _newclass:constructByName = _swig_property(_StGermain.Stg_ComponentFactory_constructByName_get, _StGermain.Stg_ComponentFactory_constructByName_set)
    __swig_setmethods__["constructByKey"] = _StGermain.Stg_ComponentFactory_constructByKey_set
    __swig_getmethods__["constructByKey"] = _StGermain.Stg_ComponentFactory_constructByKey_get
    if _newclass:constructByKey = _swig_property(_StGermain.Stg_ComponentFactory_constructByKey_get, _StGermain.Stg_ComponentFactory_constructByKey_set)
    __swig_setmethods__["constructByNameWithKeyFallback"] = _StGermain.Stg_ComponentFactory_constructByNameWithKeyFallback_set
    __swig_getmethods__["constructByNameWithKeyFallback"] = _StGermain.Stg_ComponentFactory_constructByNameWithKeyFallback_get
    if _newclass:constructByNameWithKeyFallback = _swig_property(_StGermain.Stg_ComponentFactory_constructByNameWithKeyFallback_get, _StGermain.Stg_ComponentFactory_constructByNameWithKeyFallback_set)
    __swig_setmethods__["constructByList"] = _StGermain.Stg_ComponentFactory_constructByList_set
    __swig_getmethods__["constructByList"] = _StGermain.Stg_ComponentFactory_constructByList_get
    if _newclass:constructByList = _swig_property(_StGermain.Stg_ComponentFactory_constructByList_get, _StGermain.Stg_ComponentFactory_constructByList_set)
    __swig_setmethods__["rootDict"] = _StGermain.Stg_ComponentFactory_rootDict_set
    __swig_getmethods__["rootDict"] = _StGermain.Stg_ComponentFactory_rootDict_get
    if _newclass:rootDict = _swig_property(_StGermain.Stg_ComponentFactory_rootDict_get, _StGermain.Stg_ComponentFactory_rootDict_set)
    __swig_setmethods__["componentDict"] = _StGermain.Stg_ComponentFactory_componentDict_set
    __swig_getmethods__["componentDict"] = _StGermain.Stg_ComponentFactory_componentDict_get
    if _newclass:componentDict = _swig_property(_StGermain.Stg_ComponentFactory_componentDict_get, _StGermain.Stg_ComponentFactory_componentDict_set)
    __swig_setmethods__["LCRegister"] = _StGermain.Stg_ComponentFactory_LCRegister_set
    __swig_getmethods__["LCRegister"] = _StGermain.Stg_ComponentFactory_LCRegister_get
    if _newclass:LCRegister = _swig_property(_StGermain.Stg_ComponentFactory_LCRegister_get, _StGermain.Stg_ComponentFactory_LCRegister_set)
    __swig_setmethods__["infoStream"] = _StGermain.Stg_ComponentFactory_infoStream_set
    __swig_getmethods__["infoStream"] = _StGermain.Stg_ComponentFactory_infoStream_get
    if _newclass:infoStream = _swig_property(_StGermain.Stg_ComponentFactory_infoStream_get, _StGermain.Stg_ComponentFactory_infoStream_set)
    def __init__(self): 
        this = _StGermain.new_Stg_ComponentFactory()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _StGermain.delete_Stg_ComponentFactory
    __del__ = lambda self : None;
Stg_ComponentFactory_swigregister = _StGermain.Stg_ComponentFactory_swigregister
Stg_ComponentFactory_swigregister(Stg_ComponentFactory)
Stg_ComponentFactory_Type = cvar.Stg_ComponentFactory_Type


def _Stg_ComponentFactory_New(*args):
  return _StGermain._Stg_ComponentFactory_New(*args)
_Stg_ComponentFactory_New = _StGermain._Stg_ComponentFactory_New

def Stg_ComponentFactory_New(*args):
  return _StGermain.Stg_ComponentFactory_New(*args)
Stg_ComponentFactory_New = _StGermain.Stg_ComponentFactory_New

def _Stg_ComponentFactory_Init(*args):
  return _StGermain._Stg_ComponentFactory_Init(*args)
_Stg_ComponentFactory_Init = _StGermain._Stg_ComponentFactory_Init

def Stg_ComponentFactory_Init(*args):
  return _StGermain.Stg_ComponentFactory_Init(*args)
Stg_ComponentFactory_Init = _StGermain.Stg_ComponentFactory_Init

def _Stg_ComponentFactory_Delete(*args):
  return _StGermain._Stg_ComponentFactory_Delete(*args)
_Stg_ComponentFactory_Delete = _StGermain._Stg_ComponentFactory_Delete

def _Stg_ComponentFactory_Print(*args):
  return _StGermain._Stg_ComponentFactory_Print(*args)
_Stg_ComponentFactory_Print = _StGermain._Stg_ComponentFactory_Print

def Stg_ComponentFactory_SetComponentDictionary(*args):
  return _StGermain.Stg_ComponentFactory_SetComponentDictionary(*args)
Stg_ComponentFactory_SetComponentDictionary = _StGermain.Stg_ComponentFactory_SetComponentDictionary

def Stg_ComponentFactory_CreateComponents(*args):
  return _StGermain.Stg_ComponentFactory_CreateComponents(*args)
Stg_ComponentFactory_CreateComponents = _StGermain.Stg_ComponentFactory_CreateComponents

def Stg_ComponentFactory_ConstructComponents(*args):
  return _StGermain.Stg_ComponentFactory_ConstructComponents(*args)
Stg_ComponentFactory_ConstructComponents = _StGermain.Stg_ComponentFactory_ConstructComponents

def Stg_ComponentFactory_BuildComponents(*args):
  return _StGermain.Stg_ComponentFactory_BuildComponents(*args)
Stg_ComponentFactory_BuildComponents = _StGermain.Stg_ComponentFactory_BuildComponents

def Stg_ComponentFactory_InitialiseComponents(*args):
  return _StGermain.Stg_ComponentFactory_InitialiseComponents(*args)
Stg_ComponentFactory_InitialiseComponents = _StGermain.Stg_ComponentFactory_InitialiseComponents

def Stg_ComponentFactory_ExecuteComponents(*args):
  return _StGermain.Stg_ComponentFactory_ExecuteComponents(*args)
Stg_ComponentFactory_ExecuteComponents = _StGermain.Stg_ComponentFactory_ExecuteComponents

def Stg_ComponentFactory_DestroyComponents(*args):
  return _StGermain.Stg_ComponentFactory_DestroyComponents(*args)
Stg_ComponentFactory_DestroyComponents = _StGermain.Stg_ComponentFactory_DestroyComponents

def _Stg_ComponentFactory_GetDictionaryValue(*args):
  return _StGermain._Stg_ComponentFactory_GetDictionaryValue(*args)
_Stg_ComponentFactory_GetDictionaryValue = _StGermain._Stg_ComponentFactory_GetDictionaryValue

def _Stg_ComponentFactory_GetNumericalValue(*args):
  return _StGermain._Stg_ComponentFactory_GetNumericalValue(*args)
_Stg_ComponentFactory_GetNumericalValue = _StGermain._Stg_ComponentFactory_GetNumericalValue

def Stg_ComponentFactory_GetDouble(*args):
  return _StGermain.Stg_ComponentFactory_GetDouble(*args)
Stg_ComponentFactory_GetDouble = _StGermain.Stg_ComponentFactory_GetDouble

def _Stg_ComponentFactory_GetDouble(*args):
  return _StGermain._Stg_ComponentFactory_GetDouble(*args)
_Stg_ComponentFactory_GetDouble = _StGermain._Stg_ComponentFactory_GetDouble

def Stg_ComponentFactory_GetInt(*args):
  return _StGermain.Stg_ComponentFactory_GetInt(*args)
Stg_ComponentFactory_GetInt = _StGermain.Stg_ComponentFactory_GetInt

def _Stg_ComponentFactory_GetInt(*args):
  return _StGermain._Stg_ComponentFactory_GetInt(*args)
_Stg_ComponentFactory_GetInt = _StGermain._Stg_ComponentFactory_GetInt

def Stg_ComponentFactory_GetUnsignedInt(*args):
  return _StGermain.Stg_ComponentFactory_GetUnsignedInt(*args)
Stg_ComponentFactory_GetUnsignedInt = _StGermain.Stg_ComponentFactory_GetUnsignedInt

def _Stg_ComponentFactory_GetUnsignedInt(*args):
  return _StGermain._Stg_ComponentFactory_GetUnsignedInt(*args)
_Stg_ComponentFactory_GetUnsignedInt = _StGermain._Stg_ComponentFactory_GetUnsignedInt

def Stg_ComponentFactory_GetBool(*args):
  return _StGermain.Stg_ComponentFactory_GetBool(*args)
Stg_ComponentFactory_GetBool = _StGermain.Stg_ComponentFactory_GetBool

def _Stg_ComponentFactory_GetBool(*args):
  return _StGermain._Stg_ComponentFactory_GetBool(*args)
_Stg_ComponentFactory_GetBool = _StGermain._Stg_ComponentFactory_GetBool

def Stg_ComponentFactory_GetString(*args):
  return _StGermain.Stg_ComponentFactory_GetString(*args)
Stg_ComponentFactory_GetString = _StGermain.Stg_ComponentFactory_GetString

def _Stg_ComponentFactory_GetString(*args):
  return _StGermain._Stg_ComponentFactory_GetString(*args)
_Stg_ComponentFactory_GetString = _StGermain._Stg_ComponentFactory_GetString

def Stg_ComponentFactory_TryDouble(*args):
  return _StGermain.Stg_ComponentFactory_TryDouble(*args)
Stg_ComponentFactory_TryDouble = _StGermain.Stg_ComponentFactory_TryDouble

def Stg_ComponentFactory_TryInt(*args):
  return _StGermain.Stg_ComponentFactory_TryInt(*args)
Stg_ComponentFactory_TryInt = _StGermain.Stg_ComponentFactory_TryInt

def Stg_ComponentFactory_TryUnsignedInt(*args):
  return _StGermain.Stg_ComponentFactory_TryUnsignedInt(*args)
Stg_ComponentFactory_TryUnsignedInt = _StGermain.Stg_ComponentFactory_TryUnsignedInt

def Stg_ComponentFactory_TryBool(*args):
  return _StGermain.Stg_ComponentFactory_TryBool(*args)
Stg_ComponentFactory_TryBool = _StGermain.Stg_ComponentFactory_TryBool

def Stg_ComponentFactory_GetRequiredDouble(*args):
  return _StGermain.Stg_ComponentFactory_GetRequiredDouble(*args)
Stg_ComponentFactory_GetRequiredDouble = _StGermain.Stg_ComponentFactory_GetRequiredDouble

def Stg_ComponentFactory_GetRootDictDouble(*args):
  return _StGermain.Stg_ComponentFactory_GetRootDictDouble(*args)
Stg_ComponentFactory_GetRootDictDouble = _StGermain.Stg_ComponentFactory_GetRootDictDouble

def _Stg_ComponentFactory_GetRootDictDouble(*args):
  return _StGermain._Stg_ComponentFactory_GetRootDictDouble(*args)
_Stg_ComponentFactory_GetRootDictDouble = _StGermain._Stg_ComponentFactory_GetRootDictDouble

def Stg_ComponentFactory_GetRootDictInt(*args):
  return _StGermain.Stg_ComponentFactory_GetRootDictInt(*args)
Stg_ComponentFactory_GetRootDictInt = _StGermain.Stg_ComponentFactory_GetRootDictInt

def _Stg_ComponentFactory_GetRootDictInt(*args):
  return _StGermain._Stg_ComponentFactory_GetRootDictInt(*args)
_Stg_ComponentFactory_GetRootDictInt = _StGermain._Stg_ComponentFactory_GetRootDictInt

def Stg_ComponentFactory_GetRootDictUnsignedInt(*args):
  return _StGermain.Stg_ComponentFactory_GetRootDictUnsignedInt(*args)
Stg_ComponentFactory_GetRootDictUnsignedInt = _StGermain.Stg_ComponentFactory_GetRootDictUnsignedInt

def _Stg_ComponentFactory_GetRootDictUnsignedInt(*args):
  return _StGermain._Stg_ComponentFactory_GetRootDictUnsignedInt(*args)
_Stg_ComponentFactory_GetRootDictUnsignedInt = _StGermain._Stg_ComponentFactory_GetRootDictUnsignedInt

def Stg_ComponentFactory_GetRootDictBool(*args):
  return _StGermain.Stg_ComponentFactory_GetRootDictBool(*args)
Stg_ComponentFactory_GetRootDictBool = _StGermain.Stg_ComponentFactory_GetRootDictBool

def _Stg_ComponentFactory_GetRootDictBool(*args):
  return _StGermain._Stg_ComponentFactory_GetRootDictBool(*args)
_Stg_ComponentFactory_GetRootDictBool = _StGermain._Stg_ComponentFactory_GetRootDictBool

def Stg_ComponentFactory_GetRootDictString(*args):
  return _StGermain.Stg_ComponentFactory_GetRootDictString(*args)
Stg_ComponentFactory_GetRootDictString = _StGermain.Stg_ComponentFactory_GetRootDictString

def _Stg_ComponentFactory_GetRootDictString(*args):
  return _StGermain._Stg_ComponentFactory_GetRootDictString(*args)
_Stg_ComponentFactory_GetRootDictString = _StGermain._Stg_ComponentFactory_GetRootDictString

def _Stg_ComponentFactory_ConstructByName(*args):
  return _StGermain._Stg_ComponentFactory_ConstructByName(*args)
_Stg_ComponentFactory_ConstructByName = _StGermain._Stg_ComponentFactory_ConstructByName

def _Stg_ComponentFactory_ConstructByKey(*args):
  return _StGermain._Stg_ComponentFactory_ConstructByKey(*args)
_Stg_ComponentFactory_ConstructByKey = _StGermain._Stg_ComponentFactory_ConstructByKey

def _Stg_ComponentFactory_PluginConstructByKey(*args):
  return _StGermain._Stg_ComponentFactory_PluginConstructByKey(*args)
_Stg_ComponentFactory_PluginConstructByKey = _StGermain._Stg_ComponentFactory_PluginConstructByKey

def Stg_ComponentFactory_PluginGetUnsignedInt(*args):
  return _StGermain.Stg_ComponentFactory_PluginGetUnsignedInt(*args)
Stg_ComponentFactory_PluginGetUnsignedInt = _StGermain.Stg_ComponentFactory_PluginGetUnsignedInt

def Stg_ComponentFactory_PluginGetDouble(*args):
  return _StGermain.Stg_ComponentFactory_PluginGetDouble(*args)
Stg_ComponentFactory_PluginGetDouble = _StGermain.Stg_ComponentFactory_PluginGetDouble

def Stg_ComponentFactory_PluginGetInt(*args):
  return _StGermain.Stg_ComponentFactory_PluginGetInt(*args)
Stg_ComponentFactory_PluginGetInt = _StGermain.Stg_ComponentFactory_PluginGetInt

def Stg_ComponentFactory_PluginGetBool(*args):
  return _StGermain.Stg_ComponentFactory_PluginGetBool(*args)
Stg_ComponentFactory_PluginGetBool = _StGermain.Stg_ComponentFactory_PluginGetBool

def Stg_ComponentFactory_PluginGetString(*args):
  return _StGermain.Stg_ComponentFactory_PluginGetString(*args)
Stg_ComponentFactory_PluginGetString = _StGermain.Stg_ComponentFactory_PluginGetString

def _Stg_ComponentFactory_ConstructByNameWithKeyFallback(*args):
  return _StGermain._Stg_ComponentFactory_ConstructByNameWithKeyFallback(*args)
_Stg_ComponentFactory_ConstructByNameWithKeyFallback = _StGermain._Stg_ComponentFactory_ConstructByNameWithKeyFallback

def _Stg_ComponentFactory_ConstructByList(*args):
  return _StGermain._Stg_ComponentFactory_ConstructByList(*args)
_Stg_ComponentFactory_ConstructByList = _StGermain._Stg_ComponentFactory_ConstructByList
class Stg_ComponentRegisterElement(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Stg_ComponentRegisterElement, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Stg_ComponentRegisterElement, name)
    __repr__ = _swig_repr
    __swig_setmethods__["_sizeOfSelf"] = _StGermain.Stg_ComponentRegisterElement__sizeOfSelf_set
    __swig_getmethods__["_sizeOfSelf"] = _StGermain.Stg_ComponentRegisterElement__sizeOfSelf_get
    if _newclass:_sizeOfSelf = _swig_property(_StGermain.Stg_ComponentRegisterElement__sizeOfSelf_get, _StGermain.Stg_ComponentRegisterElement__sizeOfSelf_set)
    __swig_setmethods__["_deleteSelf"] = _StGermain.Stg_ComponentRegisterElement__deleteSelf_set
    __swig_getmethods__["_deleteSelf"] = _StGermain.Stg_ComponentRegisterElement__deleteSelf_get
    if _newclass:_deleteSelf = _swig_property(_StGermain.Stg_ComponentRegisterElement__deleteSelf_get, _StGermain.Stg_ComponentRegisterElement__deleteSelf_set)
    __swig_setmethods__["type"] = _StGermain.Stg_ComponentRegisterElement_type_set
    __swig_getmethods__["type"] = _StGermain.Stg_ComponentRegisterElement_type_get
    if _newclass:type = _swig_property(_StGermain.Stg_ComponentRegisterElement_type_get, _StGermain.Stg_ComponentRegisterElement_type_set)
    __swig_setmethods__["nRefs"] = _StGermain.Stg_ComponentRegisterElement_nRefs_set
    __swig_getmethods__["nRefs"] = _StGermain.Stg_ComponentRegisterElement_nRefs_get
    if _newclass:nRefs = _swig_property(_StGermain.Stg_ComponentRegisterElement_nRefs_get, _StGermain.Stg_ComponentRegisterElement_nRefs_set)
    __swig_setmethods__["_delete"] = _StGermain.Stg_ComponentRegisterElement__delete_set
    __swig_getmethods__["_delete"] = _StGermain.Stg_ComponentRegisterElement__delete_get
    if _newclass:_delete = _swig_property(_StGermain.Stg_ComponentRegisterElement__delete_get, _StGermain.Stg_ComponentRegisterElement__delete_set)
    __swig_setmethods__["_print"] = _StGermain.Stg_ComponentRegisterElement__print_set
    __swig_getmethods__["_print"] = _StGermain.Stg_ComponentRegisterElement__print_get
    if _newclass:_print = _swig_property(_StGermain.Stg_ComponentRegisterElement__print_get, _StGermain.Stg_ComponentRegisterElement__print_set)
    __swig_setmethods__["_copy"] = _StGermain.Stg_ComponentRegisterElement__copy_set
    __swig_getmethods__["_copy"] = _StGermain.Stg_ComponentRegisterElement__copy_get
    if _newclass:_copy = _swig_property(_StGermain.Stg_ComponentRegisterElement__copy_get, _StGermain.Stg_ComponentRegisterElement__copy_set)
    __swig_setmethods__["name"] = _StGermain.Stg_ComponentRegisterElement_name_set
    __swig_getmethods__["name"] = _StGermain.Stg_ComponentRegisterElement_name_get
    if _newclass:name = _swig_property(_StGermain.Stg_ComponentRegisterElement_name_get, _StGermain.Stg_ComponentRegisterElement_name_set)
    __swig_setmethods__["nameAllocationType"] = _StGermain.Stg_ComponentRegisterElement_nameAllocationType_set
    __swig_getmethods__["nameAllocationType"] = _StGermain.Stg_ComponentRegisterElement_nameAllocationType_get
    if _newclass:nameAllocationType = _swig_property(_StGermain.Stg_ComponentRegisterElement_nameAllocationType_get, _StGermain.Stg_ComponentRegisterElement_nameAllocationType_set)
    __swig_setmethods__["componentType"] = _StGermain.Stg_ComponentRegisterElement_componentType_set
    __swig_getmethods__["componentType"] = _StGermain.Stg_ComponentRegisterElement_componentType_get
    if _newclass:componentType = _swig_property(_StGermain.Stg_ComponentRegisterElement_componentType_get, _StGermain.Stg_ComponentRegisterElement_componentType_set)
    __swig_setmethods__["defaultConstructor"] = _StGermain.Stg_ComponentRegisterElement_defaultConstructor_set
    __swig_getmethods__["defaultConstructor"] = _StGermain.Stg_ComponentRegisterElement_defaultConstructor_get
    if _newclass:defaultConstructor = _swig_property(_StGermain.Stg_ComponentRegisterElement_defaultConstructor_get, _StGermain.Stg_ComponentRegisterElement_defaultConstructor_set)
    __swig_setmethods__["version"] = _StGermain.Stg_ComponentRegisterElement_version_set
    __swig_getmethods__["version"] = _StGermain.Stg_ComponentRegisterElement_version_get
    if _newclass:version = _swig_property(_StGermain.Stg_ComponentRegisterElement_version_get, _StGermain.Stg_ComponentRegisterElement_version_set)
    def __init__(self): 
        this = _StGermain.new_Stg_ComponentRegisterElement()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _StGermain.delete_Stg_ComponentRegisterElement
    __del__ = lambda self : None;
Stg_ComponentRegisterElement_swigregister = _StGermain.Stg_ComponentRegisterElement_swigregister
Stg_ComponentRegisterElement_swigregister(Stg_ComponentRegisterElement)
Stg_ComponentRegister_Type = cvar.Stg_ComponentRegister_Type


def Stg_ComponentRegisterElement_New(*args):
  return _StGermain.Stg_ComponentRegisterElement_New(*args)
Stg_ComponentRegisterElement_New = _StGermain.Stg_ComponentRegisterElement_New

def _Stg_ComponentRegisterElement_Delete(*args):
  return _StGermain._Stg_ComponentRegisterElement_Delete(*args)
_Stg_ComponentRegisterElement_Delete = _StGermain._Stg_ComponentRegisterElement_Delete

def _Stg_ComponentRegisterElement_Print(*args):
  return _StGermain._Stg_ComponentRegisterElement_Print(*args)
_Stg_ComponentRegisterElement_Print = _StGermain._Stg_ComponentRegisterElement_Print
class Stg_ComponentRegister(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Stg_ComponentRegister, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Stg_ComponentRegister, name)
    __repr__ = _swig_repr
    __swig_setmethods__["_sizeOfSelf"] = _StGermain.Stg_ComponentRegister__sizeOfSelf_set
    __swig_getmethods__["_sizeOfSelf"] = _StGermain.Stg_ComponentRegister__sizeOfSelf_get
    if _newclass:_sizeOfSelf = _swig_property(_StGermain.Stg_ComponentRegister__sizeOfSelf_get, _StGermain.Stg_ComponentRegister__sizeOfSelf_set)
    __swig_setmethods__["_deleteSelf"] = _StGermain.Stg_ComponentRegister__deleteSelf_set
    __swig_getmethods__["_deleteSelf"] = _StGermain.Stg_ComponentRegister__deleteSelf_get
    if _newclass:_deleteSelf = _swig_property(_StGermain.Stg_ComponentRegister__deleteSelf_get, _StGermain.Stg_ComponentRegister__deleteSelf_set)
    __swig_setmethods__["type"] = _StGermain.Stg_ComponentRegister_type_set
    __swig_getmethods__["type"] = _StGermain.Stg_ComponentRegister_type_get
    if _newclass:type = _swig_property(_StGermain.Stg_ComponentRegister_type_get, _StGermain.Stg_ComponentRegister_type_set)
    __swig_setmethods__["nRefs"] = _StGermain.Stg_ComponentRegister_nRefs_set
    __swig_getmethods__["nRefs"] = _StGermain.Stg_ComponentRegister_nRefs_get
    if _newclass:nRefs = _swig_property(_StGermain.Stg_ComponentRegister_nRefs_get, _StGermain.Stg_ComponentRegister_nRefs_set)
    __swig_setmethods__["_delete"] = _StGermain.Stg_ComponentRegister__delete_set
    __swig_getmethods__["_delete"] = _StGermain.Stg_ComponentRegister__delete_get
    if _newclass:_delete = _swig_property(_StGermain.Stg_ComponentRegister__delete_get, _StGermain.Stg_ComponentRegister__delete_set)
    __swig_setmethods__["_print"] = _StGermain.Stg_ComponentRegister__print_set
    __swig_getmethods__["_print"] = _StGermain.Stg_ComponentRegister__print_get
    if _newclass:_print = _swig_property(_StGermain.Stg_ComponentRegister__print_get, _StGermain.Stg_ComponentRegister__print_set)
    __swig_setmethods__["_copy"] = _StGermain.Stg_ComponentRegister__copy_set
    __swig_getmethods__["_copy"] = _StGermain.Stg_ComponentRegister__copy_get
    if _newclass:_copy = _swig_property(_StGermain.Stg_ComponentRegister__copy_get, _StGermain.Stg_ComponentRegister__copy_set)
    __swig_setmethods__["constructors"] = _StGermain.Stg_ComponentRegister_constructors_set
    __swig_getmethods__["constructors"] = _StGermain.Stg_ComponentRegister_constructors_get
    if _newclass:constructors = _swig_property(_StGermain.Stg_ComponentRegister_constructors_get, _StGermain.Stg_ComponentRegister_constructors_set)
    __swig_setmethods__["debugStream"] = _StGermain.Stg_ComponentRegister_debugStream_set
    __swig_getmethods__["debugStream"] = _StGermain.Stg_ComponentRegister_debugStream_get
    if _newclass:debugStream = _swig_property(_StGermain.Stg_ComponentRegister_debugStream_get, _StGermain.Stg_ComponentRegister_debugStream_set)
    def __init__(self): 
        this = _StGermain.new_Stg_ComponentRegister()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _StGermain.delete_Stg_ComponentRegister
    __del__ = lambda self : None;
Stg_ComponentRegister_swigregister = _StGermain.Stg_ComponentRegister_swigregister
Stg_ComponentRegister_swigregister(Stg_ComponentRegister)
Stg_ComponentRegisterElement_Type = cvar.Stg_ComponentRegisterElement_Type


def _Stg_ComponentRegister_New(*args):
  return _StGermain._Stg_ComponentRegister_New(*args)
_Stg_ComponentRegister_New = _StGermain._Stg_ComponentRegister_New

def Stg_ComponentRegister_New():
  return _StGermain.Stg_ComponentRegister_New()
Stg_ComponentRegister_New = _StGermain.Stg_ComponentRegister_New

def _Stg_ComponentRegister_Init(*args):
  return _StGermain._Stg_ComponentRegister_Init(*args)
_Stg_ComponentRegister_Init = _StGermain._Stg_ComponentRegister_Init

def Stg_ComponentRegister_Init(*args):
  return _StGermain.Stg_ComponentRegister_Init(*args)
Stg_ComponentRegister_Init = _StGermain.Stg_ComponentRegister_Init

def _Stg_ComponentRegister_Delete(*args):
  return _StGermain._Stg_ComponentRegister_Delete(*args)
_Stg_ComponentRegister_Delete = _StGermain._Stg_ComponentRegister_Delete

def _Stg_ComponentRegister_Print(*args):
  return _StGermain._Stg_ComponentRegister_Print(*args)
_Stg_ComponentRegister_Print = _StGermain._Stg_ComponentRegister_Print

def Stg_ComponentRegister_AddFunc(*args):
  return _StGermain.Stg_ComponentRegister_AddFunc(*args)
Stg_ComponentRegister_AddFunc = _StGermain.Stg_ComponentRegister_AddFunc

def Stg_ComponentRegister_RemoveEntry(*args):
  return _StGermain.Stg_ComponentRegister_RemoveEntry(*args)
Stg_ComponentRegister_RemoveEntry = _StGermain.Stg_ComponentRegister_RemoveEntry

def Stg_ComponentRegister_Get(*args):
  return _StGermain.Stg_ComponentRegister_Get(*args)
Stg_ComponentRegister_Get = _StGermain.Stg_ComponentRegister_Get

def Stg_ComponentRegister_AssertGet(*args):
  return _StGermain.Stg_ComponentRegister_AssertGet(*args)
Stg_ComponentRegister_AssertGet = _StGermain.Stg_ComponentRegister_AssertGet

def Stg_ComponentRegister_Get_ComponentRegister():
  return _StGermain.Stg_ComponentRegister_Get_ComponentRegister()
Stg_ComponentRegister_Get_ComponentRegister = _StGermain.Stg_ComponentRegister_Get_ComponentRegister

def Stg_ComponentRegister_PrintSimilar(*args):
  return _StGermain.Stg_ComponentRegister_PrintSimilar(*args)
Stg_ComponentRegister_PrintSimilar = _StGermain.Stg_ComponentRegister_PrintSimilar

def Stg_ComponentRegister_PrintAllTypes(*args):
  return _StGermain.Stg_ComponentRegister_PrintAllTypes(*args)
Stg_ComponentRegister_PrintAllTypes = _StGermain.Stg_ComponentRegister_PrintAllTypes

def Stg_ComponentRegister_GetCount(*args):
  return _StGermain.Stg_ComponentRegister_GetCount(*args)
Stg_ComponentRegister_GetCount = _StGermain.Stg_ComponentRegister_GetCount

def Stg_ComponentRegister_GetByIndex(*args):
  return _StGermain.Stg_ComponentRegister_GetByIndex(*args)
Stg_ComponentRegister_GetByIndex = _StGermain.Stg_ComponentRegister_GetByIndex

def Stg_ComponentRegisterElement_GetType(*args):
  return _StGermain.Stg_ComponentRegisterElement_GetType(*args)
Stg_ComponentRegisterElement_GetType = _StGermain.Stg_ComponentRegisterElement_GetType

def Stg_ComponentRegisterElement_GetVersion(*args):
  return _StGermain.Stg_ComponentRegisterElement_GetVersion(*args)
Stg_ComponentRegisterElement_GetVersion = _StGermain.Stg_ComponentRegisterElement_GetVersion

def Stg_ComponentRegisterElement_GetConstructor(*args):
  return _StGermain.Stg_ComponentRegisterElement_GetConstructor(*args)
Stg_ComponentRegisterElement_GetConstructor = _StGermain.Stg_ComponentRegisterElement_GetConstructor
class _AnalyticFunction(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, _AnalyticFunction, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, _AnalyticFunction, name)
    __repr__ = _swig_repr
    __swig_setmethods__["_sizeOfSelf"] = _StGermain._AnalyticFunction__sizeOfSelf_set
    __swig_getmethods__["_sizeOfSelf"] = _StGermain._AnalyticFunction__sizeOfSelf_get
    if _newclass:_sizeOfSelf = _swig_property(_StGermain._AnalyticFunction__sizeOfSelf_get, _StGermain._AnalyticFunction__sizeOfSelf_set)
    __swig_setmethods__["_deleteSelf"] = _StGermain._AnalyticFunction__deleteSelf_set
    __swig_getmethods__["_deleteSelf"] = _StGermain._AnalyticFunction__deleteSelf_get
    if _newclass:_deleteSelf = _swig_property(_StGermain._AnalyticFunction__deleteSelf_get, _StGermain._AnalyticFunction__deleteSelf_set)
    __swig_setmethods__["type"] = _StGermain._AnalyticFunction_type_set
    __swig_getmethods__["type"] = _StGermain._AnalyticFunction_type_get
    if _newclass:type = _swig_property(_StGermain._AnalyticFunction_type_get, _StGermain._AnalyticFunction_type_set)
    __swig_setmethods__["nRefs"] = _StGermain._AnalyticFunction_nRefs_set
    __swig_getmethods__["nRefs"] = _StGermain._AnalyticFunction_nRefs_get
    if _newclass:nRefs = _swig_property(_StGermain._AnalyticFunction_nRefs_get, _StGermain._AnalyticFunction_nRefs_set)
    __swig_setmethods__["_delete"] = _StGermain._AnalyticFunction__delete_set
    __swig_getmethods__["_delete"] = _StGermain._AnalyticFunction__delete_get
    if _newclass:_delete = _swig_property(_StGermain._AnalyticFunction__delete_get, _StGermain._AnalyticFunction__delete_set)
    __swig_setmethods__["_print"] = _StGermain._AnalyticFunction__print_set
    __swig_getmethods__["_print"] = _StGermain._AnalyticFunction__print_get
    if _newclass:_print = _swig_property(_StGermain._AnalyticFunction__print_get, _StGermain._AnalyticFunction__print_set)
    __swig_setmethods__["_copy"] = _StGermain._AnalyticFunction__copy_set
    __swig_getmethods__["_copy"] = _StGermain._AnalyticFunction__copy_get
    if _newclass:_copy = _swig_property(_StGermain._AnalyticFunction__copy_get, _StGermain._AnalyticFunction__copy_set)
    __swig_setmethods__["dictionary"] = _StGermain._AnalyticFunction_dictionary_set
    __swig_getmethods__["dictionary"] = _StGermain._AnalyticFunction_dictionary_get
    if _newclass:dictionary = _swig_property(_StGermain._AnalyticFunction_dictionary_get, _StGermain._AnalyticFunction_dictionary_set)
    __swig_setmethods__["apply"] = _StGermain._AnalyticFunction_apply_set
    __swig_getmethods__["apply"] = _StGermain._AnalyticFunction_apply_get
    if _newclass:apply = _swig_property(_StGermain._AnalyticFunction_apply_get, _StGermain._AnalyticFunction_apply_set)
    __swig_setmethods__["name"] = _StGermain._AnalyticFunction_name_set
    __swig_getmethods__["name"] = _StGermain._AnalyticFunction_name_get
    if _newclass:name = _swig_property(_StGermain._AnalyticFunction_name_get, _StGermain._AnalyticFunction_name_set)
    def __init__(self): 
        this = _StGermain.new__AnalyticFunction()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _StGermain.delete__AnalyticFunction
    __del__ = lambda self : None;
_AnalyticFunction_swigregister = _StGermain._AnalyticFunction_swigregister
_AnalyticFunction_swigregister(_AnalyticFunction)
AnalyticFunction_Type = cvar.AnalyticFunction_Type


def AnalyticFunction_New(*args):
  return _StGermain.AnalyticFunction_New(*args)
AnalyticFunction_New = _StGermain.AnalyticFunction_New

def AnalyticFunction_Init(*args):
  return _StGermain.AnalyticFunction_Init(*args)
AnalyticFunction_Init = _StGermain.AnalyticFunction_Init

def _AnalyticFunction_New(*args):
  return _StGermain._AnalyticFunction_New(*args)
_AnalyticFunction_New = _StGermain._AnalyticFunction_New

def _AnalyticFunction_Init(*args):
  return _StGermain._AnalyticFunction_Init(*args)
_AnalyticFunction_Init = _StGermain._AnalyticFunction_Init

def _AnalyticFunction_Delete(*args):
  return _StGermain._AnalyticFunction_Delete(*args)
_AnalyticFunction_Delete = _StGermain._AnalyticFunction_Delete

def _AnalyticFunction_Print(*args):
  return _StGermain._AnalyticFunction_Print(*args)
_AnalyticFunction_Print = _StGermain._AnalyticFunction_Print

def _AnalyticFunction_Apply(*args):
  return _StGermain._AnalyticFunction_Apply(*args)
_AnalyticFunction_Apply = _StGermain._AnalyticFunction_Apply

def AnalyticFunction_Add(*args):
  return _StGermain.AnalyticFunction_Add(*args)
AnalyticFunction_Add = _StGermain.AnalyticFunction_Add
Variable_DataType_Variable = _StGermain.Variable_DataType_Variable
Variable_DataType_Char = _StGermain.Variable_DataType_Char
Variable_DataType_Short = _StGermain.Variable_DataType_Short
Variable_DataType_Int = _StGermain.Variable_DataType_Int
Variable_DataType_Float = _StGermain.Variable_DataType_Float
Variable_DataType_Double = _StGermain.Variable_DataType_Double
Variable_DataType_Pointer = _StGermain.Variable_DataType_Pointer
Variable_DataType_Size = _StGermain.Variable_DataType_Size
class _Variable(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, _Variable, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, _Variable, name)
    __repr__ = _swig_repr
    __swig_setmethods__["_sizeOfSelf"] = _StGermain._Variable__sizeOfSelf_set
    __swig_getmethods__["_sizeOfSelf"] = _StGermain._Variable__sizeOfSelf_get
    if _newclass:_sizeOfSelf = _swig_property(_StGermain._Variable__sizeOfSelf_get, _StGermain._Variable__sizeOfSelf_set)
    __swig_setmethods__["_deleteSelf"] = _StGermain._Variable__deleteSelf_set
    __swig_getmethods__["_deleteSelf"] = _StGermain._Variable__deleteSelf_get
    if _newclass:_deleteSelf = _swig_property(_StGermain._Variable__deleteSelf_get, _StGermain._Variable__deleteSelf_set)
    __swig_setmethods__["type"] = _StGermain._Variable_type_set
    __swig_getmethods__["type"] = _StGermain._Variable_type_get
    if _newclass:type = _swig_property(_StGermain._Variable_type_get, _StGermain._Variable_type_set)
    __swig_setmethods__["nRefs"] = _StGermain._Variable_nRefs_set
    __swig_getmethods__["nRefs"] = _StGermain._Variable_nRefs_get
    if _newclass:nRefs = _swig_property(_StGermain._Variable_nRefs_get, _StGermain._Variable_nRefs_set)
    __swig_setmethods__["_delete"] = _StGermain._Variable__delete_set
    __swig_getmethods__["_delete"] = _StGermain._Variable__delete_get
    if _newclass:_delete = _swig_property(_StGermain._Variable__delete_get, _StGermain._Variable__delete_set)
    __swig_setmethods__["_print"] = _StGermain._Variable__print_set
    __swig_getmethods__["_print"] = _StGermain._Variable__print_get
    if _newclass:_print = _swig_property(_StGermain._Variable__print_get, _StGermain._Variable__print_set)
    __swig_setmethods__["_copy"] = _StGermain._Variable__copy_set
    __swig_getmethods__["_copy"] = _StGermain._Variable__copy_get
    if _newclass:_copy = _swig_property(_StGermain._Variable__copy_get, _StGermain._Variable__copy_set)
    __swig_setmethods__["name"] = _StGermain._Variable_name_set
    __swig_getmethods__["name"] = _StGermain._Variable_name_get
    if _newclass:name = _swig_property(_StGermain._Variable_name_get, _StGermain._Variable_name_set)
    __swig_setmethods__["nameAllocationType"] = _StGermain._Variable_nameAllocationType_set
    __swig_getmethods__["nameAllocationType"] = _StGermain._Variable_nameAllocationType_get
    if _newclass:nameAllocationType = _swig_property(_StGermain._Variable_nameAllocationType_get, _StGermain._Variable_nameAllocationType_set)
    __swig_setmethods__["_defaultConstructor"] = _StGermain._Variable__defaultConstructor_set
    __swig_getmethods__["_defaultConstructor"] = _StGermain._Variable__defaultConstructor_get
    if _newclass:_defaultConstructor = _swig_property(_StGermain._Variable__defaultConstructor_get, _StGermain._Variable__defaultConstructor_set)
    __swig_setmethods__["_construct"] = _StGermain._Variable__construct_set
    __swig_getmethods__["_construct"] = _StGermain._Variable__construct_get
    if _newclass:_construct = _swig_property(_StGermain._Variable__construct_get, _StGermain._Variable__construct_set)
    __swig_setmethods__["_build"] = _StGermain._Variable__build_set
    __swig_getmethods__["_build"] = _StGermain._Variable__build_get
    if _newclass:_build = _swig_property(_StGermain._Variable__build_get, _StGermain._Variable__build_set)
    __swig_setmethods__["_initialise"] = _StGermain._Variable__initialise_set
    __swig_getmethods__["_initialise"] = _StGermain._Variable__initialise_get
    if _newclass:_initialise = _swig_property(_StGermain._Variable__initialise_get, _StGermain._Variable__initialise_set)
    __swig_setmethods__["_execute"] = _StGermain._Variable__execute_set
    __swig_getmethods__["_execute"] = _StGermain._Variable__execute_get
    if _newclass:_execute = _swig_property(_StGermain._Variable__execute_get, _StGermain._Variable__execute_set)
    __swig_setmethods__["_destroy"] = _StGermain._Variable__destroy_set
    __swig_getmethods__["_destroy"] = _StGermain._Variable__destroy_get
    if _newclass:_destroy = _swig_property(_StGermain._Variable__destroy_get, _StGermain._Variable__destroy_set)
    __swig_setmethods__["isConstructed"] = _StGermain._Variable_isConstructed_set
    __swig_getmethods__["isConstructed"] = _StGermain._Variable_isConstructed_get
    if _newclass:isConstructed = _swig_property(_StGermain._Variable_isConstructed_get, _StGermain._Variable_isConstructed_set)
    __swig_setmethods__["isBuilt"] = _StGermain._Variable_isBuilt_set
    __swig_getmethods__["isBuilt"] = _StGermain._Variable_isBuilt_get
    if _newclass:isBuilt = _swig_property(_StGermain._Variable_isBuilt_get, _StGermain._Variable_isBuilt_set)
    __swig_setmethods__["isInitialised"] = _StGermain._Variable_isInitialised_set
    __swig_getmethods__["isInitialised"] = _StGermain._Variable_isInitialised_get
    if _newclass:isInitialised = _swig_property(_StGermain._Variable_isInitialised_get, _StGermain._Variable_isInitialised_set)
    __swig_setmethods__["hasExecuted"] = _StGermain._Variable_hasExecuted_set
    __swig_getmethods__["hasExecuted"] = _StGermain._Variable_hasExecuted_get
    if _newclass:hasExecuted = _swig_property(_StGermain._Variable_hasExecuted_get, _StGermain._Variable_hasExecuted_set)
    __swig_setmethods__["isDestroyed"] = _StGermain._Variable_isDestroyed_set
    __swig_getmethods__["isDestroyed"] = _StGermain._Variable_isDestroyed_get
    if _newclass:isDestroyed = _swig_property(_StGermain._Variable_isDestroyed_get, _StGermain._Variable_isDestroyed_set)
    __swig_setmethods__["constructType"] = _StGermain._Variable_constructType_set
    __swig_getmethods__["constructType"] = _StGermain._Variable_constructType_get
    if _newclass:constructType = _swig_property(_StGermain._Variable_constructType_get, _StGermain._Variable_constructType_set)
    __swig_setmethods__["buildType"] = _StGermain._Variable_buildType_set
    __swig_getmethods__["buildType"] = _StGermain._Variable_buildType_get
    if _newclass:buildType = _swig_property(_StGermain._Variable_buildType_get, _StGermain._Variable_buildType_set)
    __swig_setmethods__["initialiseType"] = _StGermain._Variable_initialiseType_set
    __swig_getmethods__["initialiseType"] = _StGermain._Variable_initialiseType_get
    if _newclass:initialiseType = _swig_property(_StGermain._Variable_initialiseType_get, _StGermain._Variable_initialiseType_set)
    __swig_setmethods__["executeType"] = _StGermain._Variable_executeType_set
    __swig_getmethods__["executeType"] = _StGermain._Variable_executeType_get
    if _newclass:executeType = _swig_property(_StGermain._Variable_executeType_get, _StGermain._Variable_executeType_set)
    __swig_setmethods__["destroyType"] = _StGermain._Variable_destroyType_set
    __swig_getmethods__["destroyType"] = _StGermain._Variable_destroyType_get
    if _newclass:destroyType = _swig_property(_StGermain._Variable_destroyType_get, _StGermain._Variable_destroyType_set)
    __swig_setmethods__["context"] = _StGermain._Variable_context_set
    __swig_getmethods__["context"] = _StGermain._Variable_context_get
    if _newclass:context = _swig_property(_StGermain._Variable_context_get, _StGermain._Variable_context_set)
    __swig_setmethods__["offsetCount"] = _StGermain._Variable_offsetCount_set
    __swig_getmethods__["offsetCount"] = _StGermain._Variable_offsetCount_get
    if _newclass:offsetCount = _swig_property(_StGermain._Variable_offsetCount_get, _StGermain._Variable_offsetCount_set)
    __swig_setmethods__["offsets"] = _StGermain._Variable_offsets_set
    __swig_getmethods__["offsets"] = _StGermain._Variable_offsets_get
    if _newclass:offsets = _swig_property(_StGermain._Variable_offsets_get, _StGermain._Variable_offsets_set)
    __swig_setmethods__["dataTypes"] = _StGermain._Variable_dataTypes_set
    __swig_getmethods__["dataTypes"] = _StGermain._Variable_dataTypes_get
    if _newclass:dataTypes = _swig_property(_StGermain._Variable_dataTypes_get, _StGermain._Variable_dataTypes_set)
    __swig_setmethods__["dataTypeCounts"] = _StGermain._Variable_dataTypeCounts_set
    __swig_getmethods__["dataTypeCounts"] = _StGermain._Variable_dataTypeCounts_get
    if _newclass:dataTypeCounts = _swig_property(_StGermain._Variable_dataTypeCounts_get, _StGermain._Variable_dataTypeCounts_set)
    __swig_setmethods__["structSizePtr"] = _StGermain._Variable_structSizePtr_set
    __swig_getmethods__["structSizePtr"] = _StGermain._Variable_structSizePtr_get
    if _newclass:structSizePtr = _swig_property(_StGermain._Variable_structSizePtr_get, _StGermain._Variable_structSizePtr_set)
    __swig_setmethods__["arrayPtrPtr"] = _StGermain._Variable_arrayPtrPtr_set
    __swig_getmethods__["arrayPtrPtr"] = _StGermain._Variable_arrayPtrPtr_get
    if _newclass:arrayPtrPtr = _swig_property(_StGermain._Variable_arrayPtrPtr_get, _StGermain._Variable_arrayPtrPtr_set)
    __swig_setmethods__["arraySizePtr"] = _StGermain._Variable_arraySizePtr_set
    __swig_getmethods__["arraySizePtr"] = _StGermain._Variable_arraySizePtr_get
    if _newclass:arraySizePtr = _swig_property(_StGermain._Variable_arraySizePtr_get, _StGermain._Variable_arraySizePtr_set)
    __swig_setmethods__["arraySizeFunc"] = _StGermain._Variable_arraySizeFunc_set
    __swig_getmethods__["arraySizeFunc"] = _StGermain._Variable_arraySizeFunc_get
    if _newclass:arraySizeFunc = _swig_property(_StGermain._Variable_arraySizeFunc_get, _StGermain._Variable_arraySizeFunc_set)
    __swig_setmethods__["dataSizes"] = _StGermain._Variable_dataSizes_set
    __swig_getmethods__["dataSizes"] = _StGermain._Variable_dataSizes_get
    if _newclass:dataSizes = _swig_property(_StGermain._Variable_dataSizes_get, _StGermain._Variable_dataSizes_set)
    __swig_setmethods__["structSize"] = _StGermain._Variable_structSize_set
    __swig_getmethods__["structSize"] = _StGermain._Variable_structSize_get
    if _newclass:structSize = _swig_property(_StGermain._Variable_structSize_get, _StGermain._Variable_structSize_set)
    __swig_setmethods__["arrayPtr"] = _StGermain._Variable_arrayPtr_set
    __swig_getmethods__["arrayPtr"] = _StGermain._Variable_arrayPtr_get
    if _newclass:arrayPtr = _swig_property(_StGermain._Variable_arrayPtr_get, _StGermain._Variable_arrayPtr_set)
    __swig_setmethods__["arraySize"] = _StGermain._Variable_arraySize_set
    __swig_getmethods__["arraySize"] = _StGermain._Variable_arraySize_get
    if _newclass:arraySize = _swig_property(_StGermain._Variable_arraySize_get, _StGermain._Variable_arraySize_set)
    __swig_setmethods__["subVariablesCount"] = _StGermain._Variable_subVariablesCount_set
    __swig_getmethods__["subVariablesCount"] = _StGermain._Variable_subVariablesCount_get
    if _newclass:subVariablesCount = _swig_property(_StGermain._Variable_subVariablesCount_get, _StGermain._Variable_subVariablesCount_set)
    __swig_setmethods__["components"] = _StGermain._Variable_components_set
    __swig_getmethods__["components"] = _StGermain._Variable_components_get
    if _newclass:components = _swig_property(_StGermain._Variable_components_get, _StGermain._Variable_components_set)
    __swig_setmethods__["allocateSelf"] = _StGermain._Variable_allocateSelf_set
    __swig_getmethods__["allocateSelf"] = _StGermain._Variable_allocateSelf_get
    if _newclass:allocateSelf = _swig_property(_StGermain._Variable_allocateSelf_get, _StGermain._Variable_allocateSelf_set)
    __swig_setmethods__["vr"] = _StGermain._Variable_vr_set
    __swig_getmethods__["vr"] = _StGermain._Variable_vr_get
    if _newclass:vr = _swig_property(_StGermain._Variable_vr_get, _StGermain._Variable_vr_set)
    __swig_setmethods__["parent"] = _StGermain._Variable_parent_set
    __swig_getmethods__["parent"] = _StGermain._Variable_parent_get
    if _newclass:parent = _swig_property(_StGermain._Variable_parent_get, _StGermain._Variable_parent_set)
    def __init__(self): 
        this = _StGermain.new__Variable()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _StGermain.delete__Variable
    __del__ = lambda self : None;
_Variable_swigregister = _StGermain._Variable_swigregister
_Variable_swigregister(_Variable)
Variable_Type = cvar.Variable_Type


def Variable_New(*args):
  return _StGermain.Variable_New(*args)
Variable_New = _StGermain.Variable_New

def _Variable_DefaultNew(*args):
  return _StGermain._Variable_DefaultNew(*args)
_Variable_DefaultNew = _StGermain._Variable_DefaultNew

def Variable_NewScalar(*args):
  return _StGermain.Variable_NewScalar(*args)
Variable_NewScalar = _StGermain.Variable_NewScalar

def Variable_NewVector(*args):
  return _StGermain.Variable_NewVector(*args)
Variable_NewVector = _StGermain.Variable_NewVector

def Variable_NewVector2(*args):
  return _StGermain.Variable_NewVector2(*args)
Variable_NewVector2 = _StGermain.Variable_NewVector2

def _Variable_New(*args):
  return _StGermain._Variable_New(*args)
_Variable_New = _StGermain._Variable_New

def _Variable_Init(*args):
  return _StGermain._Variable_Init(*args)
_Variable_Init = _StGermain._Variable_Init

def _Variable_Delete(*args):
  return _StGermain._Variable_Delete(*args)
_Variable_Delete = _StGermain._Variable_Delete

def _Variable_Print(*args):
  return _StGermain._Variable_Print(*args)
_Variable_Print = _StGermain._Variable_Print

def _Variable_Copy(*args):
  return _StGermain._Variable_Copy(*args)
_Variable_Copy = _StGermain._Variable_Copy

def _Variable_Build(*args):
  return _StGermain._Variable_Build(*args)
_Variable_Build = _StGermain._Variable_Build

def _Variable_Initialise(*args):
  return _StGermain._Variable_Initialise(*args)
_Variable_Initialise = _StGermain._Variable_Initialise

def _Variable_Execute(*args):
  return _StGermain._Variable_Execute(*args)
_Variable_Execute = _StGermain._Variable_Execute

def _Variable_AssignFromXML(*args):
  return _StGermain._Variable_AssignFromXML(*args)
_Variable_AssignFromXML = _StGermain._Variable_AssignFromXML

def _Variable_Destroy(*args):
  return _StGermain._Variable_Destroy(*args)
_Variable_Destroy = _StGermain._Variable_Destroy

def _Variable_GetNewArraySize(*args):
  return _StGermain._Variable_GetNewArraySize(*args)
_Variable_GetNewArraySize = _StGermain._Variable_GetNewArraySize

def Variable_SetValue(*args):
  return _StGermain.Variable_SetValue(*args)
Variable_SetValue = _StGermain.Variable_SetValue

def Variable_GetValue(*args):
  return _StGermain.Variable_GetValue(*args)
Variable_GetValue = _StGermain.Variable_GetValue

def Variable_Update(*args):
  return _StGermain.Variable_Update(*args)
Variable_Update = _StGermain.Variable_Update

def Variable_SetValueDoubleAll(*args):
  return _StGermain.Variable_SetValueDoubleAll(*args)
Variable_SetValueDoubleAll = _StGermain.Variable_SetValueDoubleAll

def Variable_SaveToFileAsDoubles(*args):
  return _StGermain.Variable_SaveToFileAsDoubles(*args)
Variable_SaveToFileAsDoubles = _StGermain.Variable_SaveToFileAsDoubles

def Variable_ReadFromFileAsDoubles(*args):
  return _StGermain.Variable_ReadFromFileAsDoubles(*args)
Variable_ReadFromFileAsDoubles = _StGermain.Variable_ReadFromFileAsDoubles

def Variable_ValueCompare(*args):
  return _StGermain.Variable_ValueCompare(*args)
Variable_ValueCompare = _StGermain.Variable_ValueCompare

def Variable_ValueCompareWithinTolerance(*args):
  return _StGermain.Variable_ValueCompareWithinTolerance(*args)
Variable_ValueCompareWithinTolerance = _StGermain.Variable_ValueCompareWithinTolerance

def VariableTypeArrayDeref(*args):
  return _StGermain.VariableTypeArrayDeref(*args)
VariableTypeArrayDeref = _StGermain.VariableTypeArrayDeref
class _AnalyticFunction_Register(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, _AnalyticFunction_Register, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, _AnalyticFunction_Register, name)
    __repr__ = _swig_repr
    __swig_setmethods__["_sizeOfSelf"] = _StGermain._AnalyticFunction_Register__sizeOfSelf_set
    __swig_getmethods__["_sizeOfSelf"] = _StGermain._AnalyticFunction_Register__sizeOfSelf_get
    if _newclass:_sizeOfSelf = _swig_property(_StGermain._AnalyticFunction_Register__sizeOfSelf_get, _StGermain._AnalyticFunction_Register__sizeOfSelf_set)
    __swig_setmethods__["_deleteSelf"] = _StGermain._AnalyticFunction_Register__deleteSelf_set
    __swig_getmethods__["_deleteSelf"] = _StGermain._AnalyticFunction_Register__deleteSelf_get
    if _newclass:_deleteSelf = _swig_property(_StGermain._AnalyticFunction_Register__deleteSelf_get, _StGermain._AnalyticFunction_Register__deleteSelf_set)
    __swig_setmethods__["type"] = _StGermain._AnalyticFunction_Register_type_set
    __swig_getmethods__["type"] = _StGermain._AnalyticFunction_Register_type_get
    if _newclass:type = _swig_property(_StGermain._AnalyticFunction_Register_type_get, _StGermain._AnalyticFunction_Register_type_set)
    __swig_setmethods__["nRefs"] = _StGermain._AnalyticFunction_Register_nRefs_set
    __swig_getmethods__["nRefs"] = _StGermain._AnalyticFunction_Register_nRefs_get
    if _newclass:nRefs = _swig_property(_StGermain._AnalyticFunction_Register_nRefs_get, _StGermain._AnalyticFunction_Register_nRefs_set)
    __swig_setmethods__["_delete"] = _StGermain._AnalyticFunction_Register__delete_set
    __swig_getmethods__["_delete"] = _StGermain._AnalyticFunction_Register__delete_get
    if _newclass:_delete = _swig_property(_StGermain._AnalyticFunction_Register__delete_get, _StGermain._AnalyticFunction_Register__delete_set)
    __swig_setmethods__["_print"] = _StGermain._AnalyticFunction_Register__print_set
    __swig_getmethods__["_print"] = _StGermain._AnalyticFunction_Register__print_get
    if _newclass:_print = _swig_property(_StGermain._AnalyticFunction_Register__print_get, _StGermain._AnalyticFunction_Register__print_set)
    __swig_setmethods__["_copy"] = _StGermain._AnalyticFunction_Register__copy_set
    __swig_getmethods__["_copy"] = _StGermain._AnalyticFunction_Register__copy_get
    if _newclass:_copy = _swig_property(_StGermain._AnalyticFunction_Register__copy_get, _StGermain._AnalyticFunction_Register__copy_set)
    __swig_setmethods__["count"] = _StGermain._AnalyticFunction_Register_count_set
    __swig_getmethods__["count"] = _StGermain._AnalyticFunction_Register_count_get
    if _newclass:count = _swig_property(_StGermain._AnalyticFunction_Register_count_get, _StGermain._AnalyticFunction_Register_count_set)
    __swig_setmethods__["_size"] = _StGermain._AnalyticFunction_Register__size_set
    __swig_getmethods__["_size"] = _StGermain._AnalyticFunction_Register__size_get
    if _newclass:_size = _swig_property(_StGermain._AnalyticFunction_Register__size_get, _StGermain._AnalyticFunction_Register__size_set)
    __swig_setmethods__["_delta"] = _StGermain._AnalyticFunction_Register__delta_set
    __swig_getmethods__["_delta"] = _StGermain._AnalyticFunction_Register__delta_get
    if _newclass:_delta = _swig_property(_StGermain._AnalyticFunction_Register__delta_get, _StGermain._AnalyticFunction_Register__delta_set)
    __swig_setmethods__["_af"] = _StGermain._AnalyticFunction_Register__af_set
    __swig_getmethods__["_af"] = _StGermain._AnalyticFunction_Register__af_get
    if _newclass:_af = _swig_property(_StGermain._AnalyticFunction_Register__af_get, _StGermain._AnalyticFunction_Register__af_set)
    def __init__(self): 
        this = _StGermain.new__AnalyticFunction_Register()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _StGermain.delete__AnalyticFunction_Register
    __del__ = lambda self : None;
_AnalyticFunction_Register_swigregister = _StGermain._AnalyticFunction_Register_swigregister
_AnalyticFunction_Register_swigregister(_AnalyticFunction_Register)
AnalyticFunction_Register_Type = cvar.AnalyticFunction_Register_Type


def AnalyticFunction_Register_New():
  return _StGermain.AnalyticFunction_Register_New()
AnalyticFunction_Register_New = _StGermain.AnalyticFunction_Register_New

def AnalyticFunction_Register_Init(*args):
  return _StGermain.AnalyticFunction_Register_Init(*args)
AnalyticFunction_Register_Init = _StGermain.AnalyticFunction_Register_Init

def _AnalyticFunction_Register_New(*args):
  return _StGermain._AnalyticFunction_Register_New(*args)
_AnalyticFunction_Register_New = _StGermain._AnalyticFunction_Register_New

def _AnalyticFunction_Register_Init(*args):
  return _StGermain._AnalyticFunction_Register_Init(*args)
_AnalyticFunction_Register_Init = _StGermain._AnalyticFunction_Register_Init

def _AnalyticFunction_Register_Delete(*args):
  return _StGermain._AnalyticFunction_Register_Delete(*args)
_AnalyticFunction_Register_Delete = _StGermain._AnalyticFunction_Register_Delete

def _AnalyticFunction_Register_Print(*args):
  return _StGermain._AnalyticFunction_Register_Print(*args)
_AnalyticFunction_Register_Print = _StGermain._AnalyticFunction_Register_Print

def AnalyticFunction_Register_Add(*args):
  return _StGermain.AnalyticFunction_Register_Add(*args)
AnalyticFunction_Register_Add = _StGermain.AnalyticFunction_Register_Add

def AnalyticFunction_Register_GetIndex(*args):
  return _StGermain.AnalyticFunction_Register_GetIndex(*args)
AnalyticFunction_Register_GetIndex = _StGermain.AnalyticFunction_Register_GetIndex

def AnalyticFunction_Register_GetByName(*args):
  return _StGermain.AnalyticFunction_Register_GetByName(*args)
AnalyticFunction_Register_GetByName = _StGermain.AnalyticFunction_Register_GetByName

def AnalyticFunction_Register_PrintNameOfEachFunc(*args):
  return _StGermain.AnalyticFunction_Register_PrintNameOfEachFunc(*args)
AnalyticFunction_Register_PrintNameOfEachFunc = _StGermain.AnalyticFunction_Register_PrintNameOfEachFunc
class _ConditionFunction(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, _ConditionFunction, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, _ConditionFunction, name)
    __repr__ = _swig_repr
    __swig_setmethods__["_sizeOfSelf"] = _StGermain._ConditionFunction__sizeOfSelf_set
    __swig_getmethods__["_sizeOfSelf"] = _StGermain._ConditionFunction__sizeOfSelf_get
    if _newclass:_sizeOfSelf = _swig_property(_StGermain._ConditionFunction__sizeOfSelf_get, _StGermain._ConditionFunction__sizeOfSelf_set)
    __swig_setmethods__["_deleteSelf"] = _StGermain._ConditionFunction__deleteSelf_set
    __swig_getmethods__["_deleteSelf"] = _StGermain._ConditionFunction__deleteSelf_get
    if _newclass:_deleteSelf = _swig_property(_StGermain._ConditionFunction__deleteSelf_get, _StGermain._ConditionFunction__deleteSelf_set)
    __swig_setmethods__["type"] = _StGermain._ConditionFunction_type_set
    __swig_getmethods__["type"] = _StGermain._ConditionFunction_type_get
    if _newclass:type = _swig_property(_StGermain._ConditionFunction_type_get, _StGermain._ConditionFunction_type_set)
    __swig_setmethods__["nRefs"] = _StGermain._ConditionFunction_nRefs_set
    __swig_getmethods__["nRefs"] = _StGermain._ConditionFunction_nRefs_get
    if _newclass:nRefs = _swig_property(_StGermain._ConditionFunction_nRefs_get, _StGermain._ConditionFunction_nRefs_set)
    __swig_setmethods__["_delete"] = _StGermain._ConditionFunction__delete_set
    __swig_getmethods__["_delete"] = _StGermain._ConditionFunction__delete_get
    if _newclass:_delete = _swig_property(_StGermain._ConditionFunction__delete_get, _StGermain._ConditionFunction__delete_set)
    __swig_setmethods__["_print"] = _StGermain._ConditionFunction__print_set
    __swig_getmethods__["_print"] = _StGermain._ConditionFunction__print_get
    if _newclass:_print = _swig_property(_StGermain._ConditionFunction__print_get, _StGermain._ConditionFunction__print_set)
    __swig_setmethods__["_copy"] = _StGermain._ConditionFunction__copy_set
    __swig_getmethods__["_copy"] = _StGermain._ConditionFunction__copy_get
    if _newclass:_copy = _swig_property(_StGermain._ConditionFunction__copy_get, _StGermain._ConditionFunction__copy_set)
    __swig_setmethods__["dictionary"] = _StGermain._ConditionFunction_dictionary_set
    __swig_getmethods__["dictionary"] = _StGermain._ConditionFunction_dictionary_get
    if _newclass:dictionary = _swig_property(_StGermain._ConditionFunction_dictionary_get, _StGermain._ConditionFunction_dictionary_set)
    __swig_setmethods__["apply"] = _StGermain._ConditionFunction_apply_set
    __swig_getmethods__["apply"] = _StGermain._ConditionFunction_apply_get
    if _newclass:apply = _swig_property(_StGermain._ConditionFunction_apply_get, _StGermain._ConditionFunction_apply_set)
    __swig_setmethods__["init"] = _StGermain._ConditionFunction_init_set
    __swig_getmethods__["init"] = _StGermain._ConditionFunction_init_get
    if _newclass:init = _swig_property(_StGermain._ConditionFunction_init_get, _StGermain._ConditionFunction_init_set)
    __swig_setmethods__["name"] = _StGermain._ConditionFunction_name_set
    __swig_getmethods__["name"] = _StGermain._ConditionFunction_name_get
    if _newclass:name = _swig_property(_StGermain._ConditionFunction_name_get, _StGermain._ConditionFunction_name_set)
    __swig_setmethods__["data"] = _StGermain._ConditionFunction_data_set
    __swig_getmethods__["data"] = _StGermain._ConditionFunction_data_get
    if _newclass:data = _swig_property(_StGermain._ConditionFunction_data_get, _StGermain._ConditionFunction_data_set)
    def __init__(self): 
        this = _StGermain.new__ConditionFunction()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _StGermain.delete__ConditionFunction
    __del__ = lambda self : None;
_ConditionFunction_swigregister = _StGermain._ConditionFunction_swigregister
_ConditionFunction_swigregister(_ConditionFunction)
ConditionFunction_Type = cvar.ConditionFunction_Type


def ConditionFunction_New(*args):
  return _StGermain.ConditionFunction_New(*args)
ConditionFunction_New = _StGermain.ConditionFunction_New

def ConditionFunction_New2(*args):
  return _StGermain.ConditionFunction_New2(*args)
ConditionFunction_New2 = _StGermain.ConditionFunction_New2

def _ConditionFunction_New(*args):
  return _StGermain._ConditionFunction_New(*args)
_ConditionFunction_New = _StGermain._ConditionFunction_New

def _ConditionFunction_Init(*args):
  return _StGermain._ConditionFunction_Init(*args)
_ConditionFunction_Init = _StGermain._ConditionFunction_Init

def _ConditionFunction_Delete(*args):
  return _StGermain._ConditionFunction_Delete(*args)
_ConditionFunction_Delete = _StGermain._ConditionFunction_Delete

def _ConditionFunction_Print(*args):
  return _StGermain._ConditionFunction_Print(*args)
_ConditionFunction_Print = _StGermain._ConditionFunction_Print

def _ConditionFunction_Apply(*args):
  return _StGermain._ConditionFunction_Apply(*args)
_ConditionFunction_Apply = _StGermain._ConditionFunction_Apply
class _ConditionFunction_Register(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, _ConditionFunction_Register, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, _ConditionFunction_Register, name)
    __repr__ = _swig_repr
    __swig_setmethods__["_sizeOfSelf"] = _StGermain._ConditionFunction_Register__sizeOfSelf_set
    __swig_getmethods__["_sizeOfSelf"] = _StGermain._ConditionFunction_Register__sizeOfSelf_get
    if _newclass:_sizeOfSelf = _swig_property(_StGermain._ConditionFunction_Register__sizeOfSelf_get, _StGermain._ConditionFunction_Register__sizeOfSelf_set)
    __swig_setmethods__["_deleteSelf"] = _StGermain._ConditionFunction_Register__deleteSelf_set
    __swig_getmethods__["_deleteSelf"] = _StGermain._ConditionFunction_Register__deleteSelf_get
    if _newclass:_deleteSelf = _swig_property(_StGermain._ConditionFunction_Register__deleteSelf_get, _StGermain._ConditionFunction_Register__deleteSelf_set)
    __swig_setmethods__["type"] = _StGermain._ConditionFunction_Register_type_set
    __swig_getmethods__["type"] = _StGermain._ConditionFunction_Register_type_get
    if _newclass:type = _swig_property(_StGermain._ConditionFunction_Register_type_get, _StGermain._ConditionFunction_Register_type_set)
    __swig_setmethods__["nRefs"] = _StGermain._ConditionFunction_Register_nRefs_set
    __swig_getmethods__["nRefs"] = _StGermain._ConditionFunction_Register_nRefs_get
    if _newclass:nRefs = _swig_property(_StGermain._ConditionFunction_Register_nRefs_get, _StGermain._ConditionFunction_Register_nRefs_set)
    __swig_setmethods__["_delete"] = _StGermain._ConditionFunction_Register__delete_set
    __swig_getmethods__["_delete"] = _StGermain._ConditionFunction_Register__delete_get
    if _newclass:_delete = _swig_property(_StGermain._ConditionFunction_Register__delete_get, _StGermain._ConditionFunction_Register__delete_set)
    __swig_setmethods__["_print"] = _StGermain._ConditionFunction_Register__print_set
    __swig_getmethods__["_print"] = _StGermain._ConditionFunction_Register__print_get
    if _newclass:_print = _swig_property(_StGermain._ConditionFunction_Register__print_get, _StGermain._ConditionFunction_Register__print_set)
    __swig_setmethods__["_copy"] = _StGermain._ConditionFunction_Register__copy_set
    __swig_getmethods__["_copy"] = _StGermain._ConditionFunction_Register__copy_get
    if _newclass:_copy = _swig_property(_StGermain._ConditionFunction_Register__copy_get, _StGermain._ConditionFunction_Register__copy_set)
    __swig_setmethods__["count"] = _StGermain._ConditionFunction_Register_count_set
    __swig_getmethods__["count"] = _StGermain._ConditionFunction_Register_count_get
    if _newclass:count = _swig_property(_StGermain._ConditionFunction_Register_count_get, _StGermain._ConditionFunction_Register_count_set)
    __swig_setmethods__["_size"] = _StGermain._ConditionFunction_Register__size_set
    __swig_getmethods__["_size"] = _StGermain._ConditionFunction_Register__size_get
    if _newclass:_size = _swig_property(_StGermain._ConditionFunction_Register__size_get, _StGermain._ConditionFunction_Register__size_set)
    __swig_setmethods__["_delta"] = _StGermain._ConditionFunction_Register__delta_set
    __swig_getmethods__["_delta"] = _StGermain._ConditionFunction_Register__delta_get
    if _newclass:_delta = _swig_property(_StGermain._ConditionFunction_Register__delta_get, _StGermain._ConditionFunction_Register__delta_set)
    __swig_setmethods__["_cf"] = _StGermain._ConditionFunction_Register__cf_set
    __swig_getmethods__["_cf"] = _StGermain._ConditionFunction_Register__cf_get
    if _newclass:_cf = _swig_property(_StGermain._ConditionFunction_Register__cf_get, _StGermain._ConditionFunction_Register__cf_set)
    def __init__(self): 
        this = _StGermain.new__ConditionFunction_Register()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _StGermain.delete__ConditionFunction_Register
    __del__ = lambda self : None;
_ConditionFunction_Register_swigregister = _StGermain._ConditionFunction_Register_swigregister
_ConditionFunction_Register_swigregister(_ConditionFunction_Register)
ConditionFunction_Register_Type = cvar.ConditionFunction_Register_Type


def ConditionFunction_Register_New():
  return _StGermain.ConditionFunction_Register_New()
ConditionFunction_Register_New = _StGermain.ConditionFunction_Register_New

def ConditionFunction_Register_Init(*args):
  return _StGermain.ConditionFunction_Register_Init(*args)
ConditionFunction_Register_Init = _StGermain.ConditionFunction_Register_Init

def _ConditionFunction_Register_New(*args):
  return _StGermain._ConditionFunction_Register_New(*args)
_ConditionFunction_Register_New = _StGermain._ConditionFunction_Register_New

def _ConditionFunction_Register_Init(*args):
  return _StGermain._ConditionFunction_Register_Init(*args)
_ConditionFunction_Register_Init = _StGermain._ConditionFunction_Register_Init

def _ConditionFunction_Register_Delete(*args):
  return _StGermain._ConditionFunction_Register_Delete(*args)
_ConditionFunction_Register_Delete = _StGermain._ConditionFunction_Register_Delete

def _ConditionFunction_Register_Print(*args):
  return _StGermain._ConditionFunction_Register_Print(*args)
_ConditionFunction_Register_Print = _StGermain._ConditionFunction_Register_Print

def ConditionFunction_Register_Add(*args):
  return _StGermain.ConditionFunction_Register_Add(*args)
ConditionFunction_Register_Add = _StGermain.ConditionFunction_Register_Add

def ConditionFunction_Register_GetIndex(*args):
  return _StGermain.ConditionFunction_Register_GetIndex(*args)
ConditionFunction_Register_GetIndex = _StGermain.ConditionFunction_Register_GetIndex

def ConditionFunction_Register_PrintNameOfEachFunc(*args):
  return _StGermain.ConditionFunction_Register_PrintNameOfEachFunc(*args)
ConditionFunction_Register_PrintNameOfEachFunc = _StGermain.ConditionFunction_Register_PrintNameOfEachFunc
class _Variable_Register(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, _Variable_Register, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, _Variable_Register, name)
    __repr__ = _swig_repr
    __swig_setmethods__["_sizeOfSelf"] = _StGermain._Variable_Register__sizeOfSelf_set
    __swig_getmethods__["_sizeOfSelf"] = _StGermain._Variable_Register__sizeOfSelf_get
    if _newclass:_sizeOfSelf = _swig_property(_StGermain._Variable_Register__sizeOfSelf_get, _StGermain._Variable_Register__sizeOfSelf_set)
    __swig_setmethods__["_deleteSelf"] = _StGermain._Variable_Register__deleteSelf_set
    __swig_getmethods__["_deleteSelf"] = _StGermain._Variable_Register__deleteSelf_get
    if _newclass:_deleteSelf = _swig_property(_StGermain._Variable_Register__deleteSelf_get, _StGermain._Variable_Register__deleteSelf_set)
    __swig_setmethods__["type"] = _StGermain._Variable_Register_type_set
    __swig_getmethods__["type"] = _StGermain._Variable_Register_type_get
    if _newclass:type = _swig_property(_StGermain._Variable_Register_type_get, _StGermain._Variable_Register_type_set)
    __swig_setmethods__["nRefs"] = _StGermain._Variable_Register_nRefs_set
    __swig_getmethods__["nRefs"] = _StGermain._Variable_Register_nRefs_get
    if _newclass:nRefs = _swig_property(_StGermain._Variable_Register_nRefs_get, _StGermain._Variable_Register_nRefs_set)
    __swig_setmethods__["_delete"] = _StGermain._Variable_Register__delete_set
    __swig_getmethods__["_delete"] = _StGermain._Variable_Register__delete_get
    if _newclass:_delete = _swig_property(_StGermain._Variable_Register__delete_get, _StGermain._Variable_Register__delete_set)
    __swig_setmethods__["_print"] = _StGermain._Variable_Register__print_set
    __swig_getmethods__["_print"] = _StGermain._Variable_Register__print_get
    if _newclass:_print = _swig_property(_StGermain._Variable_Register__print_get, _StGermain._Variable_Register__print_set)
    __swig_setmethods__["_copy"] = _StGermain._Variable_Register__copy_set
    __swig_getmethods__["_copy"] = _StGermain._Variable_Register__copy_get
    if _newclass:_copy = _swig_property(_StGermain._Variable_Register__copy_get, _StGermain._Variable_Register__copy_set)
    __swig_setmethods__["count"] = _StGermain._Variable_Register_count_set
    __swig_getmethods__["count"] = _StGermain._Variable_Register_count_get
    if _newclass:count = _swig_property(_StGermain._Variable_Register_count_get, _StGermain._Variable_Register_count_set)
    __swig_setmethods__["_size"] = _StGermain._Variable_Register__size_set
    __swig_getmethods__["_size"] = _StGermain._Variable_Register__size_get
    if _newclass:_size = _swig_property(_StGermain._Variable_Register__size_get, _StGermain._Variable_Register__size_set)
    __swig_setmethods__["_delta"] = _StGermain._Variable_Register__delta_set
    __swig_getmethods__["_delta"] = _StGermain._Variable_Register__delta_get
    if _newclass:_delta = _swig_property(_StGermain._Variable_Register__delta_get, _StGermain._Variable_Register__delta_set)
    __swig_setmethods__["_variable"] = _StGermain._Variable_Register__variable_set
    __swig_getmethods__["_variable"] = _StGermain._Variable_Register__variable_get
    if _newclass:_variable = _swig_property(_StGermain._Variable_Register__variable_get, _StGermain._Variable_Register__variable_set)
    __swig_setmethods__["errorStream"] = _StGermain._Variable_Register_errorStream_set
    __swig_getmethods__["errorStream"] = _StGermain._Variable_Register_errorStream_get
    if _newclass:errorStream = _swig_property(_StGermain._Variable_Register_errorStream_get, _StGermain._Variable_Register_errorStream_set)
    def __init__(self): 
        this = _StGermain.new__Variable_Register()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _StGermain.delete__Variable_Register
    __del__ = lambda self : None;
_Variable_Register_swigregister = _StGermain._Variable_Register_swigregister
_Variable_Register_swigregister(_Variable_Register)
Variable_Register_Type = cvar.Variable_Register_Type


def Variable_Register_New():
  return _StGermain.Variable_Register_New()
Variable_Register_New = _StGermain.Variable_Register_New

def Variable_Register_Init(*args):
  return _StGermain.Variable_Register_Init(*args)
Variable_Register_Init = _StGermain.Variable_Register_Init

def _Variable_Register_New(*args):
  return _StGermain._Variable_Register_New(*args)
_Variable_Register_New = _StGermain._Variable_Register_New

def _Variable_Register_Init(*args):
  return _StGermain._Variable_Register_Init(*args)
_Variable_Register_Init = _StGermain._Variable_Register_Init

def _Variable_Register_Delete(*args):
  return _StGermain._Variable_Register_Delete(*args)
_Variable_Register_Delete = _StGermain._Variable_Register_Delete

def _Variable_Register_Print(*args):
  return _StGermain._Variable_Register_Print(*args)
_Variable_Register_Print = _StGermain._Variable_Register_Print

def _Variable_Register_Copy(*args):
  return _StGermain._Variable_Register_Copy(*args)
_Variable_Register_Copy = _StGermain._Variable_Register_Copy

def Variable_Register_Add(*args):
  return _StGermain.Variable_Register_Add(*args)
Variable_Register_Add = _StGermain.Variable_Register_Add

def Variable_Register_BuildAll(*args):
  return _StGermain.Variable_Register_BuildAll(*args)
Variable_Register_BuildAll = _StGermain.Variable_Register_BuildAll

def Variable_Register_GetIndex(*args):
  return _StGermain.Variable_Register_GetIndex(*args)
Variable_Register_GetIndex = _StGermain.Variable_Register_GetIndex

def Variable_Register_GetByName(*args):
  return _StGermain.Variable_Register_GetByName(*args)
Variable_Register_GetByName = _StGermain.Variable_Register_GetByName

def Variable_Register_GetByIndex(*args):
  return _StGermain.Variable_Register_GetByIndex(*args)
Variable_Register_GetByIndex = _StGermain.Variable_Register_GetByIndex
class _VariableCondition_Register_Entry(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, _VariableCondition_Register_Entry, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, _VariableCondition_Register_Entry, name)
    __repr__ = _swig_repr
    __swig_setmethods__["type"] = _StGermain._VariableCondition_Register_Entry_type_set
    __swig_getmethods__["type"] = _StGermain._VariableCondition_Register_Entry_type_get
    if _newclass:type = _swig_property(_StGermain._VariableCondition_Register_Entry_type_get, _StGermain._VariableCondition_Register_Entry_type_set)
    __swig_setmethods__["factory"] = _StGermain._VariableCondition_Register_Entry_factory_set
    __swig_getmethods__["factory"] = _StGermain._VariableCondition_Register_Entry_factory_get
    if _newclass:factory = _swig_property(_StGermain._VariableCondition_Register_Entry_factory_get, _StGermain._VariableCondition_Register_Entry_factory_set)
    def __init__(self): 
        this = _StGermain.new__VariableCondition_Register_Entry()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _StGermain.delete__VariableCondition_Register_Entry
    __del__ = lambda self : None;
_VariableCondition_Register_Entry_swigregister = _StGermain._VariableCondition_Register_Entry_swigregister
_VariableCondition_Register_Entry_swigregister(_VariableCondition_Register_Entry)
VariableCondition_Register_Type = cvar.VariableCondition_Register_Type

class _VariableCondition_Register(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, _VariableCondition_Register, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, _VariableCondition_Register, name)
    __repr__ = _swig_repr
    __swig_setmethods__["_sizeOfSelf"] = _StGermain._VariableCondition_Register__sizeOfSelf_set
    __swig_getmethods__["_sizeOfSelf"] = _StGermain._VariableCondition_Register__sizeOfSelf_get
    if _newclass:_sizeOfSelf = _swig_property(_StGermain._VariableCondition_Register__sizeOfSelf_get, _StGermain._VariableCondition_Register__sizeOfSelf_set)
    __swig_setmethods__["_deleteSelf"] = _StGermain._VariableCondition_Register__deleteSelf_set
    __swig_getmethods__["_deleteSelf"] = _StGermain._VariableCondition_Register__deleteSelf_get
    if _newclass:_deleteSelf = _swig_property(_StGermain._VariableCondition_Register__deleteSelf_get, _StGermain._VariableCondition_Register__deleteSelf_set)
    __swig_setmethods__["type"] = _StGermain._VariableCondition_Register_type_set
    __swig_getmethods__["type"] = _StGermain._VariableCondition_Register_type_get
    if _newclass:type = _swig_property(_StGermain._VariableCondition_Register_type_get, _StGermain._VariableCondition_Register_type_set)
    __swig_setmethods__["nRefs"] = _StGermain._VariableCondition_Register_nRefs_set
    __swig_getmethods__["nRefs"] = _StGermain._VariableCondition_Register_nRefs_get
    if _newclass:nRefs = _swig_property(_StGermain._VariableCondition_Register_nRefs_get, _StGermain._VariableCondition_Register_nRefs_set)
    __swig_setmethods__["_delete"] = _StGermain._VariableCondition_Register__delete_set
    __swig_getmethods__["_delete"] = _StGermain._VariableCondition_Register__delete_get
    if _newclass:_delete = _swig_property(_StGermain._VariableCondition_Register__delete_get, _StGermain._VariableCondition_Register__delete_set)
    __swig_setmethods__["_print"] = _StGermain._VariableCondition_Register__print_set
    __swig_getmethods__["_print"] = _StGermain._VariableCondition_Register__print_get
    if _newclass:_print = _swig_property(_StGermain._VariableCondition_Register__print_get, _StGermain._VariableCondition_Register__print_set)
    __swig_setmethods__["_copy"] = _StGermain._VariableCondition_Register__copy_set
    __swig_getmethods__["_copy"] = _StGermain._VariableCondition_Register__copy_get
    if _newclass:_copy = _swig_property(_StGermain._VariableCondition_Register__copy_get, _StGermain._VariableCondition_Register__copy_set)
    __swig_setmethods__["count"] = _StGermain._VariableCondition_Register_count_set
    __swig_getmethods__["count"] = _StGermain._VariableCondition_Register_count_get
    if _newclass:count = _swig_property(_StGermain._VariableCondition_Register_count_get, _StGermain._VariableCondition_Register_count_set)
    __swig_setmethods__["_size"] = _StGermain._VariableCondition_Register__size_set
    __swig_getmethods__["_size"] = _StGermain._VariableCondition_Register__size_get
    if _newclass:_size = _swig_property(_StGermain._VariableCondition_Register__size_get, _StGermain._VariableCondition_Register__size_set)
    __swig_setmethods__["_delta"] = _StGermain._VariableCondition_Register__delta_set
    __swig_getmethods__["_delta"] = _StGermain._VariableCondition_Register__delta_get
    if _newclass:_delta = _swig_property(_StGermain._VariableCondition_Register__delta_get, _StGermain._VariableCondition_Register__delta_set)
    __swig_setmethods__["entry"] = _StGermain._VariableCondition_Register_entry_set
    __swig_getmethods__["entry"] = _StGermain._VariableCondition_Register_entry_get
    if _newclass:entry = _swig_property(_StGermain._VariableCondition_Register_entry_get, _StGermain._VariableCondition_Register_entry_set)
    def __init__(self): 
        this = _StGermain.new__VariableCondition_Register()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _StGermain.delete__VariableCondition_Register
    __del__ = lambda self : None;
_VariableCondition_Register_swigregister = _StGermain._VariableCondition_Register_swigregister
_VariableCondition_Register_swigregister(_VariableCondition_Register)


def VariableCondition_Register_New():
  return _StGermain.VariableCondition_Register_New()
VariableCondition_Register_New = _StGermain.VariableCondition_Register_New

def VariableCondition_Register_Init(*args):
  return _StGermain.VariableCondition_Register_Init(*args)
VariableCondition_Register_Init = _StGermain.VariableCondition_Register_Init

def _VariableCondition_Register_New(*args):
  return _StGermain._VariableCondition_Register_New(*args)
_VariableCondition_Register_New = _StGermain._VariableCondition_Register_New

def _VariableCondition_Register_Init(*args):
  return _StGermain._VariableCondition_Register_Init(*args)
_VariableCondition_Register_Init = _StGermain._VariableCondition_Register_Init

def _VariableCondition_Register_Delete(*args):
  return _StGermain._VariableCondition_Register_Delete(*args)
_VariableCondition_Register_Delete = _StGermain._VariableCondition_Register_Delete

def _VariableCondition_Register_Print(*args):
  return _StGermain._VariableCondition_Register_Print(*args)
_VariableCondition_Register_Print = _StGermain._VariableCondition_Register_Print

def VariableCondition_Register_Add(*args):
  return _StGermain.VariableCondition_Register_Add(*args)
VariableCondition_Register_Add = _StGermain.VariableCondition_Register_Add

def VariableCondition_Register_GetIndex(*args):
  return _StGermain.VariableCondition_Register_GetIndex(*args)
VariableCondition_Register_GetIndex = _StGermain.VariableCondition_Register_GetIndex

def _VariableCondition_Register_At(*args):
  return _StGermain._VariableCondition_Register_At(*args)
_VariableCondition_Register_At = _StGermain._VariableCondition_Register_At

def VariableCondition_Register_CreateNew(*args):
  return _StGermain.VariableCondition_Register_CreateNew(*args)
VariableCondition_Register_CreateNew = _StGermain.VariableCondition_Register_CreateNew
class VariableCondition_Value_Array(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, VariableCondition_Value_Array, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, VariableCondition_Value_Array, name)
    __repr__ = _swig_repr
    __swig_setmethods__["size"] = _StGermain.VariableCondition_Value_Array_size_set
    __swig_getmethods__["size"] = _StGermain.VariableCondition_Value_Array_size_get
    if _newclass:size = _swig_property(_StGermain.VariableCondition_Value_Array_size_get, _StGermain.VariableCondition_Value_Array_size_set)
    __swig_setmethods__["array"] = _StGermain.VariableCondition_Value_Array_array_set
    __swig_getmethods__["array"] = _StGermain.VariableCondition_Value_Array_array_get
    if _newclass:array = _swig_property(_StGermain.VariableCondition_Value_Array_array_get, _StGermain.VariableCondition_Value_Array_array_set)
    def __init__(self): 
        this = _StGermain.new_VariableCondition_Value_Array()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _StGermain.delete_VariableCondition_Value_Array
    __del__ = lambda self : None;
VariableCondition_Value_Array_swigregister = _StGermain.VariableCondition_Value_Array_swigregister
VariableCondition_Value_Array_swigregister(VariableCondition_Value_Array)
VariableCondition_Type = cvar.VariableCondition_Type

class VariableCondition_Value_AsType(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, VariableCondition_Value_AsType, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, VariableCondition_Value_AsType, name)
    __repr__ = _swig_repr
    __swig_setmethods__["typeDouble"] = _StGermain.VariableCondition_Value_AsType_typeDouble_set
    __swig_getmethods__["typeDouble"] = _StGermain.VariableCondition_Value_AsType_typeDouble_get
    if _newclass:typeDouble = _swig_property(_StGermain.VariableCondition_Value_AsType_typeDouble_get, _StGermain.VariableCondition_Value_AsType_typeDouble_set)
    __swig_setmethods__["typeInt"] = _StGermain.VariableCondition_Value_AsType_typeInt_set
    __swig_getmethods__["typeInt"] = _StGermain.VariableCondition_Value_AsType_typeInt_get
    if _newclass:typeInt = _swig_property(_StGermain.VariableCondition_Value_AsType_typeInt_get, _StGermain.VariableCondition_Value_AsType_typeInt_set)
    __swig_setmethods__["typeShort"] = _StGermain.VariableCondition_Value_AsType_typeShort_set
    __swig_getmethods__["typeShort"] = _StGermain.VariableCondition_Value_AsType_typeShort_get
    if _newclass:typeShort = _swig_property(_StGermain.VariableCondition_Value_AsType_typeShort_get, _StGermain.VariableCondition_Value_AsType_typeShort_set)
    __swig_setmethods__["typeChar"] = _StGermain.VariableCondition_Value_AsType_typeChar_set
    __swig_getmethods__["typeChar"] = _StGermain.VariableCondition_Value_AsType_typeChar_get
    if _newclass:typeChar = _swig_property(_StGermain.VariableCondition_Value_AsType_typeChar_get, _StGermain.VariableCondition_Value_AsType_typeChar_set)
    __swig_setmethods__["typePtr"] = _StGermain.VariableCondition_Value_AsType_typePtr_set
    __swig_getmethods__["typePtr"] = _StGermain.VariableCondition_Value_AsType_typePtr_get
    if _newclass:typePtr = _swig_property(_StGermain.VariableCondition_Value_AsType_typePtr_get, _StGermain.VariableCondition_Value_AsType_typePtr_set)
    __swig_setmethods__["typeArray"] = _StGermain.VariableCondition_Value_AsType_typeArray_set
    __swig_getmethods__["typeArray"] = _StGermain.VariableCondition_Value_AsType_typeArray_get
    if _newclass:typeArray = _swig_property(_StGermain.VariableCondition_Value_AsType_typeArray_get, _StGermain.VariableCondition_Value_AsType_typeArray_set)
    __swig_setmethods__["typeCFIndex"] = _StGermain.VariableCondition_Value_AsType_typeCFIndex_set
    __swig_getmethods__["typeCFIndex"] = _StGermain.VariableCondition_Value_AsType_typeCFIndex_get
    if _newclass:typeCFIndex = _swig_property(_StGermain.VariableCondition_Value_AsType_typeCFIndex_get, _StGermain.VariableCondition_Value_AsType_typeCFIndex_set)
    def __init__(self): 
        this = _StGermain.new_VariableCondition_Value_AsType()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _StGermain.delete_VariableCondition_Value_AsType
    __del__ = lambda self : None;
VariableCondition_Value_AsType_swigregister = _StGermain.VariableCondition_Value_AsType_swigregister
VariableCondition_Value_AsType_swigregister(VariableCondition_Value_AsType)

class _VariableCondition_Value(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, _VariableCondition_Value, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, _VariableCondition_Value, name)
    __repr__ = _swig_repr
    __swig_setmethods__["type"] = _StGermain._VariableCondition_Value_type_set
    __swig_getmethods__["type"] = _StGermain._VariableCondition_Value_type_get
    if _newclass:type = _swig_property(_StGermain._VariableCondition_Value_type_get, _StGermain._VariableCondition_Value_type_set)
    __swig_setmethods__["atType"] = _StGermain._VariableCondition_Value_atType_set
    __swig_getmethods__["atType"] = _StGermain._VariableCondition_Value_atType_get
    if _newclass:atType = _swig_property(_StGermain._VariableCondition_Value_atType_get, _StGermain._VariableCondition_Value_atType_set)
    def __init__(self): 
        this = _StGermain.new__VariableCondition_Value()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _StGermain.delete__VariableCondition_Value
    __del__ = lambda self : None;
_VariableCondition_Value_swigregister = _StGermain._VariableCondition_Value_swigregister
_VariableCondition_Value_swigregister(_VariableCondition_Value)

class _VariableCondition_Tuple(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, _VariableCondition_Tuple, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, _VariableCondition_Tuple, name)
    __repr__ = _swig_repr
    __swig_setmethods__["varIndex"] = _StGermain._VariableCondition_Tuple_varIndex_set
    __swig_getmethods__["varIndex"] = _StGermain._VariableCondition_Tuple_varIndex_get
    if _newclass:varIndex = _swig_property(_StGermain._VariableCondition_Tuple_varIndex_get, _StGermain._VariableCondition_Tuple_varIndex_set)
    __swig_setmethods__["valIndex"] = _StGermain._VariableCondition_Tuple_valIndex_set
    __swig_getmethods__["valIndex"] = _StGermain._VariableCondition_Tuple_valIndex_get
    if _newclass:valIndex = _swig_property(_StGermain._VariableCondition_Tuple_valIndex_get, _StGermain._VariableCondition_Tuple_valIndex_set)
    def __init__(self): 
        this = _StGermain.new__VariableCondition_Tuple()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _StGermain.delete__VariableCondition_Tuple
    __del__ = lambda self : None;
_VariableCondition_Tuple_swigregister = _StGermain._VariableCondition_Tuple_swigregister
_VariableCondition_Tuple_swigregister(_VariableCondition_Tuple)

class _VariableCondition(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, _VariableCondition, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, _VariableCondition, name)
    __repr__ = _swig_repr
    __swig_setmethods__["_sizeOfSelf"] = _StGermain._VariableCondition__sizeOfSelf_set
    __swig_getmethods__["_sizeOfSelf"] = _StGermain._VariableCondition__sizeOfSelf_get
    if _newclass:_sizeOfSelf = _swig_property(_StGermain._VariableCondition__sizeOfSelf_get, _StGermain._VariableCondition__sizeOfSelf_set)
    __swig_setmethods__["_deleteSelf"] = _StGermain._VariableCondition__deleteSelf_set
    __swig_getmethods__["_deleteSelf"] = _StGermain._VariableCondition__deleteSelf_get
    if _newclass:_deleteSelf = _swig_property(_StGermain._VariableCondition__deleteSelf_get, _StGermain._VariableCondition__deleteSelf_set)
    __swig_setmethods__["type"] = _StGermain._VariableCondition_type_set
    __swig_getmethods__["type"] = _StGermain._VariableCondition_type_get
    if _newclass:type = _swig_property(_StGermain._VariableCondition_type_get, _StGermain._VariableCondition_type_set)
    __swig_setmethods__["nRefs"] = _StGermain._VariableCondition_nRefs_set
    __swig_getmethods__["nRefs"] = _StGermain._VariableCondition_nRefs_get
    if _newclass:nRefs = _swig_property(_StGermain._VariableCondition_nRefs_get, _StGermain._VariableCondition_nRefs_set)
    __swig_setmethods__["_delete"] = _StGermain._VariableCondition__delete_set
    __swig_getmethods__["_delete"] = _StGermain._VariableCondition__delete_get
    if _newclass:_delete = _swig_property(_StGermain._VariableCondition__delete_get, _StGermain._VariableCondition__delete_set)
    __swig_setmethods__["_print"] = _StGermain._VariableCondition__print_set
    __swig_getmethods__["_print"] = _StGermain._VariableCondition__print_get
    if _newclass:_print = _swig_property(_StGermain._VariableCondition__print_get, _StGermain._VariableCondition__print_set)
    __swig_setmethods__["_copy"] = _StGermain._VariableCondition__copy_set
    __swig_getmethods__["_copy"] = _StGermain._VariableCondition__copy_get
    if _newclass:_copy = _swig_property(_StGermain._VariableCondition__copy_get, _StGermain._VariableCondition__copy_set)
    __swig_setmethods__["name"] = _StGermain._VariableCondition_name_set
    __swig_getmethods__["name"] = _StGermain._VariableCondition_name_get
    if _newclass:name = _swig_property(_StGermain._VariableCondition_name_get, _StGermain._VariableCondition_name_set)
    __swig_setmethods__["nameAllocationType"] = _StGermain._VariableCondition_nameAllocationType_set
    __swig_getmethods__["nameAllocationType"] = _StGermain._VariableCondition_nameAllocationType_get
    if _newclass:nameAllocationType = _swig_property(_StGermain._VariableCondition_nameAllocationType_get, _StGermain._VariableCondition_nameAllocationType_set)
    __swig_setmethods__["_defaultConstructor"] = _StGermain._VariableCondition__defaultConstructor_set
    __swig_getmethods__["_defaultConstructor"] = _StGermain._VariableCondition__defaultConstructor_get
    if _newclass:_defaultConstructor = _swig_property(_StGermain._VariableCondition__defaultConstructor_get, _StGermain._VariableCondition__defaultConstructor_set)
    __swig_setmethods__["_construct"] = _StGermain._VariableCondition__construct_set
    __swig_getmethods__["_construct"] = _StGermain._VariableCondition__construct_get
    if _newclass:_construct = _swig_property(_StGermain._VariableCondition__construct_get, _StGermain._VariableCondition__construct_set)
    __swig_setmethods__["_build"] = _StGermain._VariableCondition__build_set
    __swig_getmethods__["_build"] = _StGermain._VariableCondition__build_get
    if _newclass:_build = _swig_property(_StGermain._VariableCondition__build_get, _StGermain._VariableCondition__build_set)
    __swig_setmethods__["_initialise"] = _StGermain._VariableCondition__initialise_set
    __swig_getmethods__["_initialise"] = _StGermain._VariableCondition__initialise_get
    if _newclass:_initialise = _swig_property(_StGermain._VariableCondition__initialise_get, _StGermain._VariableCondition__initialise_set)
    __swig_setmethods__["_execute"] = _StGermain._VariableCondition__execute_set
    __swig_getmethods__["_execute"] = _StGermain._VariableCondition__execute_get
    if _newclass:_execute = _swig_property(_StGermain._VariableCondition__execute_get, _StGermain._VariableCondition__execute_set)
    __swig_setmethods__["_destroy"] = _StGermain._VariableCondition__destroy_set
    __swig_getmethods__["_destroy"] = _StGermain._VariableCondition__destroy_get
    if _newclass:_destroy = _swig_property(_StGermain._VariableCondition__destroy_get, _StGermain._VariableCondition__destroy_set)
    __swig_setmethods__["isConstructed"] = _StGermain._VariableCondition_isConstructed_set
    __swig_getmethods__["isConstructed"] = _StGermain._VariableCondition_isConstructed_get
    if _newclass:isConstructed = _swig_property(_StGermain._VariableCondition_isConstructed_get, _StGermain._VariableCondition_isConstructed_set)
    __swig_setmethods__["isBuilt"] = _StGermain._VariableCondition_isBuilt_set
    __swig_getmethods__["isBuilt"] = _StGermain._VariableCondition_isBuilt_get
    if _newclass:isBuilt = _swig_property(_StGermain._VariableCondition_isBuilt_get, _StGermain._VariableCondition_isBuilt_set)
    __swig_setmethods__["isInitialised"] = _StGermain._VariableCondition_isInitialised_set
    __swig_getmethods__["isInitialised"] = _StGermain._VariableCondition_isInitialised_get
    if _newclass:isInitialised = _swig_property(_StGermain._VariableCondition_isInitialised_get, _StGermain._VariableCondition_isInitialised_set)
    __swig_setmethods__["hasExecuted"] = _StGermain._VariableCondition_hasExecuted_set
    __swig_getmethods__["hasExecuted"] = _StGermain._VariableCondition_hasExecuted_get
    if _newclass:hasExecuted = _swig_property(_StGermain._VariableCondition_hasExecuted_get, _StGermain._VariableCondition_hasExecuted_set)
    __swig_setmethods__["isDestroyed"] = _StGermain._VariableCondition_isDestroyed_set
    __swig_getmethods__["isDestroyed"] = _StGermain._VariableCondition_isDestroyed_get
    if _newclass:isDestroyed = _swig_property(_StGermain._VariableCondition_isDestroyed_get, _StGermain._VariableCondition_isDestroyed_set)
    __swig_setmethods__["constructType"] = _StGermain._VariableCondition_constructType_set
    __swig_getmethods__["constructType"] = _StGermain._VariableCondition_constructType_get
    if _newclass:constructType = _swig_property(_StGermain._VariableCondition_constructType_get, _StGermain._VariableCondition_constructType_set)
    __swig_setmethods__["buildType"] = _StGermain._VariableCondition_buildType_set
    __swig_getmethods__["buildType"] = _StGermain._VariableCondition_buildType_get
    if _newclass:buildType = _swig_property(_StGermain._VariableCondition_buildType_get, _StGermain._VariableCondition_buildType_set)
    __swig_setmethods__["initialiseType"] = _StGermain._VariableCondition_initialiseType_set
    __swig_getmethods__["initialiseType"] = _StGermain._VariableCondition_initialiseType_get
    if _newclass:initialiseType = _swig_property(_StGermain._VariableCondition_initialiseType_get, _StGermain._VariableCondition_initialiseType_set)
    __swig_setmethods__["executeType"] = _StGermain._VariableCondition_executeType_set
    __swig_getmethods__["executeType"] = _StGermain._VariableCondition_executeType_get
    if _newclass:executeType = _swig_property(_StGermain._VariableCondition_executeType_get, _StGermain._VariableCondition_executeType_set)
    __swig_setmethods__["destroyType"] = _StGermain._VariableCondition_destroyType_set
    __swig_getmethods__["destroyType"] = _StGermain._VariableCondition_destroyType_get
    if _newclass:destroyType = _swig_property(_StGermain._VariableCondition_destroyType_get, _StGermain._VariableCondition_destroyType_set)
    __swig_setmethods__["context"] = _StGermain._VariableCondition_context_set
    __swig_getmethods__["context"] = _StGermain._VariableCondition_context_get
    if _newclass:context = _swig_property(_StGermain._VariableCondition_context_get, _StGermain._VariableCondition_context_set)
    __swig_setmethods__["_buildSelf"] = _StGermain._VariableCondition__buildSelf_set
    __swig_getmethods__["_buildSelf"] = _StGermain._VariableCondition__buildSelf_get
    if _newclass:_buildSelf = _swig_property(_StGermain._VariableCondition__buildSelf_get, _StGermain._VariableCondition__buildSelf_set)
    __swig_setmethods__["_printConcise"] = _StGermain._VariableCondition__printConcise_set
    __swig_getmethods__["_printConcise"] = _StGermain._VariableCondition__printConcise_get
    if _newclass:_printConcise = _swig_property(_StGermain._VariableCondition__printConcise_get, _StGermain._VariableCondition__printConcise_set)
    __swig_setmethods__["_readDictionary"] = _StGermain._VariableCondition__readDictionary_set
    __swig_getmethods__["_readDictionary"] = _StGermain._VariableCondition__readDictionary_get
    if _newclass:_readDictionary = _swig_property(_StGermain._VariableCondition__readDictionary_get, _StGermain._VariableCondition__readDictionary_set)
    __swig_setmethods__["_getSet"] = _StGermain._VariableCondition__getSet_set
    __swig_getmethods__["_getSet"] = _StGermain._VariableCondition__getSet_get
    if _newclass:_getSet = _swig_property(_StGermain._VariableCondition__getSet_get, _StGermain._VariableCondition__getSet_set)
    __swig_setmethods__["_getVariableCount"] = _StGermain._VariableCondition__getVariableCount_set
    __swig_getmethods__["_getVariableCount"] = _StGermain._VariableCondition__getVariableCount_get
    if _newclass:_getVariableCount = _swig_property(_StGermain._VariableCondition__getVariableCount_get, _StGermain._VariableCondition__getVariableCount_set)
    __swig_setmethods__["_getVariableIndex"] = _StGermain._VariableCondition__getVariableIndex_set
    __swig_getmethods__["_getVariableIndex"] = _StGermain._VariableCondition__getVariableIndex_get
    if _newclass:_getVariableIndex = _swig_property(_StGermain._VariableCondition__getVariableIndex_get, _StGermain._VariableCondition__getVariableIndex_set)
    __swig_setmethods__["_getValueIndex"] = _StGermain._VariableCondition__getValueIndex_set
    __swig_getmethods__["_getValueIndex"] = _StGermain._VariableCondition__getValueIndex_get
    if _newclass:_getValueIndex = _swig_property(_StGermain._VariableCondition__getValueIndex_get, _StGermain._VariableCondition__getValueIndex_set)
    __swig_setmethods__["_getValueCount"] = _StGermain._VariableCondition__getValueCount_set
    __swig_getmethods__["_getValueCount"] = _StGermain._VariableCondition__getValueCount_get
    if _newclass:_getValueCount = _swig_property(_StGermain._VariableCondition__getValueCount_get, _StGermain._VariableCondition__getValueCount_set)
    __swig_setmethods__["_getValue"] = _StGermain._VariableCondition__getValue_set
    __swig_getmethods__["_getValue"] = _StGermain._VariableCondition__getValue_get
    if _newclass:_getValue = _swig_property(_StGermain._VariableCondition__getValue_get, _StGermain._VariableCondition__getValue_set)
    __swig_setmethods__["_apply"] = _StGermain._VariableCondition__apply_set
    __swig_getmethods__["_apply"] = _StGermain._VariableCondition__apply_get
    if _newclass:_apply = _swig_property(_StGermain._VariableCondition__apply_get, _StGermain._VariableCondition__apply_set)
    __swig_setmethods__["variable_Register"] = _StGermain._VariableCondition_variable_Register_set
    __swig_getmethods__["variable_Register"] = _StGermain._VariableCondition_variable_Register_get
    if _newclass:variable_Register = _swig_property(_StGermain._VariableCondition_variable_Register_get, _StGermain._VariableCondition_variable_Register_set)
    __swig_setmethods__["conFunc_Register"] = _StGermain._VariableCondition_conFunc_Register_set
    __swig_getmethods__["conFunc_Register"] = _StGermain._VariableCondition_conFunc_Register_get
    if _newclass:conFunc_Register = _swig_property(_StGermain._VariableCondition_conFunc_Register_get, _StGermain._VariableCondition_conFunc_Register_set)
    __swig_setmethods__["dictionary"] = _StGermain._VariableCondition_dictionary_set
    __swig_getmethods__["dictionary"] = _StGermain._VariableCondition_dictionary_get
    if _newclass:dictionary = _swig_property(_StGermain._VariableCondition_dictionary_get, _StGermain._VariableCondition_dictionary_set)
    __swig_setmethods__["_set"] = _StGermain._VariableCondition__set_set
    __swig_getmethods__["_set"] = _StGermain._VariableCondition__set_get
    if _newclass:_set = _swig_property(_StGermain._VariableCondition__set_get, _StGermain._VariableCondition__set_set)
    __swig_setmethods__["indexCount"] = _StGermain._VariableCondition_indexCount_set
    __swig_getmethods__["indexCount"] = _StGermain._VariableCondition_indexCount_get
    if _newclass:indexCount = _swig_property(_StGermain._VariableCondition_indexCount_get, _StGermain._VariableCondition_indexCount_set)
    __swig_setmethods__["indexTbl"] = _StGermain._VariableCondition_indexTbl_set
    __swig_getmethods__["indexTbl"] = _StGermain._VariableCondition_indexTbl_get
    if _newclass:indexTbl = _swig_property(_StGermain._VariableCondition_indexTbl_get, _StGermain._VariableCondition_indexTbl_set)
    __swig_setmethods__["vcVarCountTbl"] = _StGermain._VariableCondition_vcVarCountTbl_set
    __swig_getmethods__["vcVarCountTbl"] = _StGermain._VariableCondition_vcVarCountTbl_get
    if _newclass:vcVarCountTbl = _swig_property(_StGermain._VariableCondition_vcVarCountTbl_get, _StGermain._VariableCondition_vcVarCountTbl_set)
    __swig_setmethods__["vcTbl"] = _StGermain._VariableCondition_vcTbl_set
    __swig_getmethods__["vcTbl"] = _StGermain._VariableCondition_vcTbl_get
    if _newclass:vcTbl = _swig_property(_StGermain._VariableCondition_vcTbl_get, _StGermain._VariableCondition_vcTbl_set)
    __swig_setmethods__["valueCount"] = _StGermain._VariableCondition_valueCount_set
    __swig_getmethods__["valueCount"] = _StGermain._VariableCondition_valueCount_get
    if _newclass:valueCount = _swig_property(_StGermain._VariableCondition_valueCount_get, _StGermain._VariableCondition_valueCount_set)
    __swig_setmethods__["valueTbl"] = _StGermain._VariableCondition_valueTbl_set
    __swig_getmethods__["valueTbl"] = _StGermain._VariableCondition_valueTbl_get
    if _newclass:valueTbl = _swig_property(_StGermain._VariableCondition_valueTbl_get, _StGermain._VariableCondition_valueTbl_set)
    __swig_setmethods__["mapping"] = _StGermain._VariableCondition_mapping_set
    __swig_getmethods__["mapping"] = _StGermain._VariableCondition_mapping_get
    if _newclass:mapping = _swig_property(_StGermain._VariableCondition_mapping_get, _StGermain._VariableCondition_mapping_set)
    __swig_setmethods__["cf"] = _StGermain._VariableCondition_cf_set
    __swig_getmethods__["cf"] = _StGermain._VariableCondition_cf_get
    if _newclass:cf = _swig_property(_StGermain._VariableCondition_cf_get, _StGermain._VariableCondition_cf_set)
    def __init__(self): 
        this = _StGermain.new__VariableCondition()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _StGermain.delete__VariableCondition
    __del__ = lambda self : None;
_VariableCondition_swigregister = _StGermain._VariableCondition_swigregister
_VariableCondition_swigregister(_VariableCondition)


def _VariableCondition_New(*args):
  return _StGermain._VariableCondition_New(*args)
_VariableCondition_New = _StGermain._VariableCondition_New

def _VariableCondition_Init(*args):
  return _StGermain._VariableCondition_Init(*args)
_VariableCondition_Init = _StGermain._VariableCondition_Init

def _VariableCondition_Delete(*args):
  return _StGermain._VariableCondition_Delete(*args)
_VariableCondition_Delete = _StGermain._VariableCondition_Delete

def _VariableCondition_Print(*args):
  return _StGermain._VariableCondition_Print(*args)
_VariableCondition_Print = _StGermain._VariableCondition_Print

def _VariableCondition_Copy(*args):
  return _StGermain._VariableCondition_Copy(*args)
_VariableCondition_Copy = _StGermain._VariableCondition_Copy

def _VariableCondition_Apply(*args):
  return _StGermain._VariableCondition_Apply(*args)
_VariableCondition_Apply = _StGermain._VariableCondition_Apply

def _VariableCondition_AssignFromXML(*args):
  return _StGermain._VariableCondition_AssignFromXML(*args)
_VariableCondition_AssignFromXML = _StGermain._VariableCondition_AssignFromXML

def _VariableCondition_Build(*args):
  return _StGermain._VariableCondition_Build(*args)
_VariableCondition_Build = _StGermain._VariableCondition_Build

def _VariableCondition_Initialise(*args):
  return _StGermain._VariableCondition_Initialise(*args)
_VariableCondition_Initialise = _StGermain._VariableCondition_Initialise

def _VariableCondition_Execute(*args):
  return _StGermain._VariableCondition_Execute(*args)
_VariableCondition_Execute = _StGermain._VariableCondition_Execute

def _VariableCondition_Destroy(*args):
  return _StGermain._VariableCondition_Destroy(*args)
_VariableCondition_Destroy = _StGermain._VariableCondition_Destroy

def VariableCondition_Apply(*args):
  return _StGermain.VariableCondition_Apply(*args)
VariableCondition_Apply = _StGermain.VariableCondition_Apply

def VariableCondition_ApplyToVariable(*args):
  return _StGermain.VariableCondition_ApplyToVariable(*args)
VariableCondition_ApplyToVariable = _StGermain.VariableCondition_ApplyToVariable

def VariableCondition_ApplyToIndex(*args):
  return _StGermain.VariableCondition_ApplyToIndex(*args)
VariableCondition_ApplyToIndex = _StGermain.VariableCondition_ApplyToIndex

def VariableCondition_ApplyToIndexVariable(*args):
  return _StGermain.VariableCondition_ApplyToIndexVariable(*args)
VariableCondition_ApplyToIndexVariable = _StGermain.VariableCondition_ApplyToIndexVariable

def VariableCondition_IsCondition(*args):
  return _StGermain.VariableCondition_IsCondition(*args)
VariableCondition_IsCondition = _StGermain.VariableCondition_IsCondition

def VariableCondition_GetValueIndex(*args):
  return _StGermain.VariableCondition_GetValueIndex(*args)
VariableCondition_GetValueIndex = _StGermain.VariableCondition_GetValueIndex

def VariableCondition_PrintConcise(*args):
  return _StGermain.VariableCondition_PrintConcise(*args)
VariableCondition_PrintConcise = _StGermain.VariableCondition_PrintConcise
EntryPoint_0_CastType = _StGermain.EntryPoint_0_CastType
EntryPoint_VoidPtr_CastType = _StGermain.EntryPoint_VoidPtr_CastType
EntryPoint_2VoidPtr_CastType = _StGermain.EntryPoint_2VoidPtr_CastType
EntryPoint_3VoidPtr_CastType = _StGermain.EntryPoint_3VoidPtr_CastType
EntryPoint_Minimum_VoidPtr_CastType = _StGermain.EntryPoint_Minimum_VoidPtr_CastType
EntryPoint_Maximum_VoidPtr_CastType = _StGermain.EntryPoint_Maximum_VoidPtr_CastType
EntryPoint_Class_0_CastType = _StGermain.EntryPoint_Class_0_CastType
EntryPoint_Class_VoidPtr_CastType = _StGermain.EntryPoint_Class_VoidPtr_CastType
EntryPoint_Class_Minimum_VoidPtr_CastType = _StGermain.EntryPoint_Class_Minimum_VoidPtr_CastType
EntryPoint_Class_Maximum_VoidPtr_CastType = _StGermain.EntryPoint_Class_Maximum_VoidPtr_CastType
EntryPoint_CastType_MAX = _StGermain.EntryPoint_CastType_MAX
class EntryPoint(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, EntryPoint, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, EntryPoint, name)
    __repr__ = _swig_repr
    __swig_setmethods__["_sizeOfSelf"] = _StGermain.EntryPoint__sizeOfSelf_set
    __swig_getmethods__["_sizeOfSelf"] = _StGermain.EntryPoint__sizeOfSelf_get
    if _newclass:_sizeOfSelf = _swig_property(_StGermain.EntryPoint__sizeOfSelf_get, _StGermain.EntryPoint__sizeOfSelf_set)
    __swig_setmethods__["_deleteSelf"] = _StGermain.EntryPoint__deleteSelf_set
    __swig_getmethods__["_deleteSelf"] = _StGermain.EntryPoint__deleteSelf_get
    if _newclass:_deleteSelf = _swig_property(_StGermain.EntryPoint__deleteSelf_get, _StGermain.EntryPoint__deleteSelf_set)
    __swig_setmethods__["type"] = _StGermain.EntryPoint_type_set
    __swig_getmethods__["type"] = _StGermain.EntryPoint_type_get
    if _newclass:type = _swig_property(_StGermain.EntryPoint_type_get, _StGermain.EntryPoint_type_set)
    __swig_setmethods__["nRefs"] = _StGermain.EntryPoint_nRefs_set
    __swig_getmethods__["nRefs"] = _StGermain.EntryPoint_nRefs_get
    if _newclass:nRefs = _swig_property(_StGermain.EntryPoint_nRefs_get, _StGermain.EntryPoint_nRefs_set)
    __swig_setmethods__["_delete"] = _StGermain.EntryPoint__delete_set
    __swig_getmethods__["_delete"] = _StGermain.EntryPoint__delete_get
    if _newclass:_delete = _swig_property(_StGermain.EntryPoint__delete_get, _StGermain.EntryPoint__delete_set)
    __swig_setmethods__["_print"] = _StGermain.EntryPoint__print_set
    __swig_getmethods__["_print"] = _StGermain.EntryPoint__print_get
    if _newclass:_print = _swig_property(_StGermain.EntryPoint__print_get, _StGermain.EntryPoint__print_set)
    __swig_setmethods__["_copy"] = _StGermain.EntryPoint__copy_set
    __swig_getmethods__["_copy"] = _StGermain.EntryPoint__copy_get
    if _newclass:_copy = _swig_property(_StGermain.EntryPoint__copy_get, _StGermain.EntryPoint__copy_set)
    __swig_setmethods__["name"] = _StGermain.EntryPoint_name_set
    __swig_getmethods__["name"] = _StGermain.EntryPoint_name_get
    if _newclass:name = _swig_property(_StGermain.EntryPoint_name_get, _StGermain.EntryPoint_name_set)
    __swig_setmethods__["nameAllocationType"] = _StGermain.EntryPoint_nameAllocationType_set
    __swig_getmethods__["nameAllocationType"] = _StGermain.EntryPoint_nameAllocationType_get
    if _newclass:nameAllocationType = _swig_property(_StGermain.EntryPoint_nameAllocationType_get, _StGermain.EntryPoint_nameAllocationType_set)
    __swig_setmethods__["_getRun"] = _StGermain.EntryPoint__getRun_set
    __swig_getmethods__["_getRun"] = _StGermain.EntryPoint__getRun_get
    if _newclass:_getRun = _swig_property(_StGermain.EntryPoint__getRun_get, _StGermain.EntryPoint__getRun_set)
    __swig_setmethods__["castType"] = _StGermain.EntryPoint_castType_set
    __swig_getmethods__["castType"] = _StGermain.EntryPoint_castType_get
    if _newclass:castType = _swig_property(_StGermain.EntryPoint_castType_get, _StGermain.EntryPoint_castType_set)
    __swig_setmethods__["run"] = _StGermain.EntryPoint_run_set
    __swig_getmethods__["run"] = _StGermain.EntryPoint_run_get
    if _newclass:run = _swig_property(_StGermain.EntryPoint_run_get, _StGermain.EntryPoint_run_set)
    __swig_setmethods__["hooks"] = _StGermain.EntryPoint_hooks_set
    __swig_getmethods__["hooks"] = _StGermain.EntryPoint_hooks_get
    if _newclass:hooks = _swig_property(_StGermain.EntryPoint_hooks_get, _StGermain.EntryPoint_hooks_set)
    __swig_setmethods__["alwaysFirstHook"] = _StGermain.EntryPoint_alwaysFirstHook_set
    __swig_getmethods__["alwaysFirstHook"] = _StGermain.EntryPoint_alwaysFirstHook_get
    if _newclass:alwaysFirstHook = _swig_property(_StGermain.EntryPoint_alwaysFirstHook_get, _StGermain.EntryPoint_alwaysFirstHook_set)
    __swig_setmethods__["alwaysLastHook"] = _StGermain.EntryPoint_alwaysLastHook_set
    __swig_getmethods__["alwaysLastHook"] = _StGermain.EntryPoint_alwaysLastHook_get
    if _newclass:alwaysLastHook = _swig_property(_StGermain.EntryPoint_alwaysLastHook_get, _StGermain.EntryPoint_alwaysLastHook_set)
    def __init__(self): 
        this = _StGermain.new_EntryPoint()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _StGermain.delete_EntryPoint
    __del__ = lambda self : None;
EntryPoint_swigregister = _StGermain.EntryPoint_swigregister
EntryPoint_swigregister(EntryPoint)
EntryPoint_Type = cvar.EntryPoint_Type


def EntryPoint_New(*args):
  return _StGermain.EntryPoint_New(*args)
EntryPoint_New = _StGermain.EntryPoint_New

def EntryPoint_Init(*args):
  return _StGermain.EntryPoint_Init(*args)
EntryPoint_Init = _StGermain.EntryPoint_Init

def _EntryPoint_New(*args):
  return _StGermain._EntryPoint_New(*args)
_EntryPoint_New = _StGermain._EntryPoint_New

def _EntryPoint_Init(*args):
  return _StGermain._EntryPoint_Init(*args)
_EntryPoint_Init = _StGermain._EntryPoint_Init

def _EntryPoint_Delete(*args):
  return _StGermain._EntryPoint_Delete(*args)
_EntryPoint_Delete = _StGermain._EntryPoint_Delete

def _EntryPoint_Print(*args):
  return _StGermain._EntryPoint_Print(*args)
_EntryPoint_Print = _StGermain._EntryPoint_Print

def _EntryPoint_Copy(*args):
  return _StGermain._EntryPoint_Copy(*args)
_EntryPoint_Copy = _StGermain._EntryPoint_Copy

def EntryPoint_GetRun(*args):
  return _StGermain.EntryPoint_GetRun(*args)
EntryPoint_GetRun = _StGermain.EntryPoint_GetRun

def _EntryPoint_GetRun(*args):
  return _StGermain._EntryPoint_GetRun(*args)
_EntryPoint_GetRun = _StGermain._EntryPoint_GetRun

def _EntryPoint_Run(*args):
  return _StGermain._EntryPoint_Run(*args)
_EntryPoint_Run = _StGermain._EntryPoint_Run

def _EntryPoint_Run_VoidPtr(*args):
  return _StGermain._EntryPoint_Run_VoidPtr(*args)
_EntryPoint_Run_VoidPtr = _StGermain._EntryPoint_Run_VoidPtr

def _EntryPoint_Run_2VoidPtr(*args):
  return _StGermain._EntryPoint_Run_2VoidPtr(*args)
_EntryPoint_Run_2VoidPtr = _StGermain._EntryPoint_Run_2VoidPtr

def _EntryPoint_Run_3VoidPtr(*args):
  return _StGermain._EntryPoint_Run_3VoidPtr(*args)
_EntryPoint_Run_3VoidPtr = _StGermain._EntryPoint_Run_3VoidPtr

def _EntryPoint_Run_Minimum_VoidPtr(*args):
  return _StGermain._EntryPoint_Run_Minimum_VoidPtr(*args)
_EntryPoint_Run_Minimum_VoidPtr = _StGermain._EntryPoint_Run_Minimum_VoidPtr

def _EntryPoint_Run_Maximum_VoidPtr(*args):
  return _StGermain._EntryPoint_Run_Maximum_VoidPtr(*args)
_EntryPoint_Run_Maximum_VoidPtr = _StGermain._EntryPoint_Run_Maximum_VoidPtr

def _EntryPoint_Run_Class_Minimum_VoidPtr(*args):
  return _StGermain._EntryPoint_Run_Class_Minimum_VoidPtr(*args)
_EntryPoint_Run_Class_Minimum_VoidPtr = _StGermain._EntryPoint_Run_Class_Minimum_VoidPtr

def _EntryPoint_Run_Class_Maximum_VoidPtr(*args):
  return _StGermain._EntryPoint_Run_Class_Maximum_VoidPtr(*args)
_EntryPoint_Run_Class_Maximum_VoidPtr = _StGermain._EntryPoint_Run_Class_Maximum_VoidPtr

def _EntryPoint_Run_Class(*args):
  return _StGermain._EntryPoint_Run_Class(*args)
_EntryPoint_Run_Class = _StGermain._EntryPoint_Run_Class

def _EntryPoint_Run_Class_VoidPtr(*args):
  return _StGermain._EntryPoint_Run_Class_VoidPtr(*args)
_EntryPoint_Run_Class_VoidPtr = _StGermain._EntryPoint_Run_Class_VoidPtr

def _EntryPoint_PrependHook(*args):
  return _StGermain._EntryPoint_PrependHook(*args)
_EntryPoint_PrependHook = _StGermain._EntryPoint_PrependHook

def _EntryPoint_PrependHook_AlwaysFirst(*args):
  return _StGermain._EntryPoint_PrependHook_AlwaysFirst(*args)
_EntryPoint_PrependHook_AlwaysFirst = _StGermain._EntryPoint_PrependHook_AlwaysFirst

def _EntryPoint_AppendHook(*args):
  return _StGermain._EntryPoint_AppendHook(*args)
_EntryPoint_AppendHook = _StGermain._EntryPoint_AppendHook

def _EntryPoint_AppendHook_AlwaysLast(*args):
  return _StGermain._EntryPoint_AppendHook_AlwaysLast(*args)
_EntryPoint_AppendHook_AlwaysLast = _StGermain._EntryPoint_AppendHook_AlwaysLast

def _EntryPoint_InsertHookBefore(*args):
  return _StGermain._EntryPoint_InsertHookBefore(*args)
_EntryPoint_InsertHookBefore = _StGermain._EntryPoint_InsertHookBefore

def _EntryPoint_InsertHookAfter(*args):
  return _StGermain._EntryPoint_InsertHookAfter(*args)
_EntryPoint_InsertHookAfter = _StGermain._EntryPoint_InsertHookAfter

def _EntryPoint_ReplaceAllHook(*args):
  return _StGermain._EntryPoint_ReplaceAllHook(*args)
_EntryPoint_ReplaceAllHook = _StGermain._EntryPoint_ReplaceAllHook

def _EntryPoint_ReplaceHook(*args):
  return _StGermain._EntryPoint_ReplaceHook(*args)
_EntryPoint_ReplaceHook = _StGermain._EntryPoint_ReplaceHook

def _EntryPoint_ProfileFunction(*args):
  return _StGermain._EntryPoint_ProfileFunction(*args)
_EntryPoint_ProfileFunction = _StGermain._EntryPoint_ProfileFunction

def EntryPoint_PrintConcise(*args):
  return _StGermain.EntryPoint_PrintConcise(*args)
EntryPoint_PrintConcise = _StGermain.EntryPoint_PrintConcise

def EntryPoint_Prepend(*args):
  return _StGermain.EntryPoint_Prepend(*args)
EntryPoint_Prepend = _StGermain.EntryPoint_Prepend

def EntryPoint_Prepend_AlwaysFirst(*args):
  return _StGermain.EntryPoint_Prepend_AlwaysFirst(*args)
EntryPoint_Prepend_AlwaysFirst = _StGermain.EntryPoint_Prepend_AlwaysFirst

def EntryPoint_Append(*args):
  return _StGermain.EntryPoint_Append(*args)
EntryPoint_Append = _StGermain.EntryPoint_Append

def EntryPoint_Append_AlwaysLast(*args):
  return _StGermain.EntryPoint_Append_AlwaysLast(*args)
EntryPoint_Append_AlwaysLast = _StGermain.EntryPoint_Append_AlwaysLast

def EntryPoint_InsertBefore(*args):
  return _StGermain.EntryPoint_InsertBefore(*args)
EntryPoint_InsertBefore = _StGermain.EntryPoint_InsertBefore

def EntryPoint_InsertAfter(*args):
  return _StGermain.EntryPoint_InsertAfter(*args)
EntryPoint_InsertAfter = _StGermain.EntryPoint_InsertAfter

def EntryPoint_Replace(*args):
  return _StGermain.EntryPoint_Replace(*args)
EntryPoint_Replace = _StGermain.EntryPoint_Replace

def EntryPoint_ReplaceAll(*args):
  return _StGermain.EntryPoint_ReplaceAll(*args)
EntryPoint_ReplaceAll = _StGermain.EntryPoint_ReplaceAll

def EntryPoint_PrependClassHook(*args):
  return _StGermain.EntryPoint_PrependClassHook(*args)
EntryPoint_PrependClassHook = _StGermain.EntryPoint_PrependClassHook

def EntryPoint_PrependClassHook_AlwaysFirst(*args):
  return _StGermain.EntryPoint_PrependClassHook_AlwaysFirst(*args)
EntryPoint_PrependClassHook_AlwaysFirst = _StGermain.EntryPoint_PrependClassHook_AlwaysFirst

def EntryPoint_AppendClassHook(*args):
  return _StGermain.EntryPoint_AppendClassHook(*args)
EntryPoint_AppendClassHook = _StGermain.EntryPoint_AppendClassHook

def EntryPoint_AppendClassHook_AlwaysLast(*args):
  return _StGermain.EntryPoint_AppendClassHook_AlwaysLast(*args)
EntryPoint_AppendClassHook_AlwaysLast = _StGermain.EntryPoint_AppendClassHook_AlwaysLast

def EntryPoint_InsertClassHookBefore(*args):
  return _StGermain.EntryPoint_InsertClassHookBefore(*args)
EntryPoint_InsertClassHookBefore = _StGermain.EntryPoint_InsertClassHookBefore

def EntryPoint_InsertClassHookAfter(*args):
  return _StGermain.EntryPoint_InsertClassHookAfter(*args)
EntryPoint_InsertClassHookAfter = _StGermain.EntryPoint_InsertClassHookAfter

def EntryPoint_ReplaceClassHook(*args):
  return _StGermain.EntryPoint_ReplaceClassHook(*args)
EntryPoint_ReplaceClassHook = _StGermain.EntryPoint_ReplaceClassHook

def EntryPoint_ReplaceAllClassHook(*args):
  return _StGermain.EntryPoint_ReplaceAllClassHook(*args)
EntryPoint_ReplaceAllClassHook = _StGermain.EntryPoint_ReplaceAllClassHook

def EntryPoint_Remove(*args):
  return _StGermain.EntryPoint_Remove(*args)
EntryPoint_Remove = _StGermain.EntryPoint_Remove

def EntryPoint_Purge(*args):
  return _StGermain.EntryPoint_Purge(*args)
EntryPoint_Purge = _StGermain.EntryPoint_Purge

def EntryPoint_WarnIfNoHooks(*args):
  return _StGermain.EntryPoint_WarnIfNoHooks(*args)
EntryPoint_WarnIfNoHooks = _StGermain.EntryPoint_WarnIfNoHooks

def EntryPoint_ErrorIfNoHooks(*args):
  return _StGermain.EntryPoint_ErrorIfNoHooks(*args)
EntryPoint_ErrorIfNoHooks = _StGermain.EntryPoint_ErrorIfNoHooks
class EntryPoint_Register(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, EntryPoint_Register, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, EntryPoint_Register, name)
    __repr__ = _swig_repr
    __swig_setmethods__["_sizeOfSelf"] = _StGermain.EntryPoint_Register__sizeOfSelf_set
    __swig_getmethods__["_sizeOfSelf"] = _StGermain.EntryPoint_Register__sizeOfSelf_get
    if _newclass:_sizeOfSelf = _swig_property(_StGermain.EntryPoint_Register__sizeOfSelf_get, _StGermain.EntryPoint_Register__sizeOfSelf_set)
    __swig_setmethods__["_deleteSelf"] = _StGermain.EntryPoint_Register__deleteSelf_set
    __swig_getmethods__["_deleteSelf"] = _StGermain.EntryPoint_Register__deleteSelf_get
    if _newclass:_deleteSelf = _swig_property(_StGermain.EntryPoint_Register__deleteSelf_get, _StGermain.EntryPoint_Register__deleteSelf_set)
    __swig_setmethods__["type"] = _StGermain.EntryPoint_Register_type_set
    __swig_getmethods__["type"] = _StGermain.EntryPoint_Register_type_get
    if _newclass:type = _swig_property(_StGermain.EntryPoint_Register_type_get, _StGermain.EntryPoint_Register_type_set)
    __swig_setmethods__["nRefs"] = _StGermain.EntryPoint_Register_nRefs_set
    __swig_getmethods__["nRefs"] = _StGermain.EntryPoint_Register_nRefs_get
    if _newclass:nRefs = _swig_property(_StGermain.EntryPoint_Register_nRefs_get, _StGermain.EntryPoint_Register_nRefs_set)
    __swig_setmethods__["_delete"] = _StGermain.EntryPoint_Register__delete_set
    __swig_getmethods__["_delete"] = _StGermain.EntryPoint_Register__delete_get
    if _newclass:_delete = _swig_property(_StGermain.EntryPoint_Register__delete_get, _StGermain.EntryPoint_Register__delete_set)
    __swig_setmethods__["_print"] = _StGermain.EntryPoint_Register__print_set
    __swig_getmethods__["_print"] = _StGermain.EntryPoint_Register__print_get
    if _newclass:_print = _swig_property(_StGermain.EntryPoint_Register__print_get, _StGermain.EntryPoint_Register__print_set)
    __swig_setmethods__["_copy"] = _StGermain.EntryPoint_Register__copy_set
    __swig_getmethods__["_copy"] = _StGermain.EntryPoint_Register__copy_get
    if _newclass:_copy = _swig_property(_StGermain.EntryPoint_Register__copy_get, _StGermain.EntryPoint_Register__copy_set)
    __swig_setmethods__["count"] = _StGermain.EntryPoint_Register_count_set
    __swig_getmethods__["count"] = _StGermain.EntryPoint_Register_count_get
    if _newclass:count = _swig_property(_StGermain.EntryPoint_Register_count_get, _StGermain.EntryPoint_Register_count_set)
    __swig_setmethods__["_size"] = _StGermain.EntryPoint_Register__size_set
    __swig_getmethods__["_size"] = _StGermain.EntryPoint_Register__size_get
    if _newclass:_size = _swig_property(_StGermain.EntryPoint_Register__size_get, _StGermain.EntryPoint_Register__size_set)
    __swig_setmethods__["_delta"] = _StGermain.EntryPoint_Register__delta_set
    __swig_getmethods__["_delta"] = _StGermain.EntryPoint_Register__delta_get
    if _newclass:_delta = _swig_property(_StGermain.EntryPoint_Register__delta_get, _StGermain.EntryPoint_Register__delta_set)
    __swig_setmethods__["entryPoint"] = _StGermain.EntryPoint_Register_entryPoint_set
    __swig_getmethods__["entryPoint"] = _StGermain.EntryPoint_Register_entryPoint_get
    if _newclass:entryPoint = _swig_property(_StGermain.EntryPoint_Register_entryPoint_get, _StGermain.EntryPoint_Register_entryPoint_set)
    def __init__(self): 
        this = _StGermain.new_EntryPoint_Register()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _StGermain.delete_EntryPoint_Register
    __del__ = lambda self : None;
EntryPoint_Register_swigregister = _StGermain.EntryPoint_Register_swigregister
EntryPoint_Register_swigregister(EntryPoint_Register)
EntryPoint_Register_Type = cvar.EntryPoint_Register_Type


def EntryPoint_Register_New():
  return _StGermain.EntryPoint_Register_New()
EntryPoint_Register_New = _StGermain.EntryPoint_Register_New

def EntryPoint_Register_Init(*args):
  return _StGermain.EntryPoint_Register_Init(*args)
EntryPoint_Register_Init = _StGermain.EntryPoint_Register_Init

def _EntryPoint_Register_New(*args):
  return _StGermain._EntryPoint_Register_New(*args)
_EntryPoint_Register_New = _StGermain._EntryPoint_Register_New

def _EntryPoint_Register_Init(*args):
  return _StGermain._EntryPoint_Register_Init(*args)
_EntryPoint_Register_Init = _StGermain._EntryPoint_Register_Init

def _EntryPoint_Register_Delete(*args):
  return _StGermain._EntryPoint_Register_Delete(*args)
_EntryPoint_Register_Delete = _StGermain._EntryPoint_Register_Delete

def _EntryPoint_Register_Print(*args):
  return _StGermain._EntryPoint_Register_Print(*args)
_EntryPoint_Register_Print = _StGermain._EntryPoint_Register_Print

def EntryPoint_Register_Add(*args):
  return _StGermain.EntryPoint_Register_Add(*args)
EntryPoint_Register_Add = _StGermain.EntryPoint_Register_Add

def EntryPoint_Register_GetHandle(*args):
  return _StGermain.EntryPoint_Register_GetHandle(*args)
EntryPoint_Register_GetHandle = _StGermain.EntryPoint_Register_GetHandle

def _EntryPoint_Register_At(*args):
  return _StGermain._EntryPoint_Register_At(*args)
_EntryPoint_Register_At = _StGermain._EntryPoint_Register_At

def EntryPoint_Register_Find(*args):
  return _StGermain.EntryPoint_Register_Find(*args)
EntryPoint_Register_Find = _StGermain.EntryPoint_Register_Find
class ExtensionManager_Register(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ExtensionManager_Register, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ExtensionManager_Register, name)
    __repr__ = _swig_repr
    __swig_setmethods__["_sizeOfSelf"] = _StGermain.ExtensionManager_Register__sizeOfSelf_set
    __swig_getmethods__["_sizeOfSelf"] = _StGermain.ExtensionManager_Register__sizeOfSelf_get
    if _newclass:_sizeOfSelf = _swig_property(_StGermain.ExtensionManager_Register__sizeOfSelf_get, _StGermain.ExtensionManager_Register__sizeOfSelf_set)
    __swig_setmethods__["_deleteSelf"] = _StGermain.ExtensionManager_Register__deleteSelf_set
    __swig_getmethods__["_deleteSelf"] = _StGermain.ExtensionManager_Register__deleteSelf_get
    if _newclass:_deleteSelf = _swig_property(_StGermain.ExtensionManager_Register__deleteSelf_get, _StGermain.ExtensionManager_Register__deleteSelf_set)
    __swig_setmethods__["type"] = _StGermain.ExtensionManager_Register_type_set
    __swig_getmethods__["type"] = _StGermain.ExtensionManager_Register_type_get
    if _newclass:type = _swig_property(_StGermain.ExtensionManager_Register_type_get, _StGermain.ExtensionManager_Register_type_set)
    __swig_setmethods__["nRefs"] = _StGermain.ExtensionManager_Register_nRefs_set
    __swig_getmethods__["nRefs"] = _StGermain.ExtensionManager_Register_nRefs_get
    if _newclass:nRefs = _swig_property(_StGermain.ExtensionManager_Register_nRefs_get, _StGermain.ExtensionManager_Register_nRefs_set)
    __swig_setmethods__["_delete"] = _StGermain.ExtensionManager_Register__delete_set
    __swig_getmethods__["_delete"] = _StGermain.ExtensionManager_Register__delete_get
    if _newclass:_delete = _swig_property(_StGermain.ExtensionManager_Register__delete_get, _StGermain.ExtensionManager_Register__delete_set)
    __swig_setmethods__["_print"] = _StGermain.ExtensionManager_Register__print_set
    __swig_getmethods__["_print"] = _StGermain.ExtensionManager_Register__print_get
    if _newclass:_print = _swig_property(_StGermain.ExtensionManager_Register__print_get, _StGermain.ExtensionManager_Register__print_set)
    __swig_setmethods__["_copy"] = _StGermain.ExtensionManager_Register__copy_set
    __swig_getmethods__["_copy"] = _StGermain.ExtensionManager_Register__copy_get
    if _newclass:_copy = _swig_property(_StGermain.ExtensionManager_Register__copy_get, _StGermain.ExtensionManager_Register__copy_set)
    __swig_setmethods__["extensions"] = _StGermain.ExtensionManager_Register_extensions_set
    __swig_getmethods__["extensions"] = _StGermain.ExtensionManager_Register_extensions_get
    if _newclass:extensions = _swig_property(_StGermain.ExtensionManager_Register_extensions_get, _StGermain.ExtensionManager_Register_extensions_set)
    def __init__(self): 
        this = _StGermain.new_ExtensionManager_Register()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _StGermain.delete_ExtensionManager_Register
    __del__ = lambda self : None;
ExtensionManager_Register_swigregister = _StGermain.ExtensionManager_Register_swigregister
ExtensionManager_Register_swigregister(ExtensionManager_Register)
ExtensionManager_Register_Type = cvar.ExtensionManager_Register_Type


def ExtensionManager_Register_New():
  return _StGermain.ExtensionManager_Register_New()
ExtensionManager_Register_New = _StGermain.ExtensionManager_Register_New

def ExtensionManager_Register_Init(*args):
  return _StGermain.ExtensionManager_Register_Init(*args)
ExtensionManager_Register_Init = _StGermain.ExtensionManager_Register_Init

def _ExtensionManager_Register_New(*args):
  return _StGermain._ExtensionManager_Register_New(*args)
_ExtensionManager_Register_New = _StGermain._ExtensionManager_Register_New

def _ExtensionManager_Register_Init(*args):
  return _StGermain._ExtensionManager_Register_Init(*args)
_ExtensionManager_Register_Init = _StGermain._ExtensionManager_Register_Init

def _ExtensionManager_Register_Delete(*args):
  return _StGermain._ExtensionManager_Register_Delete(*args)
_ExtensionManager_Register_Delete = _StGermain._ExtensionManager_Register_Delete

def _ExtensionManager_Register_Print(*args):
  return _StGermain._ExtensionManager_Register_Print(*args)
_ExtensionManager_Register_Print = _StGermain._ExtensionManager_Register_Print

def ExtensionManager_Register_Add(*args):
  return _StGermain.ExtensionManager_Register_Add(*args)
ExtensionManager_Register_Add = _StGermain.ExtensionManager_Register_Add

def ExtensionManager_Register_Remove(*args):
  return _StGermain.ExtensionManager_Register_Remove(*args)
ExtensionManager_Register_Remove = _StGermain.ExtensionManager_Register_Remove

def ExtensionManager_Register_GetExtensionHandle(*args):
  return _StGermain.ExtensionManager_Register_GetExtensionHandle(*args)
ExtensionManager_Register_GetExtensionHandle = _StGermain.ExtensionManager_Register_GetExtensionHandle
class ModulesManager(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ModulesManager, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ModulesManager, name)
    __repr__ = _swig_repr
    __swig_setmethods__["_sizeOfSelf"] = _StGermain.ModulesManager__sizeOfSelf_set
    __swig_getmethods__["_sizeOfSelf"] = _StGermain.ModulesManager__sizeOfSelf_get
    if _newclass:_sizeOfSelf = _swig_property(_StGermain.ModulesManager__sizeOfSelf_get, _StGermain.ModulesManager__sizeOfSelf_set)
    __swig_setmethods__["_deleteSelf"] = _StGermain.ModulesManager__deleteSelf_set
    __swig_getmethods__["_deleteSelf"] = _StGermain.ModulesManager__deleteSelf_get
    if _newclass:_deleteSelf = _swig_property(_StGermain.ModulesManager__deleteSelf_get, _StGermain.ModulesManager__deleteSelf_set)
    __swig_setmethods__["type"] = _StGermain.ModulesManager_type_set
    __swig_getmethods__["type"] = _StGermain.ModulesManager_type_get
    if _newclass:type = _swig_property(_StGermain.ModulesManager_type_get, _StGermain.ModulesManager_type_set)
    __swig_setmethods__["nRefs"] = _StGermain.ModulesManager_nRefs_set
    __swig_getmethods__["nRefs"] = _StGermain.ModulesManager_nRefs_get
    if _newclass:nRefs = _swig_property(_StGermain.ModulesManager_nRefs_get, _StGermain.ModulesManager_nRefs_set)
    __swig_setmethods__["_delete"] = _StGermain.ModulesManager__delete_set
    __swig_getmethods__["_delete"] = _StGermain.ModulesManager__delete_get
    if _newclass:_delete = _swig_property(_StGermain.ModulesManager__delete_get, _StGermain.ModulesManager__delete_set)
    __swig_setmethods__["_print"] = _StGermain.ModulesManager__print_set
    __swig_getmethods__["_print"] = _StGermain.ModulesManager__print_get
    if _newclass:_print = _swig_property(_StGermain.ModulesManager__print_get, _StGermain.ModulesManager__print_set)
    __swig_setmethods__["_copy"] = _StGermain.ModulesManager__copy_set
    __swig_getmethods__["_copy"] = _StGermain.ModulesManager__copy_get
    if _newclass:_copy = _swig_property(_StGermain.ModulesManager__copy_get, _StGermain.ModulesManager__copy_set)
    __swig_setmethods__["_getModulesList"] = _StGermain.ModulesManager__getModulesList_set
    __swig_getmethods__["_getModulesList"] = _StGermain.ModulesManager__getModulesList_get
    if _newclass:_getModulesList = _swig_property(_StGermain.ModulesManager__getModulesList_get, _StGermain.ModulesManager__getModulesList_set)
    __swig_setmethods__["_loadModule"] = _StGermain.ModulesManager__loadModule_set
    __swig_getmethods__["_loadModule"] = _StGermain.ModulesManager__loadModule_get
    if _newclass:_loadModule = _swig_property(_StGermain.ModulesManager__loadModule_get, _StGermain.ModulesManager__loadModule_set)
    __swig_setmethods__["_unloadModule"] = _StGermain.ModulesManager__unloadModule_set
    __swig_getmethods__["_unloadModule"] = _StGermain.ModulesManager__unloadModule_get
    if _newclass:_unloadModule = _swig_property(_StGermain.ModulesManager__unloadModule_get, _StGermain.ModulesManager__unloadModule_set)
    __swig_setmethods__["_moduleFactory"] = _StGermain.ModulesManager__moduleFactory_set
    __swig_getmethods__["_moduleFactory"] = _StGermain.ModulesManager__moduleFactory_get
    if _newclass:_moduleFactory = _swig_property(_StGermain.ModulesManager__moduleFactory_get, _StGermain.ModulesManager__moduleFactory_set)
    __swig_setmethods__["_checkContext"] = _StGermain.ModulesManager__checkContext_set
    __swig_getmethods__["_checkContext"] = _StGermain.ModulesManager__checkContext_get
    if _newclass:_checkContext = _swig_property(_StGermain.ModulesManager__checkContext_get, _StGermain.ModulesManager__checkContext_set)
    __swig_setmethods__["_getModuleName"] = _StGermain.ModulesManager__getModuleName_set
    __swig_getmethods__["_getModuleName"] = _StGermain.ModulesManager__getModuleName_get
    if _newclass:_getModuleName = _swig_property(_StGermain.ModulesManager__getModuleName_get, _StGermain.ModulesManager__getModuleName_set)
    __swig_setmethods__["modules"] = _StGermain.ModulesManager_modules_set
    __swig_getmethods__["modules"] = _StGermain.ModulesManager_modules_get
    if _newclass:modules = _swig_property(_StGermain.ModulesManager_modules_get, _StGermain.ModulesManager_modules_set)
    __swig_setmethods__["codelets"] = _StGermain.ModulesManager_codelets_set
    __swig_getmethods__["codelets"] = _StGermain.ModulesManager_codelets_get
    if _newclass:codelets = _swig_property(_StGermain.ModulesManager_codelets_get, _StGermain.ModulesManager_codelets_set)
    def __init__(self): 
        this = _StGermain.new_ModulesManager()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _StGermain.delete_ModulesManager
    __del__ = lambda self : None;
ModulesManager_swigregister = _StGermain.ModulesManager_swigregister
ModulesManager_swigregister(ModulesManager)
ModulesManager_Type = cvar.ModulesManager_Type


def _ModulesManager_New(*args):
  return _StGermain._ModulesManager_New(*args)
_ModulesManager_New = _StGermain._ModulesManager_New

def _ModulesManager_Init(*args):
  return _StGermain._ModulesManager_Init(*args)
_ModulesManager_Init = _StGermain._ModulesManager_Init

def _ModulesManager_Delete(*args):
  return _StGermain._ModulesManager_Delete(*args)
_ModulesManager_Delete = _StGermain._ModulesManager_Delete

def _ModulesManager_Print(*args):
  return _StGermain._ModulesManager_Print(*args)
_ModulesManager_Print = _StGermain._ModulesManager_Print

def ModulesManager_GetModulesList(*args):
  return _StGermain.ModulesManager_GetModulesList(*args)
ModulesManager_GetModulesList = _StGermain.ModulesManager_GetModulesList

def ModulesManager_CheckContext(*args):
  return _StGermain.ModulesManager_CheckContext(*args)
ModulesManager_CheckContext = _StGermain.ModulesManager_CheckContext

def ModulesManager_GetModuleName(*args):
  return _StGermain.ModulesManager_GetModuleName(*args)
ModulesManager_GetModuleName = _StGermain.ModulesManager_GetModuleName

def ModulesManager_Load(*args):
  return _StGermain.ModulesManager_Load(*args)
ModulesManager_Load = _StGermain.ModulesManager_Load

def ModulesManager_LoadModule(*args):
  return _StGermain.ModulesManager_LoadModule(*args)
ModulesManager_LoadModule = _StGermain.ModulesManager_LoadModule

def ModulesManager_UnloadModule(*args):
  return _StGermain.ModulesManager_UnloadModule(*args)
ModulesManager_UnloadModule = _StGermain.ModulesManager_UnloadModule

def ModulesManager_Unload(*args):
  return _StGermain.ModulesManager_Unload(*args)
ModulesManager_Unload = _StGermain.ModulesManager_Unload

def ModulesManager_AddDirectory(*args):
  return _StGermain.ModulesManager_AddDirectory(*args)
ModulesManager_AddDirectory = _StGermain.ModulesManager_AddDirectory

def ModulesManager_Submit(*args):
  return _StGermain.ModulesManager_Submit(*args)
ModulesManager_Submit = _StGermain.ModulesManager_Submit

def ModulesManager_CreateModule(*args):
  return _StGermain.ModulesManager_CreateModule(*args)
ModulesManager_CreateModule = _StGermain.ModulesManager_CreateModule

def ModulesManager_ConstructModules(*args):
  return _StGermain.ModulesManager_ConstructModules(*args)
ModulesManager_ConstructModules = _StGermain.ModulesManager_ConstructModules

def ModulesManager_ConstructModule(*args):
  return _StGermain.ModulesManager_ConstructModule(*args)
ModulesManager_ConstructModule = _StGermain.ModulesManager_ConstructModule
class NamedObject_Register(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NamedObject_Register, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NamedObject_Register, name)
    __repr__ = _swig_repr
    __swig_setmethods__["_sizeOfSelf"] = _StGermain.NamedObject_Register__sizeOfSelf_set
    __swig_getmethods__["_sizeOfSelf"] = _StGermain.NamedObject_Register__sizeOfSelf_get
    if _newclass:_sizeOfSelf = _swig_property(_StGermain.NamedObject_Register__sizeOfSelf_get, _StGermain.NamedObject_Register__sizeOfSelf_set)
    __swig_setmethods__["_deleteSelf"] = _StGermain.NamedObject_Register__deleteSelf_set
    __swig_getmethods__["_deleteSelf"] = _StGermain.NamedObject_Register__deleteSelf_get
    if _newclass:_deleteSelf = _swig_property(_StGermain.NamedObject_Register__deleteSelf_get, _StGermain.NamedObject_Register__deleteSelf_set)
    __swig_setmethods__["type"] = _StGermain.NamedObject_Register_type_set
    __swig_getmethods__["type"] = _StGermain.NamedObject_Register_type_get
    if _newclass:type = _swig_property(_StGermain.NamedObject_Register_type_get, _StGermain.NamedObject_Register_type_set)
    __swig_setmethods__["nRefs"] = _StGermain.NamedObject_Register_nRefs_set
    __swig_getmethods__["nRefs"] = _StGermain.NamedObject_Register_nRefs_get
    if _newclass:nRefs = _swig_property(_StGermain.NamedObject_Register_nRefs_get, _StGermain.NamedObject_Register_nRefs_set)
    __swig_setmethods__["_delete"] = _StGermain.NamedObject_Register__delete_set
    __swig_getmethods__["_delete"] = _StGermain.NamedObject_Register__delete_get
    if _newclass:_delete = _swig_property(_StGermain.NamedObject_Register__delete_get, _StGermain.NamedObject_Register__delete_set)
    __swig_setmethods__["_print"] = _StGermain.NamedObject_Register__print_set
    __swig_getmethods__["_print"] = _StGermain.NamedObject_Register__print_get
    if _newclass:_print = _swig_property(_StGermain.NamedObject_Register__print_get, _StGermain.NamedObject_Register__print_set)
    __swig_setmethods__["_copy"] = _StGermain.NamedObject_Register__copy_set
    __swig_getmethods__["_copy"] = _StGermain.NamedObject_Register__copy_get
    if _newclass:_copy = _swig_property(_StGermain.NamedObject_Register__copy_get, _StGermain.NamedObject_Register__copy_set)
    __swig_setmethods__["objects"] = _StGermain.NamedObject_Register_objects_set
    __swig_getmethods__["objects"] = _StGermain.NamedObject_Register_objects_get
    if _newclass:objects = _swig_property(_StGermain.NamedObject_Register_objects_get, _StGermain.NamedObject_Register_objects_set)
    def __init__(self): 
        this = _StGermain.new_NamedObject_Register()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _StGermain.delete_NamedObject_Register
    __del__ = lambda self : None;
NamedObject_Register_swigregister = _StGermain.NamedObject_Register_swigregister
NamedObject_Register_swigregister(NamedObject_Register)
NamedObject_Register_Type = cvar.NamedObject_Register_Type


def NamedObject_Register_New():
  return _StGermain.NamedObject_Register_New()
NamedObject_Register_New = _StGermain.NamedObject_Register_New

def _NamedObject_Register_New(*args):
  return _StGermain._NamedObject_Register_New(*args)
_NamedObject_Register_New = _StGermain._NamedObject_Register_New

def _NamedObject_Register_Init(*args):
  return _StGermain._NamedObject_Register_Init(*args)
_NamedObject_Register_Init = _StGermain._NamedObject_Register_Init

def _NamedObject_Register_Delete(*args):
  return _StGermain._NamedObject_Register_Delete(*args)
_NamedObject_Register_Delete = _StGermain._NamedObject_Register_Delete

def _NamedObject_Register_Print(*args):
  return _StGermain._NamedObject_Register_Print(*args)
_NamedObject_Register_Print = _StGermain._NamedObject_Register_Print

def _NamedObject_Register_Copy(*args):
  return _StGermain._NamedObject_Register_Copy(*args)
_NamedObject_Register_Copy = _StGermain._NamedObject_Register_Copy

def NamedObject_Register_DeleteAll(*args):
  return _StGermain.NamedObject_Register_DeleteAll(*args)
NamedObject_Register_DeleteAll = _StGermain.NamedObject_Register_DeleteAll
class _IO_Handler(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, _IO_Handler, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, _IO_Handler, name)
    __repr__ = _swig_repr
    __swig_setmethods__["_sizeOfSelf"] = _StGermain._IO_Handler__sizeOfSelf_set
    __swig_getmethods__["_sizeOfSelf"] = _StGermain._IO_Handler__sizeOfSelf_get
    if _newclass:_sizeOfSelf = _swig_property(_StGermain._IO_Handler__sizeOfSelf_get, _StGermain._IO_Handler__sizeOfSelf_set)
    __swig_setmethods__["_deleteSelf"] = _StGermain._IO_Handler__deleteSelf_set
    __swig_getmethods__["_deleteSelf"] = _StGermain._IO_Handler__deleteSelf_get
    if _newclass:_deleteSelf = _swig_property(_StGermain._IO_Handler__deleteSelf_get, _StGermain._IO_Handler__deleteSelf_set)
    __swig_setmethods__["type"] = _StGermain._IO_Handler_type_set
    __swig_getmethods__["type"] = _StGermain._IO_Handler_type_get
    if _newclass:type = _swig_property(_StGermain._IO_Handler_type_get, _StGermain._IO_Handler_type_set)
    __swig_setmethods__["nRefs"] = _StGermain._IO_Handler_nRefs_set
    __swig_getmethods__["nRefs"] = _StGermain._IO_Handler_nRefs_get
    if _newclass:nRefs = _swig_property(_StGermain._IO_Handler_nRefs_get, _StGermain._IO_Handler_nRefs_set)
    __swig_setmethods__["_delete"] = _StGermain._IO_Handler__delete_set
    __swig_getmethods__["_delete"] = _StGermain._IO_Handler__delete_get
    if _newclass:_delete = _swig_property(_StGermain._IO_Handler__delete_get, _StGermain._IO_Handler__delete_set)
    __swig_setmethods__["_print"] = _StGermain._IO_Handler__print_set
    __swig_getmethods__["_print"] = _StGermain._IO_Handler__print_get
    if _newclass:_print = _swig_property(_StGermain._IO_Handler__print_get, _StGermain._IO_Handler__print_set)
    __swig_setmethods__["_copy"] = _StGermain._IO_Handler__copy_set
    __swig_getmethods__["_copy"] = _StGermain._IO_Handler__copy_get
    if _newclass:_copy = _swig_property(_StGermain._IO_Handler__copy_get, _StGermain._IO_Handler__copy_set)
    __swig_setmethods__["_readAllFromFile"] = _StGermain._IO_Handler__readAllFromFile_set
    __swig_getmethods__["_readAllFromFile"] = _StGermain._IO_Handler__readAllFromFile_get
    if _newclass:_readAllFromFile = _swig_property(_StGermain._IO_Handler__readAllFromFile_get, _StGermain._IO_Handler__readAllFromFile_set)
    __swig_setmethods__["_readAllFromBuffer"] = _StGermain._IO_Handler__readAllFromBuffer_set
    __swig_getmethods__["_readAllFromBuffer"] = _StGermain._IO_Handler__readAllFromBuffer_get
    if _newclass:_readAllFromBuffer = _swig_property(_StGermain._IO_Handler__readAllFromBuffer_get, _StGermain._IO_Handler__readAllFromBuffer_set)
    __swig_setmethods__["_writeAllToFile"] = _StGermain._IO_Handler__writeAllToFile_set
    __swig_getmethods__["_writeAllToFile"] = _StGermain._IO_Handler__writeAllToFile_get
    if _newclass:_writeAllToFile = _swig_property(_StGermain._IO_Handler__writeAllToFile_get, _StGermain._IO_Handler__writeAllToFile_set)
    __swig_setmethods__["currDictionary"] = _StGermain._IO_Handler_currDictionary_set
    __swig_getmethods__["currDictionary"] = _StGermain._IO_Handler_currDictionary_get
    if _newclass:currDictionary = _swig_property(_StGermain._IO_Handler_currDictionary_get, _StGermain._IO_Handler_currDictionary_set)
    __swig_setmethods__["currSources"] = _StGermain._IO_Handler_currSources_set
    __swig_getmethods__["currSources"] = _StGermain._IO_Handler_currSources_get
    if _newclass:currSources = _swig_property(_StGermain._IO_Handler_currSources_get, _StGermain._IO_Handler_currSources_set)
    __swig_setmethods__["resource"] = _StGermain._IO_Handler_resource_set
    __swig_getmethods__["resource"] = _StGermain._IO_Handler_resource_get
    if _newclass:resource = _swig_property(_StGermain._IO_Handler_resource_get, _StGermain._IO_Handler_resource_set)
    __swig_setmethods__["currPath"] = _StGermain._IO_Handler_currPath_set
    __swig_getmethods__["currPath"] = _StGermain._IO_Handler_currPath_get
    if _newclass:currPath = _swig_property(_StGermain._IO_Handler_currPath_get, _StGermain._IO_Handler_currPath_set)
    __swig_setmethods__["schema"] = _StGermain._IO_Handler_schema_set
    __swig_getmethods__["schema"] = _StGermain._IO_Handler_schema_get
    if _newclass:schema = _swig_property(_StGermain._IO_Handler_schema_get, _StGermain._IO_Handler_schema_set)
    __swig_setmethods__["validate"] = _StGermain._IO_Handler_validate_set
    __swig_getmethods__["validate"] = _StGermain._IO_Handler_validate_get
    if _newclass:validate = _swig_property(_StGermain._IO_Handler_validate_get, _StGermain._IO_Handler_validate_set)
    def __init__(self): 
        this = _StGermain.new__IO_Handler()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _StGermain.delete__IO_Handler
    __del__ = lambda self : None;
_IO_Handler_swigregister = _StGermain._IO_Handler_swigregister
_IO_Handler_swigregister(_IO_Handler)
IO_Handler_Type = cvar.IO_Handler_Type
IO_Handler_DefaultMergeType = cvar.IO_Handler_DefaultMergeType
IO_Handler_DefaultChildrenMergeType = cvar.IO_Handler_DefaultChildrenMergeType


def _IO_Handler_New(*args):
  return _StGermain._IO_Handler_New(*args)
_IO_Handler_New = _StGermain._IO_Handler_New

def _IO_Handler_Init(*args):
  return _StGermain._IO_Handler_Init(*args)
_IO_Handler_Init = _StGermain._IO_Handler_Init

def _IO_Handler_Delete(*args):
  return _StGermain._IO_Handler_Delete(*args)
_IO_Handler_Delete = _StGermain._IO_Handler_Delete

def _IO_Handler_Print(*args):
  return _StGermain._IO_Handler_Print(*args)
_IO_Handler_Print = _StGermain._IO_Handler_Print

def IO_Handler_ReadAllFromFile(*args):
  return _StGermain.IO_Handler_ReadAllFromFile(*args)
IO_Handler_ReadAllFromFile = _StGermain.IO_Handler_ReadAllFromFile

def IO_Handler_ReadAllFromBuffer(*args):
  return _StGermain.IO_Handler_ReadAllFromBuffer(*args)
IO_Handler_ReadAllFromBuffer = _StGermain.IO_Handler_ReadAllFromBuffer

def IO_Handler_WriteAllToFile(*args):
  return _StGermain.IO_Handler_WriteAllToFile(*args)
IO_Handler_WriteAllToFile = _StGermain.IO_Handler_WriteAllToFile

def IO_Handler_DictSetAddValue(*args):
  return _StGermain.IO_Handler_DictSetAddValue(*args)
IO_Handler_DictSetAddValue = _StGermain.IO_Handler_DictSetAddValue

def IO_Handler_DictSetAddValueWithSource(*args):
  return _StGermain.IO_Handler_DictSetAddValueWithSource(*args)
IO_Handler_DictSetAddValueWithSource = _StGermain.IO_Handler_DictSetAddValueWithSource

def IO_Handler_ReadAllFilesFromCommandLine(*args):
  return _StGermain.IO_Handler_ReadAllFilesFromCommandLine(*args)
IO_Handler_ReadAllFilesFromCommandLine = _StGermain.IO_Handler_ReadAllFilesFromCommandLine

def IO_Handler_ReadAllFromCommandLine(*args):
  return _StGermain.IO_Handler_ReadAllFromCommandLine(*args)
IO_Handler_ReadAllFromCommandLine = _StGermain.IO_Handler_ReadAllFromCommandLine
class File(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, File, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, File, name)
    __repr__ = _swig_repr
    __swig_setmethods__["_sizeOfSelf"] = _StGermain.File__sizeOfSelf_set
    __swig_getmethods__["_sizeOfSelf"] = _StGermain.File__sizeOfSelf_get
    if _newclass:_sizeOfSelf = _swig_property(_StGermain.File__sizeOfSelf_get, _StGermain.File__sizeOfSelf_set)
    __swig_setmethods__["_deleteSelf"] = _StGermain.File__deleteSelf_set
    __swig_getmethods__["_deleteSelf"] = _StGermain.File__deleteSelf_get
    if _newclass:_deleteSelf = _swig_property(_StGermain.File__deleteSelf_get, _StGermain.File__deleteSelf_set)
    __swig_setmethods__["type"] = _StGermain.File_type_set
    __swig_getmethods__["type"] = _StGermain.File_type_get
    if _newclass:type = _swig_property(_StGermain.File_type_get, _StGermain.File_type_set)
    __swig_setmethods__["nRefs"] = _StGermain.File_nRefs_set
    __swig_getmethods__["nRefs"] = _StGermain.File_nRefs_get
    if _newclass:nRefs = _swig_property(_StGermain.File_nRefs_get, _StGermain.File_nRefs_set)
    __swig_setmethods__["_delete"] = _StGermain.File__delete_set
    __swig_getmethods__["_delete"] = _StGermain.File__delete_get
    if _newclass:_delete = _swig_property(_StGermain.File__delete_get, _StGermain.File__delete_set)
    __swig_setmethods__["_print"] = _StGermain.File__print_set
    __swig_getmethods__["_print"] = _StGermain.File__print_get
    if _newclass:_print = _swig_property(_StGermain.File__print_get, _StGermain.File__print_set)
    __swig_setmethods__["_copy"] = _StGermain.File__copy_set
    __swig_getmethods__["_copy"] = _StGermain.File__copy_get
    if _newclass:_copy = _swig_property(_StGermain.File__copy_get, _StGermain.File__copy_set)
    __swig_setmethods__["name"] = _StGermain.File_name_set
    __swig_getmethods__["name"] = _StGermain.File_name_get
    if _newclass:name = _swig_property(_StGermain.File_name_get, _StGermain.File_name_set)
    __swig_setmethods__["nameAllocationType"] = _StGermain.File_nameAllocationType_set
    __swig_getmethods__["nameAllocationType"] = _StGermain.File_nameAllocationType_get
    if _newclass:nameAllocationType = _swig_property(_StGermain.File_nameAllocationType_get, _StGermain.File_nameAllocationType_set)
    __swig_setmethods__["_read"] = _StGermain.File__read_set
    __swig_getmethods__["_read"] = _StGermain.File__read_get
    if _newclass:_read = _swig_property(_StGermain.File__read_get, _StGermain.File__read_set)
    __swig_setmethods__["_write"] = _StGermain.File__write_set
    __swig_getmethods__["_write"] = _StGermain.File__write_get
    if _newclass:_write = _swig_property(_StGermain.File__write_get, _StGermain.File__write_set)
    __swig_setmethods__["_append"] = _StGermain.File__append_set
    __swig_getmethods__["_append"] = _StGermain.File__append_get
    if _newclass:_append = _swig_property(_StGermain.File__append_get, _StGermain.File__append_set)
    __swig_setmethods__["_close"] = _StGermain.File__close_set
    __swig_getmethods__["_close"] = _StGermain.File__close_get
    if _newclass:_close = _swig_property(_StGermain.File__close_get, _StGermain.File__close_set)
    __swig_setmethods__["_flush"] = _StGermain.File__flush_set
    __swig_getmethods__["_flush"] = _StGermain.File__flush_get
    if _newclass:_flush = _swig_property(_StGermain.File__flush_get, _StGermain.File__flush_set)
    __swig_setmethods__["fileHandle"] = _StGermain.File_fileHandle_set
    __swig_getmethods__["fileHandle"] = _StGermain.File_fileHandle_get
    if _newclass:fileHandle = _swig_property(_StGermain.File_fileHandle_get, _StGermain.File_fileHandle_set)
    __swig_setmethods__["_opened"] = _StGermain.File__opened_set
    __swig_getmethods__["_opened"] = _StGermain.File__opened_get
    if _newclass:_opened = _swig_property(_StGermain.File__opened_get, _StGermain.File__opened_set)
    __swig_setmethods__["_lastOpenedAs"] = _StGermain.File__lastOpenedAs_set
    __swig_getmethods__["_lastOpenedAs"] = _StGermain.File__lastOpenedAs_get
    if _newclass:_lastOpenedAs = _swig_property(_StGermain.File__lastOpenedAs_get, _StGermain.File__lastOpenedAs_set)
    def __init__(self): 
        this = _StGermain.new_File()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _StGermain.delete_File
    __del__ = lambda self : None;
File_swigregister = _StGermain.File_swigregister
File_swigregister(File)
File_Type = cvar.File_Type


def _File_New(*args):
  return _StGermain._File_New(*args)
_File_New = _StGermain._File_New

def _File_Init(*args):
  return _StGermain._File_Init(*args)
_File_Init = _StGermain._File_Init

def _File_Delete(*args):
  return _StGermain._File_Delete(*args)
_File_Delete = _StGermain._File_Delete

def _File_Print(*args):
  return _StGermain._File_Print(*args)
_File_Print = _StGermain._File_Print

def File_Read(*args):
  return _StGermain.File_Read(*args)
File_Read = _StGermain.File_Read

def File_Write(*args):
  return _StGermain.File_Write(*args)
File_Write = _StGermain.File_Write

def File_Reopen(*args):
  return _StGermain.File_Reopen(*args)
File_Reopen = _StGermain.File_Reopen

def File_Append(*args):
  return _StGermain.File_Append(*args)
File_Append = _StGermain.File_Append

def File_Close(*args):
  return _StGermain.File_Close(*args)
File_Close = _StGermain.File_Close

def File_IsOpened(*args):
  return _StGermain.File_IsOpened(*args)
File_IsOpened = _StGermain.File_IsOpened

def File_Flush(*args):
  return _StGermain.File_Flush(*args)
File_Flush = _StGermain.File_Flush

def File_AddPath(*args):
  return _StGermain.File_AddPath(*args)
File_AddPath = _StGermain.File_AddPath
class _Stg_ObjectList(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, _Stg_ObjectList, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, _Stg_ObjectList, name)
    __repr__ = _swig_repr
    __swig_setmethods__["_sizeOfSelf"] = _StGermain._Stg_ObjectList__sizeOfSelf_set
    __swig_getmethods__["_sizeOfSelf"] = _StGermain._Stg_ObjectList__sizeOfSelf_get
    if _newclass:_sizeOfSelf = _swig_property(_StGermain._Stg_ObjectList__sizeOfSelf_get, _StGermain._Stg_ObjectList__sizeOfSelf_set)
    __swig_setmethods__["_deleteSelf"] = _StGermain._Stg_ObjectList__deleteSelf_set
    __swig_getmethods__["_deleteSelf"] = _StGermain._Stg_ObjectList__deleteSelf_get
    if _newclass:_deleteSelf = _swig_property(_StGermain._Stg_ObjectList__deleteSelf_get, _StGermain._Stg_ObjectList__deleteSelf_set)
    __swig_setmethods__["type"] = _StGermain._Stg_ObjectList_type_set
    __swig_getmethods__["type"] = _StGermain._Stg_ObjectList_type_get
    if _newclass:type = _swig_property(_StGermain._Stg_ObjectList_type_get, _StGermain._Stg_ObjectList_type_set)
    __swig_setmethods__["nRefs"] = _StGermain._Stg_ObjectList_nRefs_set
    __swig_getmethods__["nRefs"] = _StGermain._Stg_ObjectList_nRefs_get
    if _newclass:nRefs = _swig_property(_StGermain._Stg_ObjectList_nRefs_get, _StGermain._Stg_ObjectList_nRefs_set)
    __swig_setmethods__["_delete"] = _StGermain._Stg_ObjectList__delete_set
    __swig_getmethods__["_delete"] = _StGermain._Stg_ObjectList__delete_get
    if _newclass:_delete = _swig_property(_StGermain._Stg_ObjectList__delete_get, _StGermain._Stg_ObjectList__delete_set)
    __swig_setmethods__["_print"] = _StGermain._Stg_ObjectList__print_set
    __swig_getmethods__["_print"] = _StGermain._Stg_ObjectList__print_get
    if _newclass:_print = _swig_property(_StGermain._Stg_ObjectList__print_get, _StGermain._Stg_ObjectList__print_set)
    __swig_setmethods__["_copy"] = _StGermain._Stg_ObjectList__copy_set
    __swig_getmethods__["_copy"] = _StGermain._Stg_ObjectList__copy_get
    if _newclass:_copy = _swig_property(_StGermain._Stg_ObjectList__copy_get, _StGermain._Stg_ObjectList__copy_set)
    __swig_setmethods__["_append"] = _StGermain._Stg_ObjectList__append_set
    __swig_getmethods__["_append"] = _StGermain._Stg_ObjectList__append_get
    if _newclass:_append = _swig_property(_StGermain._Stg_ObjectList__append_get, _StGermain._Stg_ObjectList__append_set)
    __swig_setmethods__["_prepend"] = _StGermain._Stg_ObjectList__prepend_set
    __swig_getmethods__["_prepend"] = _StGermain._Stg_ObjectList__prepend_get
    if _newclass:_prepend = _swig_property(_StGermain._Stg_ObjectList__prepend_get, _StGermain._Stg_ObjectList__prepend_set)
    __swig_setmethods__["_replaceAll"] = _StGermain._Stg_ObjectList__replaceAll_set
    __swig_getmethods__["_replaceAll"] = _StGermain._Stg_ObjectList__replaceAll_get
    if _newclass:_replaceAll = _swig_property(_StGermain._Stg_ObjectList__replaceAll_get, _StGermain._Stg_ObjectList__replaceAll_set)
    __swig_setmethods__["_replace"] = _StGermain._Stg_ObjectList__replace_set
    __swig_getmethods__["_replace"] = _StGermain._Stg_ObjectList__replace_get
    if _newclass:_replace = _swig_property(_StGermain._Stg_ObjectList__replace_get, _StGermain._Stg_ObjectList__replace_set)
    __swig_setmethods__["_insertBefore"] = _StGermain._Stg_ObjectList__insertBefore_set
    __swig_getmethods__["_insertBefore"] = _StGermain._Stg_ObjectList__insertBefore_get
    if _newclass:_insertBefore = _swig_property(_StGermain._Stg_ObjectList__insertBefore_get, _StGermain._Stg_ObjectList__insertBefore_set)
    __swig_setmethods__["_insertAfter"] = _StGermain._Stg_ObjectList__insertAfter_set
    __swig_getmethods__["_insertAfter"] = _StGermain._Stg_ObjectList__insertAfter_get
    if _newclass:_insertAfter = _swig_property(_StGermain._Stg_ObjectList__insertAfter_get, _StGermain._Stg_ObjectList__insertAfter_set)
    __swig_setmethods__["_remove"] = _StGermain._Stg_ObjectList__remove_set
    __swig_getmethods__["_remove"] = _StGermain._Stg_ObjectList__remove_get
    if _newclass:_remove = _swig_property(_StGermain._Stg_ObjectList__remove_get, _StGermain._Stg_ObjectList__remove_set)
    __swig_setmethods__["_getIndex"] = _StGermain._Stg_ObjectList__getIndex_set
    __swig_getmethods__["_getIndex"] = _StGermain._Stg_ObjectList__getIndex_get
    if _newclass:_getIndex = _swig_property(_StGermain._Stg_ObjectList__getIndex_get, _StGermain._Stg_ObjectList__getIndex_set)
    __swig_setmethods__["_get"] = _StGermain._Stg_ObjectList__get_set
    __swig_getmethods__["_get"] = _StGermain._Stg_ObjectList__get_get
    if _newclass:_get = _swig_property(_StGermain._Stg_ObjectList__get_get, _StGermain._Stg_ObjectList__get_set)
    __swig_setmethods__["_allocMoreMemory"] = _StGermain._Stg_ObjectList__allocMoreMemory_set
    __swig_getmethods__["_allocMoreMemory"] = _StGermain._Stg_ObjectList__allocMoreMemory_get
    if _newclass:_allocMoreMemory = _swig_property(_StGermain._Stg_ObjectList__allocMoreMemory_get, _StGermain._Stg_ObjectList__allocMoreMemory_set)
    __swig_setmethods__["_insertAtIndex"] = _StGermain._Stg_ObjectList__insertAtIndex_set
    __swig_getmethods__["_insertAtIndex"] = _StGermain._Stg_ObjectList__insertAtIndex_get
    if _newclass:_insertAtIndex = _swig_property(_StGermain._Stg_ObjectList__insertAtIndex_get, _StGermain._Stg_ObjectList__insertAtIndex_set)
    __swig_setmethods__["_removeByIndex"] = _StGermain._Stg_ObjectList__removeByIndex_set
    __swig_getmethods__["_removeByIndex"] = _StGermain._Stg_ObjectList__removeByIndex_get
    if _newclass:_removeByIndex = _swig_property(_StGermain._Stg_ObjectList__removeByIndex_get, _StGermain._Stg_ObjectList__removeByIndex_set)
    __swig_setmethods__["_deleteAllObjects"] = _StGermain._Stg_ObjectList__deleteAllObjects_set
    __swig_getmethods__["_deleteAllObjects"] = _StGermain._Stg_ObjectList__deleteAllObjects_get
    if _newclass:_deleteAllObjects = _swig_property(_StGermain._Stg_ObjectList__deleteAllObjects_get, _StGermain._Stg_ObjectList__deleteAllObjects_set)
    __swig_setmethods__["data"] = _StGermain._Stg_ObjectList_data_set
    __swig_getmethods__["data"] = _StGermain._Stg_ObjectList_data_get
    if _newclass:data = _swig_property(_StGermain._Stg_ObjectList_data_get, _StGermain._Stg_ObjectList_data_set)
    __swig_setmethods__["count"] = _StGermain._Stg_ObjectList_count_set
    __swig_getmethods__["count"] = _StGermain._Stg_ObjectList_count_get
    if _newclass:count = _swig_property(_StGermain._Stg_ObjectList_count_get, _StGermain._Stg_ObjectList_count_set)
    __swig_setmethods__["_size"] = _StGermain._Stg_ObjectList__size_set
    __swig_getmethods__["_size"] = _StGermain._Stg_ObjectList__size_get
    if _newclass:_size = _swig_property(_StGermain._Stg_ObjectList__size_get, _StGermain._Stg_ObjectList__size_set)
    __swig_setmethods__["_delta"] = _StGermain._Stg_ObjectList__delta_set
    __swig_getmethods__["_delta"] = _StGermain._Stg_ObjectList__delta_get
    if _newclass:_delta = _swig_property(_StGermain._Stg_ObjectList__delta_get, _StGermain._Stg_ObjectList__delta_set)
    __swig_setmethods__["_noJournalingInCopy"] = _StGermain._Stg_ObjectList__noJournalingInCopy_set
    __swig_getmethods__["_noJournalingInCopy"] = _StGermain._Stg_ObjectList__noJournalingInCopy_get
    if _newclass:_noJournalingInCopy = _swig_property(_StGermain._Stg_ObjectList__noJournalingInCopy_get, _StGermain._Stg_ObjectList__noJournalingInCopy_set)
    def __init__(self): 
        this = _StGermain.new__Stg_ObjectList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _StGermain.delete__Stg_ObjectList
    __del__ = lambda self : None;
_Stg_ObjectList_swigregister = _StGermain._Stg_ObjectList_swigregister
_Stg_ObjectList_swigregister(_Stg_ObjectList)
Stg_ObjectList_Type = cvar.Stg_ObjectList_Type
DEFAULT_LIST_INITIAL_SIZE = cvar.DEFAULT_LIST_INITIAL_SIZE
DEFAULT_LIST_DELTA = cvar.DEFAULT_LIST_DELTA


def Stg_ObjectList_New2(*args):
  return _StGermain.Stg_ObjectList_New2(*args)
Stg_ObjectList_New2 = _StGermain.Stg_ObjectList_New2

def Stg_ObjectList_Init2(*args):
  return _StGermain.Stg_ObjectList_Init2(*args)
Stg_ObjectList_Init2 = _StGermain.Stg_ObjectList_Init2

def _Stg_ObjectList_New(*args):
  return _StGermain._Stg_ObjectList_New(*args)
_Stg_ObjectList_New = _StGermain._Stg_ObjectList_New

def _Stg_ObjectList_Init(*args):
  return _StGermain._Stg_ObjectList_Init(*args)
_Stg_ObjectList_Init = _StGermain._Stg_ObjectList_Init

def _Stg_ObjectList_Delete(*args):
  return _StGermain._Stg_ObjectList_Delete(*args)
_Stg_ObjectList_Delete = _StGermain._Stg_ObjectList_Delete

def _Stg_ObjectList_Print(*args):
  return _StGermain._Stg_ObjectList_Print(*args)
_Stg_ObjectList_Print = _StGermain._Stg_ObjectList_Print

def _Stg_ObjectList_Copy(*args):
  return _StGermain._Stg_ObjectList_Copy(*args)
_Stg_ObjectList_Copy = _StGermain._Stg_ObjectList_Copy

def Stg_ObjectList_Append(*args):
  return _StGermain.Stg_ObjectList_Append(*args)
Stg_ObjectList_Append = _StGermain.Stg_ObjectList_Append

def Stg_ObjectList_ClassAppend(*args):
  return _StGermain.Stg_ObjectList_ClassAppend(*args)
Stg_ObjectList_ClassAppend = _StGermain.Stg_ObjectList_ClassAppend

def Stg_ObjectList_PointerAppend(*args):
  return _StGermain.Stg_ObjectList_PointerAppend(*args)
Stg_ObjectList_PointerAppend = _StGermain.Stg_ObjectList_PointerAppend

def Stg_ObjectList_GlobalPointerAppend(*args):
  return _StGermain.Stg_ObjectList_GlobalPointerAppend(*args)
Stg_ObjectList_GlobalPointerAppend = _StGermain.Stg_ObjectList_GlobalPointerAppend

def Stg_ObjectList_Prepend(*args):
  return _StGermain.Stg_ObjectList_Prepend(*args)
Stg_ObjectList_Prepend = _StGermain.Stg_ObjectList_Prepend

def Stg_ObjectList_ClassPrepend(*args):
  return _StGermain.Stg_ObjectList_ClassPrepend(*args)
Stg_ObjectList_ClassPrepend = _StGermain.Stg_ObjectList_ClassPrepend

def Stg_ObjectList_PointerPrepend(*args):
  return _StGermain.Stg_ObjectList_PointerPrepend(*args)
Stg_ObjectList_PointerPrepend = _StGermain.Stg_ObjectList_PointerPrepend

def Stg_ObjectList_GlobalPointerPrepend(*args):
  return _StGermain.Stg_ObjectList_GlobalPointerPrepend(*args)
Stg_ObjectList_GlobalPointerPrepend = _StGermain.Stg_ObjectList_GlobalPointerPrepend

def Stg_ObjectList_ReplaceAll(*args):
  return _StGermain.Stg_ObjectList_ReplaceAll(*args)
Stg_ObjectList_ReplaceAll = _StGermain.Stg_ObjectList_ReplaceAll

def Stg_ObjectList_ClassReplaceAll(*args):
  return _StGermain.Stg_ObjectList_ClassReplaceAll(*args)
Stg_ObjectList_ClassReplaceAll = _StGermain.Stg_ObjectList_ClassReplaceAll

def Stg_ObjectList_PointerReplaceAll(*args):
  return _StGermain.Stg_ObjectList_PointerReplaceAll(*args)
Stg_ObjectList_PointerReplaceAll = _StGermain.Stg_ObjectList_PointerReplaceAll

def Stg_ObjectList_GlobalPointerReplaceAll(*args):
  return _StGermain.Stg_ObjectList_GlobalPointerReplaceAll(*args)
Stg_ObjectList_GlobalPointerReplaceAll = _StGermain.Stg_ObjectList_GlobalPointerReplaceAll

def Stg_ObjectList_Replace(*args):
  return _StGermain.Stg_ObjectList_Replace(*args)
Stg_ObjectList_Replace = _StGermain.Stg_ObjectList_Replace

def Stg_ObjectList_ClassReplace(*args):
  return _StGermain.Stg_ObjectList_ClassReplace(*args)
Stg_ObjectList_ClassReplace = _StGermain.Stg_ObjectList_ClassReplace

def Stg_ObjectList_PointerReplace(*args):
  return _StGermain.Stg_ObjectList_PointerReplace(*args)
Stg_ObjectList_PointerReplace = _StGermain.Stg_ObjectList_PointerReplace

def Stg_ObjectList_GlobalPointerReplace(*args):
  return _StGermain.Stg_ObjectList_GlobalPointerReplace(*args)
Stg_ObjectList_GlobalPointerReplace = _StGermain.Stg_ObjectList_GlobalPointerReplace

def Stg_ObjectList_InsertBefore(*args):
  return _StGermain.Stg_ObjectList_InsertBefore(*args)
Stg_ObjectList_InsertBefore = _StGermain.Stg_ObjectList_InsertBefore

def Stg_ObjectList_ClassInsertBefore(*args):
  return _StGermain.Stg_ObjectList_ClassInsertBefore(*args)
Stg_ObjectList_ClassInsertBefore = _StGermain.Stg_ObjectList_ClassInsertBefore

def Stg_ObjectList_PointerInsertBefore(*args):
  return _StGermain.Stg_ObjectList_PointerInsertBefore(*args)
Stg_ObjectList_PointerInsertBefore = _StGermain.Stg_ObjectList_PointerInsertBefore

def Stg_ObjectList_GlobalPointerInsertBefore(*args):
  return _StGermain.Stg_ObjectList_GlobalPointerInsertBefore(*args)
Stg_ObjectList_GlobalPointerInsertBefore = _StGermain.Stg_ObjectList_GlobalPointerInsertBefore

def Stg_ObjectList_InsertAtIndex(*args):
  return _StGermain.Stg_ObjectList_InsertAtIndex(*args)
Stg_ObjectList_InsertAtIndex = _StGermain.Stg_ObjectList_InsertAtIndex

def Stg_ObjectList_InsertAfter(*args):
  return _StGermain.Stg_ObjectList_InsertAfter(*args)
Stg_ObjectList_InsertAfter = _StGermain.Stg_ObjectList_InsertAfter

def Stg_ObjectList_ClassInsertAfter(*args):
  return _StGermain.Stg_ObjectList_ClassInsertAfter(*args)
Stg_ObjectList_ClassInsertAfter = _StGermain.Stg_ObjectList_ClassInsertAfter

def Stg_ObjectList_PointerInsertAfter(*args):
  return _StGermain.Stg_ObjectList_PointerInsertAfter(*args)
Stg_ObjectList_PointerInsertAfter = _StGermain.Stg_ObjectList_PointerInsertAfter

def Stg_ObjectList_GlobalPointerInsertAfter(*args):
  return _StGermain.Stg_ObjectList_GlobalPointerInsertAfter(*args)
Stg_ObjectList_GlobalPointerInsertAfter = _StGermain.Stg_ObjectList_GlobalPointerInsertAfter

def Stg_ObjectList_Remove(*args):
  return _StGermain.Stg_ObjectList_Remove(*args)
Stg_ObjectList_Remove = _StGermain.Stg_ObjectList_Remove

def Stg_ObjectList_GetIndex(*args):
  return _StGermain.Stg_ObjectList_GetIndex(*args)
Stg_ObjectList_GetIndex = _StGermain.Stg_ObjectList_GetIndex

def Stg_ObjectList_Get(*args):
  return _StGermain.Stg_ObjectList_Get(*args)
Stg_ObjectList_Get = _StGermain.Stg_ObjectList_Get

def Stg_ObjectList_DeleteAllObjects(*args):
  return _StGermain.Stg_ObjectList_DeleteAllObjects(*args)
Stg_ObjectList_DeleteAllObjects = _StGermain.Stg_ObjectList_DeleteAllObjects

def Stg_ObjectList_PrintAllEntryNames(*args):
  return _StGermain.Stg_ObjectList_PrintAllEntryNames(*args)
Stg_ObjectList_PrintAllEntryNames = _StGermain.Stg_ObjectList_PrintAllEntryNames

def Stg_ObjectList_PrintAllObjects(*args):
  return _StGermain.Stg_ObjectList_PrintAllObjects(*args)
Stg_ObjectList_PrintAllObjects = _StGermain.Stg_ObjectList_PrintAllObjects

def Stg_ObjectList_AtFunc(*args):
  return _StGermain.Stg_ObjectList_AtFunc(*args)
Stg_ObjectList_AtFunc = _StGermain.Stg_ObjectList_AtFunc

def Stg_ObjectList_CountFunc(*args):
  return _StGermain.Stg_ObjectList_CountFunc(*args)
Stg_ObjectList_CountFunc = _StGermain.Stg_ObjectList_CountFunc

def _Stg_ObjectList_Append(*args):
  return _StGermain._Stg_ObjectList_Append(*args)
_Stg_ObjectList_Append = _StGermain._Stg_ObjectList_Append

def _Stg_ObjectList_Prepend(*args):
  return _StGermain._Stg_ObjectList_Prepend(*args)
_Stg_ObjectList_Prepend = _StGermain._Stg_ObjectList_Prepend

def _Stg_ObjectList_ReplaceAll(*args):
  return _StGermain._Stg_ObjectList_ReplaceAll(*args)
_Stg_ObjectList_ReplaceAll = _StGermain._Stg_ObjectList_ReplaceAll

def _Stg_ObjectList_Replace(*args):
  return _StGermain._Stg_ObjectList_Replace(*args)
_Stg_ObjectList_Replace = _StGermain._Stg_ObjectList_Replace

def _Stg_ObjectList_InsertBefore(*args):
  return _StGermain._Stg_ObjectList_InsertBefore(*args)
_Stg_ObjectList_InsertBefore = _StGermain._Stg_ObjectList_InsertBefore

def _Stg_ObjectList_InsertAfter(*args):
  return _StGermain._Stg_ObjectList_InsertAfter(*args)
_Stg_ObjectList_InsertAfter = _StGermain._Stg_ObjectList_InsertAfter

def _Stg_ObjectList_Remove(*args):
  return _StGermain._Stg_ObjectList_Remove(*args)
_Stg_ObjectList_Remove = _StGermain._Stg_ObjectList_Remove

def _Stg_ObjectList_GetIndex(*args):
  return _StGermain._Stg_ObjectList_GetIndex(*args)
_Stg_ObjectList_GetIndex = _StGermain._Stg_ObjectList_GetIndex

def _Stg_ObjectList_Get(*args):
  return _StGermain._Stg_ObjectList_Get(*args)
_Stg_ObjectList_Get = _StGermain._Stg_ObjectList_Get

def _Stg_ObjectList_DeleteAllObjects(*args):
  return _StGermain._Stg_ObjectList_DeleteAllObjects(*args)
_Stg_ObjectList_DeleteAllObjects = _StGermain._Stg_ObjectList_DeleteAllObjects

def _Stg_ObjectList_AllocMoreMemory(*args):
  return _StGermain._Stg_ObjectList_AllocMoreMemory(*args)
_Stg_ObjectList_AllocMoreMemory = _StGermain._Stg_ObjectList_AllocMoreMemory

def _Stg_ObjectList_InsertAtIndex(*args):
  return _StGermain._Stg_ObjectList_InsertAtIndex(*args)
_Stg_ObjectList_InsertAtIndex = _StGermain._Stg_ObjectList_InsertAtIndex

def _Stg_ObjectList_RemoveByIndex(*args):
  return _StGermain._Stg_ObjectList_RemoveByIndex(*args)
_Stg_ObjectList_RemoveByIndex = _StGermain._Stg_ObjectList_RemoveByIndex

def Stg_ObjectList_PrintSimilar(*args):
  return _StGermain.Stg_ObjectList_PrintSimilar(*args)
Stg_ObjectList_PrintSimilar = _StGermain.Stg_ObjectList_PrintSimilar
class Context_CallInfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Context_CallInfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Context_CallInfo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["functionPointer"] = _StGermain.Context_CallInfo_functionPointer_set
    __swig_getmethods__["functionPointer"] = _StGermain.Context_CallInfo_functionPointer_get
    if _newclass:functionPointer = _swig_property(_StGermain.Context_CallInfo_functionPointer_get, _StGermain.Context_CallInfo_functionPointer_set)
    __swig_setmethods__["entryPoint"] = _StGermain.Context_CallInfo_entryPoint_set
    __swig_getmethods__["entryPoint"] = _StGermain.Context_CallInfo_entryPoint_get
    if _newclass:entryPoint = _swig_property(_StGermain.Context_CallInfo_entryPoint_get, _StGermain.Context_CallInfo_entryPoint_set)
    def __init__(self): 
        this = _StGermain.new_Context_CallInfo()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _StGermain.delete_Context_CallInfo
    __del__ = lambda self : None;
Context_CallInfo_swigregister = _StGermain.Context_CallInfo_swigregister
Context_CallInfo_swigregister(Context_CallInfo)

CHECKPOINT_FORMAT_ASCII = _StGermain.CHECKPOINT_FORMAT_ASCII
CHECKPOINT_FORMAT_HDF5 = _StGermain.CHECKPOINT_FORMAT_HDF5
class AbstractContext(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, AbstractContext, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, AbstractContext, name)
    __repr__ = _swig_repr
    __swig_setmethods__["_sizeOfSelf"] = _StGermain.AbstractContext__sizeOfSelf_set
    __swig_getmethods__["_sizeOfSelf"] = _StGermain.AbstractContext__sizeOfSelf_get
    if _newclass:_sizeOfSelf = _swig_property(_StGermain.AbstractContext__sizeOfSelf_get, _StGermain.AbstractContext__sizeOfSelf_set)
    __swig_setmethods__["_deleteSelf"] = _StGermain.AbstractContext__deleteSelf_set
    __swig_getmethods__["_deleteSelf"] = _StGermain.AbstractContext__deleteSelf_get
    if _newclass:_deleteSelf = _swig_property(_StGermain.AbstractContext__deleteSelf_get, _StGermain.AbstractContext__deleteSelf_set)
    __swig_setmethods__["type"] = _StGermain.AbstractContext_type_set
    __swig_getmethods__["type"] = _StGermain.AbstractContext_type_get
    if _newclass:type = _swig_property(_StGermain.AbstractContext_type_get, _StGermain.AbstractContext_type_set)
    __swig_setmethods__["nRefs"] = _StGermain.AbstractContext_nRefs_set
    __swig_getmethods__["nRefs"] = _StGermain.AbstractContext_nRefs_get
    if _newclass:nRefs = _swig_property(_StGermain.AbstractContext_nRefs_get, _StGermain.AbstractContext_nRefs_set)
    __swig_setmethods__["_delete"] = _StGermain.AbstractContext__delete_set
    __swig_getmethods__["_delete"] = _StGermain.AbstractContext__delete_get
    if _newclass:_delete = _swig_property(_StGermain.AbstractContext__delete_get, _StGermain.AbstractContext__delete_set)
    __swig_setmethods__["_print"] = _StGermain.AbstractContext__print_set
    __swig_getmethods__["_print"] = _StGermain.AbstractContext__print_get
    if _newclass:_print = _swig_property(_StGermain.AbstractContext__print_get, _StGermain.AbstractContext__print_set)
    __swig_setmethods__["_copy"] = _StGermain.AbstractContext__copy_set
    __swig_getmethods__["_copy"] = _StGermain.AbstractContext__copy_get
    if _newclass:_copy = _swig_property(_StGermain.AbstractContext__copy_get, _StGermain.AbstractContext__copy_set)
    __swig_setmethods__["name"] = _StGermain.AbstractContext_name_set
    __swig_getmethods__["name"] = _StGermain.AbstractContext_name_get
    if _newclass:name = _swig_property(_StGermain.AbstractContext_name_get, _StGermain.AbstractContext_name_set)
    __swig_setmethods__["nameAllocationType"] = _StGermain.AbstractContext_nameAllocationType_set
    __swig_getmethods__["nameAllocationType"] = _StGermain.AbstractContext_nameAllocationType_get
    if _newclass:nameAllocationType = _swig_property(_StGermain.AbstractContext_nameAllocationType_get, _StGermain.AbstractContext_nameAllocationType_set)
    __swig_setmethods__["_defaultConstructor"] = _StGermain.AbstractContext__defaultConstructor_set
    __swig_getmethods__["_defaultConstructor"] = _StGermain.AbstractContext__defaultConstructor_get
    if _newclass:_defaultConstructor = _swig_property(_StGermain.AbstractContext__defaultConstructor_get, _StGermain.AbstractContext__defaultConstructor_set)
    __swig_setmethods__["_construct"] = _StGermain.AbstractContext__construct_set
    __swig_getmethods__["_construct"] = _StGermain.AbstractContext__construct_get
    if _newclass:_construct = _swig_property(_StGermain.AbstractContext__construct_get, _StGermain.AbstractContext__construct_set)
    __swig_setmethods__["_build"] = _StGermain.AbstractContext__build_set
    __swig_getmethods__["_build"] = _StGermain.AbstractContext__build_get
    if _newclass:_build = _swig_property(_StGermain.AbstractContext__build_get, _StGermain.AbstractContext__build_set)
    __swig_setmethods__["_initialise"] = _StGermain.AbstractContext__initialise_set
    __swig_getmethods__["_initialise"] = _StGermain.AbstractContext__initialise_get
    if _newclass:_initialise = _swig_property(_StGermain.AbstractContext__initialise_get, _StGermain.AbstractContext__initialise_set)
    __swig_setmethods__["_execute"] = _StGermain.AbstractContext__execute_set
    __swig_getmethods__["_execute"] = _StGermain.AbstractContext__execute_get
    if _newclass:_execute = _swig_property(_StGermain.AbstractContext__execute_get, _StGermain.AbstractContext__execute_set)
    __swig_setmethods__["_destroy"] = _StGermain.AbstractContext__destroy_set
    __swig_getmethods__["_destroy"] = _StGermain.AbstractContext__destroy_get
    if _newclass:_destroy = _swig_property(_StGermain.AbstractContext__destroy_get, _StGermain.AbstractContext__destroy_set)
    __swig_setmethods__["isConstructed"] = _StGermain.AbstractContext_isConstructed_set
    __swig_getmethods__["isConstructed"] = _StGermain.AbstractContext_isConstructed_get
    if _newclass:isConstructed = _swig_property(_StGermain.AbstractContext_isConstructed_get, _StGermain.AbstractContext_isConstructed_set)
    __swig_setmethods__["isBuilt"] = _StGermain.AbstractContext_isBuilt_set
    __swig_getmethods__["isBuilt"] = _StGermain.AbstractContext_isBuilt_get
    if _newclass:isBuilt = _swig_property(_StGermain.AbstractContext_isBuilt_get, _StGermain.AbstractContext_isBuilt_set)
    __swig_setmethods__["isInitialised"] = _StGermain.AbstractContext_isInitialised_set
    __swig_getmethods__["isInitialised"] = _StGermain.AbstractContext_isInitialised_get
    if _newclass:isInitialised = _swig_property(_StGermain.AbstractContext_isInitialised_get, _StGermain.AbstractContext_isInitialised_set)
    __swig_setmethods__["hasExecuted"] = _StGermain.AbstractContext_hasExecuted_set
    __swig_getmethods__["hasExecuted"] = _StGermain.AbstractContext_hasExecuted_get
    if _newclass:hasExecuted = _swig_property(_StGermain.AbstractContext_hasExecuted_get, _StGermain.AbstractContext_hasExecuted_set)
    __swig_setmethods__["isDestroyed"] = _StGermain.AbstractContext_isDestroyed_set
    __swig_getmethods__["isDestroyed"] = _StGermain.AbstractContext_isDestroyed_get
    if _newclass:isDestroyed = _swig_property(_StGermain.AbstractContext_isDestroyed_get, _StGermain.AbstractContext_isDestroyed_set)
    __swig_setmethods__["constructType"] = _StGermain.AbstractContext_constructType_set
    __swig_getmethods__["constructType"] = _StGermain.AbstractContext_constructType_get
    if _newclass:constructType = _swig_property(_StGermain.AbstractContext_constructType_get, _StGermain.AbstractContext_constructType_set)
    __swig_setmethods__["buildType"] = _StGermain.AbstractContext_buildType_set
    __swig_getmethods__["buildType"] = _StGermain.AbstractContext_buildType_get
    if _newclass:buildType = _swig_property(_StGermain.AbstractContext_buildType_get, _StGermain.AbstractContext_buildType_set)
    __swig_setmethods__["initialiseType"] = _StGermain.AbstractContext_initialiseType_set
    __swig_getmethods__["initialiseType"] = _StGermain.AbstractContext_initialiseType_get
    if _newclass:initialiseType = _swig_property(_StGermain.AbstractContext_initialiseType_get, _StGermain.AbstractContext_initialiseType_set)
    __swig_setmethods__["executeType"] = _StGermain.AbstractContext_executeType_set
    __swig_getmethods__["executeType"] = _StGermain.AbstractContext_executeType_get
    if _newclass:executeType = _swig_property(_StGermain.AbstractContext_executeType_get, _StGermain.AbstractContext_executeType_set)
    __swig_setmethods__["destroyType"] = _StGermain.AbstractContext_destroyType_set
    __swig_getmethods__["destroyType"] = _StGermain.AbstractContext_destroyType_get
    if _newclass:destroyType = _swig_property(_StGermain.AbstractContext_destroyType_get, _StGermain.AbstractContext_destroyType_set)
    __swig_setmethods__["dictionary"] = _StGermain.AbstractContext_dictionary_set
    __swig_getmethods__["dictionary"] = _StGermain.AbstractContext_dictionary_get
    if _newclass:dictionary = _swig_property(_StGermain.AbstractContext_dictionary_get, _StGermain.AbstractContext_dictionary_set)
    __swig_setmethods__["_setDt"] = _StGermain.AbstractContext__setDt_set
    __swig_getmethods__["_setDt"] = _StGermain.AbstractContext__setDt_get
    if _newclass:_setDt = _swig_property(_StGermain.AbstractContext__setDt_get, _StGermain.AbstractContext__setDt_set)
    __swig_setmethods__["communicator"] = _StGermain.AbstractContext_communicator_set
    __swig_getmethods__["communicator"] = _StGermain.AbstractContext_communicator_get
    if _newclass:communicator = _swig_property(_StGermain.AbstractContext_communicator_get, _StGermain.AbstractContext_communicator_set)
    __swig_setmethods__["rank"] = _StGermain.AbstractContext_rank_set
    __swig_getmethods__["rank"] = _StGermain.AbstractContext_rank_get
    if _newclass:rank = _swig_property(_StGermain.AbstractContext_rank_get, _StGermain.AbstractContext_rank_set)
    __swig_setmethods__["nproc"] = _StGermain.AbstractContext_nproc_set
    __swig_getmethods__["nproc"] = _StGermain.AbstractContext_nproc_get
    if _newclass:nproc = _swig_property(_StGermain.AbstractContext_nproc_get, _StGermain.AbstractContext_nproc_set)
    __swig_setmethods__["startTime"] = _StGermain.AbstractContext_startTime_set
    __swig_getmethods__["startTime"] = _StGermain.AbstractContext_startTime_get
    if _newclass:startTime = _swig_property(_StGermain.AbstractContext_startTime_get, _StGermain.AbstractContext_startTime_set)
    __swig_setmethods__["stopTime"] = _StGermain.AbstractContext_stopTime_set
    __swig_getmethods__["stopTime"] = _StGermain.AbstractContext_stopTime_get
    if _newclass:stopTime = _swig_property(_StGermain.AbstractContext_stopTime_get, _StGermain.AbstractContext_stopTime_set)
    __swig_setmethods__["currentTime"] = _StGermain.AbstractContext_currentTime_set
    __swig_getmethods__["currentTime"] = _StGermain.AbstractContext_currentTime_get
    if _newclass:currentTime = _swig_property(_StGermain.AbstractContext_currentTime_get, _StGermain.AbstractContext_currentTime_set)
    __swig_setmethods__["timeStep"] = _StGermain.AbstractContext_timeStep_set
    __swig_getmethods__["timeStep"] = _StGermain.AbstractContext_timeStep_get
    if _newclass:timeStep = _swig_property(_StGermain.AbstractContext_timeStep_get, _StGermain.AbstractContext_timeStep_set)
    __swig_setmethods__["dt"] = _StGermain.AbstractContext_dt_set
    __swig_getmethods__["dt"] = _StGermain.AbstractContext_dt_get
    if _newclass:dt = _swig_property(_StGermain.AbstractContext_dt_get, _StGermain.AbstractContext_dt_set)
    __swig_setmethods__["dtFactor"] = _StGermain.AbstractContext_dtFactor_set
    __swig_getmethods__["dtFactor"] = _StGermain.AbstractContext_dtFactor_get
    if _newclass:dtFactor = _swig_property(_StGermain.AbstractContext_dtFactor_get, _StGermain.AbstractContext_dtFactor_set)
    __swig_setmethods__["timeStepSinceJobRestart"] = _StGermain.AbstractContext_timeStepSinceJobRestart_set
    __swig_getmethods__["timeStepSinceJobRestart"] = _StGermain.AbstractContext_timeStepSinceJobRestart_get
    if _newclass:timeStepSinceJobRestart = _swig_property(_StGermain.AbstractContext_timeStepSinceJobRestart_get, _StGermain.AbstractContext_timeStepSinceJobRestart_set)
    __swig_setmethods__["maxTimeSteps"] = _StGermain.AbstractContext_maxTimeSteps_set
    __swig_getmethods__["maxTimeSteps"] = _StGermain.AbstractContext_maxTimeSteps_get
    if _newclass:maxTimeSteps = _swig_property(_StGermain.AbstractContext_maxTimeSteps_get, _StGermain.AbstractContext_maxTimeSteps_set)
    __swig_setmethods__["finalTimeStep"] = _StGermain.AbstractContext_finalTimeStep_set
    __swig_getmethods__["finalTimeStep"] = _StGermain.AbstractContext_finalTimeStep_get
    if _newclass:finalTimeStep = _swig_property(_StGermain.AbstractContext_finalTimeStep_get, _StGermain.AbstractContext_finalTimeStep_set)
    __swig_setmethods__["gracefulQuit"] = _StGermain.AbstractContext_gracefulQuit_set
    __swig_getmethods__["gracefulQuit"] = _StGermain.AbstractContext_gracefulQuit_get
    if _newclass:gracefulQuit = _swig_property(_StGermain.AbstractContext_gracefulQuit_get, _StGermain.AbstractContext_gracefulQuit_set)
    __swig_setmethods__["frequentOutputEvery"] = _StGermain.AbstractContext_frequentOutputEvery_set
    __swig_getmethods__["frequentOutputEvery"] = _StGermain.AbstractContext_frequentOutputEvery_get
    if _newclass:frequentOutputEvery = _swig_property(_StGermain.AbstractContext_frequentOutputEvery_get, _StGermain.AbstractContext_frequentOutputEvery_set)
    __swig_setmethods__["stepDump"] = _StGermain.AbstractContext_stepDump_set
    __swig_getmethods__["stepDump"] = _StGermain.AbstractContext_stepDump_get
    if _newclass:stepDump = _swig_property(_StGermain.AbstractContext_stepDump_get, _StGermain.AbstractContext_stepDump_set)
    __swig_setmethods__["dumpEvery"] = _StGermain.AbstractContext_dumpEvery_set
    __swig_getmethods__["dumpEvery"] = _StGermain.AbstractContext_dumpEvery_get
    if _newclass:dumpEvery = _swig_property(_StGermain.AbstractContext_dumpEvery_get, _StGermain.AbstractContext_dumpEvery_set)
    __swig_setmethods__["checkpointEvery"] = _StGermain.AbstractContext_checkpointEvery_set
    __swig_getmethods__["checkpointEvery"] = _StGermain.AbstractContext_checkpointEvery_get
    if _newclass:checkpointEvery = _swig_property(_StGermain.AbstractContext_checkpointEvery_get, _StGermain.AbstractContext_checkpointEvery_set)
    __swig_setmethods__["saveDataEvery"] = _StGermain.AbstractContext_saveDataEvery_set
    __swig_getmethods__["saveDataEvery"] = _StGermain.AbstractContext_saveDataEvery_get
    if _newclass:saveDataEvery = _swig_property(_StGermain.AbstractContext_saveDataEvery_get, _StGermain.AbstractContext_saveDataEvery_set)
    __swig_setmethods__["checkpointAtTimeInc"] = _StGermain.AbstractContext_checkpointAtTimeInc_set
    __swig_getmethods__["checkpointAtTimeInc"] = _StGermain.AbstractContext_checkpointAtTimeInc_get
    if _newclass:checkpointAtTimeInc = _swig_property(_StGermain.AbstractContext_checkpointAtTimeInc_get, _StGermain.AbstractContext_checkpointAtTimeInc_set)
    __swig_setmethods__["nextCheckpointTime"] = _StGermain.AbstractContext_nextCheckpointTime_set
    __swig_getmethods__["nextCheckpointTime"] = _StGermain.AbstractContext_nextCheckpointTime_get
    if _newclass:nextCheckpointTime = _swig_property(_StGermain.AbstractContext_nextCheckpointTime_get, _StGermain.AbstractContext_nextCheckpointTime_set)
    __swig_setmethods__["experimentName"] = _StGermain.AbstractContext_experimentName_set
    __swig_getmethods__["experimentName"] = _StGermain.AbstractContext_experimentName_get
    if _newclass:experimentName = _swig_property(_StGermain.AbstractContext_experimentName_get, _StGermain.AbstractContext_experimentName_set)
    __swig_setmethods__["outputPath"] = _StGermain.AbstractContext_outputPath_set
    __swig_getmethods__["outputPath"] = _StGermain.AbstractContext_outputPath_get
    if _newclass:outputPath = _swig_property(_StGermain.AbstractContext_outputPath_get, _StGermain.AbstractContext_outputPath_set)
    __swig_setmethods__["checkpointReadPath"] = _StGermain.AbstractContext_checkpointReadPath_set
    __swig_getmethods__["checkpointReadPath"] = _StGermain.AbstractContext_checkpointReadPath_get
    if _newclass:checkpointReadPath = _swig_property(_StGermain.AbstractContext_checkpointReadPath_get, _StGermain.AbstractContext_checkpointReadPath_set)
    __swig_setmethods__["checkpointWritePath"] = _StGermain.AbstractContext_checkpointWritePath_set
    __swig_getmethods__["checkpointWritePath"] = _StGermain.AbstractContext_checkpointWritePath_get
    if _newclass:checkpointWritePath = _swig_property(_StGermain.AbstractContext_checkpointWritePath_get, _StGermain.AbstractContext_checkpointWritePath_set)
    __swig_setmethods__["checkpointAppendStep"] = _StGermain.AbstractContext_checkpointAppendStep_set
    __swig_getmethods__["checkpointAppendStep"] = _StGermain.AbstractContext_checkpointAppendStep_get
    if _newclass:checkpointAppendStep = _swig_property(_StGermain.AbstractContext_checkpointAppendStep_get, _StGermain.AbstractContext_checkpointAppendStep_set)
    __swig_setmethods__["interpolateRestart"] = _StGermain.AbstractContext_interpolateRestart_set
    __swig_getmethods__["interpolateRestart"] = _StGermain.AbstractContext_interpolateRestart_get
    if _newclass:interpolateRestart = _swig_property(_StGermain.AbstractContext_interpolateRestart_get, _StGermain.AbstractContext_interpolateRestart_set)
    __swig_setmethods__["loadFromCheckPoint"] = _StGermain.AbstractContext_loadFromCheckPoint_set
    __swig_getmethods__["loadFromCheckPoint"] = _StGermain.AbstractContext_loadFromCheckPoint_get
    if _newclass:loadFromCheckPoint = _swig_property(_StGermain.AbstractContext_loadFromCheckPoint_get, _StGermain.AbstractContext_loadFromCheckPoint_set)
    __swig_setmethods__["loadFieldsFromCheckpoint"] = _StGermain.AbstractContext_loadFieldsFromCheckpoint_set
    __swig_getmethods__["loadFieldsFromCheckpoint"] = _StGermain.AbstractContext_loadFieldsFromCheckpoint_get
    if _newclass:loadFieldsFromCheckpoint = _swig_property(_StGermain.AbstractContext_loadFieldsFromCheckpoint_get, _StGermain.AbstractContext_loadFieldsFromCheckpoint_set)
    __swig_setmethods__["loadSwarmsFromCheckpoint"] = _StGermain.AbstractContext_loadSwarmsFromCheckpoint_set
    __swig_getmethods__["loadSwarmsFromCheckpoint"] = _StGermain.AbstractContext_loadSwarmsFromCheckpoint_get
    if _newclass:loadSwarmsFromCheckpoint = _swig_property(_StGermain.AbstractContext_loadSwarmsFromCheckpoint_get, _StGermain.AbstractContext_loadSwarmsFromCheckpoint_set)
    __swig_setmethods__["outputSlimmedXML"] = _StGermain.AbstractContext_outputSlimmedXML_set
    __swig_getmethods__["outputSlimmedXML"] = _StGermain.AbstractContext_outputSlimmedXML_get
    if _newclass:outputSlimmedXML = _swig_property(_StGermain.AbstractContext_outputSlimmedXML_get, _StGermain.AbstractContext_outputSlimmedXML_set)
    __swig_setmethods__["vis"] = _StGermain.AbstractContext_vis_set
    __swig_getmethods__["vis"] = _StGermain.AbstractContext_vis_get
    if _newclass:vis = _swig_property(_StGermain.AbstractContext_vis_get, _StGermain.AbstractContext_vis_set)
    __swig_setmethods__["restartTimestep"] = _StGermain.AbstractContext_restartTimestep_set
    __swig_getmethods__["restartTimestep"] = _StGermain.AbstractContext_restartTimestep_get
    if _newclass:restartTimestep = _swig_property(_StGermain.AbstractContext_restartTimestep_get, _StGermain.AbstractContext_restartTimestep_set)
    __swig_setmethods__["checkPointPrefixString"] = _StGermain.AbstractContext_checkPointPrefixString_set
    __swig_getmethods__["checkPointPrefixString"] = _StGermain.AbstractContext_checkPointPrefixString_get
    if _newclass:checkPointPrefixString = _swig_property(_StGermain.AbstractContext_checkPointPrefixString_get, _StGermain.AbstractContext_checkPointPrefixString_set)
    __swig_setmethods__["info"] = _StGermain.AbstractContext_info_set
    __swig_getmethods__["info"] = _StGermain.AbstractContext_info_get
    if _newclass:info = _swig_property(_StGermain.AbstractContext_info_get, _StGermain.AbstractContext_info_set)
    __swig_setmethods__["verbose"] = _StGermain.AbstractContext_verbose_set
    __swig_getmethods__["verbose"] = _StGermain.AbstractContext_verbose_get
    if _newclass:verbose = _swig_property(_StGermain.AbstractContext_verbose_get, _StGermain.AbstractContext_verbose_set)
    __swig_setmethods__["debug"] = _StGermain.AbstractContext_debug_set
    __swig_getmethods__["debug"] = _StGermain.AbstractContext_debug_get
    if _newclass:debug = _swig_property(_StGermain.AbstractContext_debug_get, _StGermain.AbstractContext_debug_set)
    __swig_setmethods__["input_verbose_stream"] = _StGermain.AbstractContext_input_verbose_stream_set
    __swig_getmethods__["input_verbose_stream"] = _StGermain.AbstractContext_input_verbose_stream_get
    if _newclass:input_verbose_stream = _swig_property(_StGermain.AbstractContext_input_verbose_stream_get, _StGermain.AbstractContext_input_verbose_stream_set)
    __swig_setmethods__["constructK"] = _StGermain.AbstractContext_constructK_set
    __swig_getmethods__["constructK"] = _StGermain.AbstractContext_constructK_get
    if _newclass:constructK = _swig_property(_StGermain.AbstractContext_constructK_get, _StGermain.AbstractContext_constructK_set)
    __swig_setmethods__["constructExtensionsK"] = _StGermain.AbstractContext_constructExtensionsK_set
    __swig_getmethods__["constructExtensionsK"] = _StGermain.AbstractContext_constructExtensionsK_get
    if _newclass:constructExtensionsK = _swig_property(_StGermain.AbstractContext_constructExtensionsK_get, _StGermain.AbstractContext_constructExtensionsK_set)
    __swig_setmethods__["buildK"] = _StGermain.AbstractContext_buildK_set
    __swig_getmethods__["buildK"] = _StGermain.AbstractContext_buildK_get
    if _newclass:buildK = _swig_property(_StGermain.AbstractContext_buildK_get, _StGermain.AbstractContext_buildK_set)
    __swig_setmethods__["initialiseK"] = _StGermain.AbstractContext_initialiseK_set
    __swig_getmethods__["initialiseK"] = _StGermain.AbstractContext_initialiseK_get
    if _newclass:initialiseK = _swig_property(_StGermain.AbstractContext_initialiseK_get, _StGermain.AbstractContext_initialiseK_set)
    __swig_setmethods__["executeK"] = _StGermain.AbstractContext_executeK_set
    __swig_getmethods__["executeK"] = _StGermain.AbstractContext_executeK_get
    if _newclass:executeK = _swig_property(_StGermain.AbstractContext_executeK_get, _StGermain.AbstractContext_executeK_set)
    __swig_setmethods__["destroyK"] = _StGermain.AbstractContext_destroyK_set
    __swig_getmethods__["destroyK"] = _StGermain.AbstractContext_destroyK_get
    if _newclass:destroyK = _swig_property(_StGermain.AbstractContext_destroyK_get, _StGermain.AbstractContext_destroyK_set)
    __swig_setmethods__["destroyExtensionsK"] = _StGermain.AbstractContext_destroyExtensionsK_set
    __swig_getmethods__["destroyExtensionsK"] = _StGermain.AbstractContext_destroyExtensionsK_get
    if _newclass:destroyExtensionsK = _swig_property(_StGermain.AbstractContext_destroyExtensionsK_get, _StGermain.AbstractContext_destroyExtensionsK_set)
    __swig_setmethods__["dtK"] = _StGermain.AbstractContext_dtK_set
    __swig_getmethods__["dtK"] = _StGermain.AbstractContext_dtK_get
    if _newclass:dtK = _swig_property(_StGermain.AbstractContext_dtK_get, _StGermain.AbstractContext_dtK_set)
    __swig_setmethods__["stepK"] = _StGermain.AbstractContext_stepK_set
    __swig_getmethods__["stepK"] = _StGermain.AbstractContext_stepK_get
    if _newclass:stepK = _swig_property(_StGermain.AbstractContext_stepK_get, _StGermain.AbstractContext_stepK_set)
    __swig_setmethods__["updateClassK"] = _StGermain.AbstractContext_updateClassK_set
    __swig_getmethods__["updateClassK"] = _StGermain.AbstractContext_updateClassK_get
    if _newclass:updateClassK = _swig_property(_StGermain.AbstractContext_updateClassK_get, _StGermain.AbstractContext_updateClassK_set)
    __swig_setmethods__["preSolveClassK"] = _StGermain.AbstractContext_preSolveClassK_set
    __swig_getmethods__["preSolveClassK"] = _StGermain.AbstractContext_preSolveClassK_get
    if _newclass:preSolveClassK = _swig_property(_StGermain.AbstractContext_preSolveClassK_get, _StGermain.AbstractContext_preSolveClassK_set)
    __swig_setmethods__["solveK"] = _StGermain.AbstractContext_solveK_set
    __swig_getmethods__["solveK"] = _StGermain.AbstractContext_solveK_get
    if _newclass:solveK = _swig_property(_StGermain.AbstractContext_solveK_get, _StGermain.AbstractContext_solveK_set)
    __swig_setmethods__["postSolveK"] = _StGermain.AbstractContext_postSolveK_set
    __swig_getmethods__["postSolveK"] = _StGermain.AbstractContext_postSolveK_get
    if _newclass:postSolveK = _swig_property(_StGermain.AbstractContext_postSolveK_get, _StGermain.AbstractContext_postSolveK_set)
    __swig_setmethods__["postSolveClassK"] = _StGermain.AbstractContext_postSolveClassK_set
    __swig_getmethods__["postSolveClassK"] = _StGermain.AbstractContext_postSolveClassK_get
    if _newclass:postSolveClassK = _swig_property(_StGermain.AbstractContext_postSolveClassK_get, _StGermain.AbstractContext_postSolveClassK_set)
    __swig_setmethods__["syncK"] = _StGermain.AbstractContext_syncK_set
    __swig_getmethods__["syncK"] = _StGermain.AbstractContext_syncK_get
    if _newclass:syncK = _swig_property(_StGermain.AbstractContext_syncK_get, _StGermain.AbstractContext_syncK_set)
    __swig_setmethods__["frequentOutputK"] = _StGermain.AbstractContext_frequentOutputK_set
    __swig_getmethods__["frequentOutputK"] = _StGermain.AbstractContext_frequentOutputK_get
    if _newclass:frequentOutputK = _swig_property(_StGermain.AbstractContext_frequentOutputK_get, _StGermain.AbstractContext_frequentOutputK_set)
    __swig_setmethods__["dumpK"] = _StGermain.AbstractContext_dumpK_set
    __swig_getmethods__["dumpK"] = _StGermain.AbstractContext_dumpK_get
    if _newclass:dumpK = _swig_property(_StGermain.AbstractContext_dumpK_get, _StGermain.AbstractContext_dumpK_set)
    __swig_setmethods__["dumpClassK"] = _StGermain.AbstractContext_dumpClassK_set
    __swig_getmethods__["dumpClassK"] = _StGermain.AbstractContext_dumpClassK_get
    if _newclass:dumpClassK = _swig_property(_StGermain.AbstractContext_dumpClassK_get, _StGermain.AbstractContext_dumpClassK_set)
    __swig_setmethods__["saveK"] = _StGermain.AbstractContext_saveK_set
    __swig_getmethods__["saveK"] = _StGermain.AbstractContext_saveK_get
    if _newclass:saveK = _swig_property(_StGermain.AbstractContext_saveK_get, _StGermain.AbstractContext_saveK_set)
    __swig_setmethods__["saveClassK"] = _StGermain.AbstractContext_saveClassK_set
    __swig_getmethods__["saveClassK"] = _StGermain.AbstractContext_saveClassK_get
    if _newclass:saveClassK = _swig_property(_StGermain.AbstractContext_saveClassK_get, _StGermain.AbstractContext_saveClassK_set)
    __swig_setmethods__["dataSaveK"] = _StGermain.AbstractContext_dataSaveK_set
    __swig_getmethods__["dataSaveK"] = _StGermain.AbstractContext_dataSaveK_get
    if _newclass:dataSaveK = _swig_property(_StGermain.AbstractContext_dataSaveK_get, _StGermain.AbstractContext_dataSaveK_set)
    __swig_setmethods__["dataSaveClassK"] = _StGermain.AbstractContext_dataSaveClassK_set
    __swig_getmethods__["dataSaveClassK"] = _StGermain.AbstractContext_dataSaveClassK_get
    if _newclass:dataSaveClassK = _swig_property(_StGermain.AbstractContext_dataSaveClassK_get, _StGermain.AbstractContext_dataSaveClassK_set)
    __swig_setmethods__["variable_Register"] = _StGermain.AbstractContext_variable_Register_set
    __swig_getmethods__["variable_Register"] = _StGermain.AbstractContext_variable_Register_get
    if _newclass:variable_Register = _swig_property(_StGermain.AbstractContext_variable_Register_get, _StGermain.AbstractContext_variable_Register_set)
    __swig_setmethods__["pointer_Register"] = _StGermain.AbstractContext_pointer_Register_set
    __swig_getmethods__["pointer_Register"] = _StGermain.AbstractContext_pointer_Register_get
    if _newclass:pointer_Register = _swig_property(_StGermain.AbstractContext_pointer_Register_get, _StGermain.AbstractContext_pointer_Register_set)
    __swig_setmethods__["entryPoint_Register"] = _StGermain.AbstractContext_entryPoint_Register_set
    __swig_getmethods__["entryPoint_Register"] = _StGermain.AbstractContext_entryPoint_Register_get
    if _newclass:entryPoint_Register = _swig_property(_StGermain.AbstractContext_entryPoint_Register_get, _StGermain.AbstractContext_entryPoint_Register_set)
    __swig_setmethods__["extensionMgr"] = _StGermain.AbstractContext_extensionMgr_set
    __swig_getmethods__["extensionMgr"] = _StGermain.AbstractContext_extensionMgr_get
    if _newclass:extensionMgr = _swig_property(_StGermain.AbstractContext_extensionMgr_get, _StGermain.AbstractContext_extensionMgr_set)
    __swig_setmethods__["CF"] = _StGermain.AbstractContext_CF_set
    __swig_getmethods__["CF"] = _StGermain.AbstractContext_CF_get
    if _newclass:CF = _swig_property(_StGermain.AbstractContext_CF_get, _StGermain.AbstractContext_CF_set)
    __swig_setmethods__["plugins"] = _StGermain.AbstractContext_plugins_set
    __swig_getmethods__["plugins"] = _StGermain.AbstractContext_plugins_get
    if _newclass:plugins = _swig_property(_StGermain.AbstractContext_plugins_get, _StGermain.AbstractContext_plugins_set)
    __swig_setmethods__["timeStamp"] = _StGermain.AbstractContext_timeStamp_set
    __swig_getmethods__["timeStamp"] = _StGermain.AbstractContext_timeStamp_get
    if _newclass:timeStamp = _swig_property(_StGermain.AbstractContext_timeStamp_get, _StGermain.AbstractContext_timeStamp_set)
    __swig_setmethods__["needUpdate"] = _StGermain.AbstractContext_needUpdate_set
    __swig_getmethods__["needUpdate"] = _StGermain.AbstractContext_needUpdate_get
    if _newclass:needUpdate = _swig_property(_StGermain.AbstractContext_needUpdate_get, _StGermain.AbstractContext_needUpdate_set)
    def __init__(self): 
        this = _StGermain.new_AbstractContext()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _StGermain.delete_AbstractContext
    __del__ = lambda self : None;
AbstractContext_swigregister = _StGermain.AbstractContext_swigregister
AbstractContext_swigregister(AbstractContext)
AbstractContext_Type = cvar.AbstractContext_Type
AbstractContext_Type_Verbose = cvar.AbstractContext_Type_Verbose


def _AbstractContext_New(*args):
  return _StGermain._AbstractContext_New(*args)
_AbstractContext_New = _StGermain._AbstractContext_New

def _AbstractContext_Init(*args):
  return _StGermain._AbstractContext_Init(*args)
_AbstractContext_Init = _StGermain._AbstractContext_Init

def _AbstractContext_Delete(*args):
  return _StGermain._AbstractContext_Delete(*args)
_AbstractContext_Delete = _StGermain._AbstractContext_Delete

def _AbstractContext_Print(*args):
  return _StGermain._AbstractContext_Print(*args)
_AbstractContext_Print = _StGermain._AbstractContext_Print

def _AbstractContext_AssignFromXML(*args):
  return _StGermain._AbstractContext_AssignFromXML(*args)
_AbstractContext_AssignFromXML = _StGermain._AbstractContext_AssignFromXML

def _AbstractContext_Build(*args):
  return _StGermain._AbstractContext_Build(*args)
_AbstractContext_Build = _StGermain._AbstractContext_Build

def _AbstractContext_Initialise(*args):
  return _StGermain._AbstractContext_Initialise(*args)
_AbstractContext_Initialise = _StGermain._AbstractContext_Initialise

def _AbstractContext_Execute(*args):
  return _StGermain._AbstractContext_Execute(*args)
_AbstractContext_Execute = _StGermain._AbstractContext_Execute

def _AbstractContext_Destroy(*args):
  return _StGermain._AbstractContext_Destroy(*args)
_AbstractContext_Destroy = _StGermain._AbstractContext_Destroy

def AbstractContext_PrintConcise(*args):
  return _StGermain.AbstractContext_PrintConcise(*args)
AbstractContext_PrintConcise = _StGermain.AbstractContext_PrintConcise

def AbstractContext_AddEntryPoint(*args):
  return _StGermain.AbstractContext_AddEntryPoint(*args)
AbstractContext_AddEntryPoint = _StGermain.AbstractContext_AddEntryPoint

def AbstractContext_GetEntryPoint(*args):
  return _StGermain.AbstractContext_GetEntryPoint(*args)
AbstractContext_GetEntryPoint = _StGermain.AbstractContext_GetEntryPoint

def AbstractContext_FrequentOutput(*args):
  return _StGermain.AbstractContext_FrequentOutput(*args)
AbstractContext_FrequentOutput = _StGermain.AbstractContext_FrequentOutput

def AbstractContext_Dump(*args):
  return _StGermain.AbstractContext_Dump(*args)
AbstractContext_Dump = _StGermain.AbstractContext_Dump

def AbstractContext_Save(*args):
  return _StGermain.AbstractContext_Save(*args)
AbstractContext_Save = _StGermain.AbstractContext_Save

def _AbstractContext_Call(*args):
  return _StGermain._AbstractContext_Call(*args)
_AbstractContext_Call = _StGermain._AbstractContext_Call

def AbstractContext_Dt(*args):
  return _StGermain.AbstractContext_Dt(*args)
AbstractContext_Dt = _StGermain.AbstractContext_Dt

def AbstractContext_Step(*args):
  return _StGermain.AbstractContext_Step(*args)
AbstractContext_Step = _StGermain.AbstractContext_Step

def AbstractContext_WarnIfNoHooks(*args):
  return _StGermain.AbstractContext_WarnIfNoHooks(*args)
AbstractContext_WarnIfNoHooks = _StGermain.AbstractContext_WarnIfNoHooks

def AbstractContext_ErrorIfNoHooks(*args):
  return _StGermain.AbstractContext_ErrorIfNoHooks(*args)
AbstractContext_ErrorIfNoHooks = _StGermain.AbstractContext_ErrorIfNoHooks

def AbstractContext_CheckPointExists(*args):
  return _StGermain.AbstractContext_CheckPointExists(*args)
AbstractContext_CheckPointExists = _StGermain.AbstractContext_CheckPointExists

def Context_GetCheckPointReadPrefixString(*args):
  return _StGermain.Context_GetCheckPointReadPrefixString(*args)
Context_GetCheckPointReadPrefixString = _StGermain.Context_GetCheckPointReadPrefixString

def Context_GetCheckPointWritePrefixStringTopLevel(*args):
  return _StGermain.Context_GetCheckPointWritePrefixStringTopLevel(*args)
Context_GetCheckPointWritePrefixStringTopLevel = _StGermain.Context_GetCheckPointWritePrefixStringTopLevel

def Context_GetCheckPointWritePrefixString(*args):
  return _StGermain.Context_GetCheckPointWritePrefixString(*args)
Context_GetCheckPointWritePrefixString = _StGermain.Context_GetCheckPointWritePrefixString

def _AbstractContext_Construct_Hook(*args):
  return _StGermain._AbstractContext_Construct_Hook(*args)
_AbstractContext_Construct_Hook = _StGermain._AbstractContext_Construct_Hook

def _AbstractContext_Construct_EP_GetRun(*args):
  return _StGermain._AbstractContext_Construct_EP_GetRun(*args)
_AbstractContext_Construct_EP_GetRun = _StGermain._AbstractContext_Construct_EP_GetRun

def _AbstractContext_Construct_EP_Run(*args):
  return _StGermain._AbstractContext_Construct_EP_Run(*args)
_AbstractContext_Construct_EP_Run = _StGermain._AbstractContext_Construct_EP_Run

def _AbstractContext_Execute_Hook(*args):
  return _StGermain._AbstractContext_Execute_Hook(*args)
_AbstractContext_Execute_Hook = _StGermain._AbstractContext_Execute_Hook

def _AbstractContext_Step(*args):
  return _StGermain._AbstractContext_Step(*args)
_AbstractContext_Step = _StGermain._AbstractContext_Step

def AbstractContext_Update(*args):
  return _StGermain.AbstractContext_Update(*args)
AbstractContext_Update = _StGermain.AbstractContext_Update

def _AbstractContext_LoadTimeInfoFromCheckPoint(*args):
  return _StGermain._AbstractContext_LoadTimeInfoFromCheckPoint(*args)
_AbstractContext_LoadTimeInfoFromCheckPoint = _StGermain._AbstractContext_LoadTimeInfoFromCheckPoint

def _AbstractContext_SaveTimeInfo(*args):
  return _StGermain._AbstractContext_SaveTimeInfo(*args)
_AbstractContext_SaveTimeInfo = _StGermain._AbstractContext_SaveTimeInfo

def _AbstractContext_CreateCheckpointDirectory(*args):
  return _StGermain._AbstractContext_CreateCheckpointDirectory(*args)
_AbstractContext_CreateCheckpointDirectory = _StGermain._AbstractContext_CreateCheckpointDirectory

def _AbstractContext_AllOutput(*args):
  return _StGermain._AbstractContext_AllOutput(*args)
_AbstractContext_AllOutput = _StGermain._AbstractContext_AllOutput
class Codelet(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Codelet, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Codelet, name)
    __repr__ = _swig_repr
    __swig_setmethods__["_sizeOfSelf"] = _StGermain.Codelet__sizeOfSelf_set
    __swig_getmethods__["_sizeOfSelf"] = _StGermain.Codelet__sizeOfSelf_get
    if _newclass:_sizeOfSelf = _swig_property(_StGermain.Codelet__sizeOfSelf_get, _StGermain.Codelet__sizeOfSelf_set)
    __swig_setmethods__["_deleteSelf"] = _StGermain.Codelet__deleteSelf_set
    __swig_getmethods__["_deleteSelf"] = _StGermain.Codelet__deleteSelf_get
    if _newclass:_deleteSelf = _swig_property(_StGermain.Codelet__deleteSelf_get, _StGermain.Codelet__deleteSelf_set)
    __swig_setmethods__["type"] = _StGermain.Codelet_type_set
    __swig_getmethods__["type"] = _StGermain.Codelet_type_get
    if _newclass:type = _swig_property(_StGermain.Codelet_type_get, _StGermain.Codelet_type_set)
    __swig_setmethods__["nRefs"] = _StGermain.Codelet_nRefs_set
    __swig_getmethods__["nRefs"] = _StGermain.Codelet_nRefs_get
    if _newclass:nRefs = _swig_property(_StGermain.Codelet_nRefs_get, _StGermain.Codelet_nRefs_set)
    __swig_setmethods__["_delete"] = _StGermain.Codelet__delete_set
    __swig_getmethods__["_delete"] = _StGermain.Codelet__delete_get
    if _newclass:_delete = _swig_property(_StGermain.Codelet__delete_get, _StGermain.Codelet__delete_set)
    __swig_setmethods__["_print"] = _StGermain.Codelet__print_set
    __swig_getmethods__["_print"] = _StGermain.Codelet__print_get
    if _newclass:_print = _swig_property(_StGermain.Codelet__print_get, _StGermain.Codelet__print_set)
    __swig_setmethods__["_copy"] = _StGermain.Codelet__copy_set
    __swig_getmethods__["_copy"] = _StGermain.Codelet__copy_get
    if _newclass:_copy = _swig_property(_StGermain.Codelet__copy_get, _StGermain.Codelet__copy_set)
    __swig_setmethods__["name"] = _StGermain.Codelet_name_set
    __swig_getmethods__["name"] = _StGermain.Codelet_name_get
    if _newclass:name = _swig_property(_StGermain.Codelet_name_get, _StGermain.Codelet_name_set)
    __swig_setmethods__["nameAllocationType"] = _StGermain.Codelet_nameAllocationType_set
    __swig_getmethods__["nameAllocationType"] = _StGermain.Codelet_nameAllocationType_get
    if _newclass:nameAllocationType = _swig_property(_StGermain.Codelet_nameAllocationType_get, _StGermain.Codelet_nameAllocationType_set)
    __swig_setmethods__["_defaultConstructor"] = _StGermain.Codelet__defaultConstructor_set
    __swig_getmethods__["_defaultConstructor"] = _StGermain.Codelet__defaultConstructor_get
    if _newclass:_defaultConstructor = _swig_property(_StGermain.Codelet__defaultConstructor_get, _StGermain.Codelet__defaultConstructor_set)
    __swig_setmethods__["_construct"] = _StGermain.Codelet__construct_set
    __swig_getmethods__["_construct"] = _StGermain.Codelet__construct_get
    if _newclass:_construct = _swig_property(_StGermain.Codelet__construct_get, _StGermain.Codelet__construct_set)
    __swig_setmethods__["_build"] = _StGermain.Codelet__build_set
    __swig_getmethods__["_build"] = _StGermain.Codelet__build_get
    if _newclass:_build = _swig_property(_StGermain.Codelet__build_get, _StGermain.Codelet__build_set)
    __swig_setmethods__["_initialise"] = _StGermain.Codelet__initialise_set
    __swig_getmethods__["_initialise"] = _StGermain.Codelet__initialise_get
    if _newclass:_initialise = _swig_property(_StGermain.Codelet__initialise_get, _StGermain.Codelet__initialise_set)
    __swig_setmethods__["_execute"] = _StGermain.Codelet__execute_set
    __swig_getmethods__["_execute"] = _StGermain.Codelet__execute_get
    if _newclass:_execute = _swig_property(_StGermain.Codelet__execute_get, _StGermain.Codelet__execute_set)
    __swig_setmethods__["_destroy"] = _StGermain.Codelet__destroy_set
    __swig_getmethods__["_destroy"] = _StGermain.Codelet__destroy_get
    if _newclass:_destroy = _swig_property(_StGermain.Codelet__destroy_get, _StGermain.Codelet__destroy_set)
    __swig_setmethods__["isConstructed"] = _StGermain.Codelet_isConstructed_set
    __swig_getmethods__["isConstructed"] = _StGermain.Codelet_isConstructed_get
    if _newclass:isConstructed = _swig_property(_StGermain.Codelet_isConstructed_get, _StGermain.Codelet_isConstructed_set)
    __swig_setmethods__["isBuilt"] = _StGermain.Codelet_isBuilt_set
    __swig_getmethods__["isBuilt"] = _StGermain.Codelet_isBuilt_get
    if _newclass:isBuilt = _swig_property(_StGermain.Codelet_isBuilt_get, _StGermain.Codelet_isBuilt_set)
    __swig_setmethods__["isInitialised"] = _StGermain.Codelet_isInitialised_set
    __swig_getmethods__["isInitialised"] = _StGermain.Codelet_isInitialised_get
    if _newclass:isInitialised = _swig_property(_StGermain.Codelet_isInitialised_get, _StGermain.Codelet_isInitialised_set)
    __swig_setmethods__["hasExecuted"] = _StGermain.Codelet_hasExecuted_set
    __swig_getmethods__["hasExecuted"] = _StGermain.Codelet_hasExecuted_get
    if _newclass:hasExecuted = _swig_property(_StGermain.Codelet_hasExecuted_get, _StGermain.Codelet_hasExecuted_set)
    __swig_setmethods__["isDestroyed"] = _StGermain.Codelet_isDestroyed_set
    __swig_getmethods__["isDestroyed"] = _StGermain.Codelet_isDestroyed_get
    if _newclass:isDestroyed = _swig_property(_StGermain.Codelet_isDestroyed_get, _StGermain.Codelet_isDestroyed_set)
    __swig_setmethods__["constructType"] = _StGermain.Codelet_constructType_set
    __swig_getmethods__["constructType"] = _StGermain.Codelet_constructType_get
    if _newclass:constructType = _swig_property(_StGermain.Codelet_constructType_get, _StGermain.Codelet_constructType_set)
    __swig_setmethods__["buildType"] = _StGermain.Codelet_buildType_set
    __swig_getmethods__["buildType"] = _StGermain.Codelet_buildType_get
    if _newclass:buildType = _swig_property(_StGermain.Codelet_buildType_get, _StGermain.Codelet_buildType_set)
    __swig_setmethods__["initialiseType"] = _StGermain.Codelet_initialiseType_set
    __swig_getmethods__["initialiseType"] = _StGermain.Codelet_initialiseType_get
    if _newclass:initialiseType = _swig_property(_StGermain.Codelet_initialiseType_get, _StGermain.Codelet_initialiseType_set)
    __swig_setmethods__["executeType"] = _StGermain.Codelet_executeType_set
    __swig_getmethods__["executeType"] = _StGermain.Codelet_executeType_get
    if _newclass:executeType = _swig_property(_StGermain.Codelet_executeType_get, _StGermain.Codelet_executeType_set)
    __swig_setmethods__["destroyType"] = _StGermain.Codelet_destroyType_set
    __swig_getmethods__["destroyType"] = _StGermain.Codelet_destroyType_get
    if _newclass:destroyType = _swig_property(_StGermain.Codelet_destroyType_get, _StGermain.Codelet_destroyType_set)
    __swig_setmethods__["context"] = _StGermain.Codelet_context_set
    __swig_getmethods__["context"] = _StGermain.Codelet_context_get
    if _newclass:context = _swig_property(_StGermain.Codelet_context_get, _StGermain.Codelet_context_set)
    def __init__(self): 
        this = _StGermain.new_Codelet()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _StGermain.delete_Codelet
    __del__ = lambda self : None;
Codelet_swigregister = _StGermain.Codelet_swigregister
Codelet_swigregister(Codelet)
Codelet_Type = cvar.Codelet_Type


def Codelet_New(*args):
  return _StGermain.Codelet_New(*args)
Codelet_New = _StGermain.Codelet_New

def _Codelet_New(*args):
  return _StGermain._Codelet_New(*args)
_Codelet_New = _StGermain._Codelet_New

def _Codelet_Delete(*args):
  return _StGermain._Codelet_Delete(*args)
_Codelet_Delete = _StGermain._Codelet_Delete

def _Codelet_Print(*args):
  return _StGermain._Codelet_Print(*args)
_Codelet_Print = _StGermain._Codelet_Print

def _Codelet_Copy(*args):
  return _StGermain._Codelet_Copy(*args)
_Codelet_Copy = _StGermain._Codelet_Copy

def _Codelet_Build(*args):
  return _StGermain._Codelet_Build(*args)
_Codelet_Build = _StGermain._Codelet_Build

def _Codelet_Initialise(*args):
  return _StGermain._Codelet_Initialise(*args)
_Codelet_Initialise = _StGermain._Codelet_Initialise

def _Codelet_Execute(*args):
  return _StGermain._Codelet_Execute(*args)
_Codelet_Execute = _StGermain._Codelet_Execute

def _Codelet_Destroy(*args):
  return _StGermain._Codelet_Destroy(*args)
_Codelet_Destroy = _StGermain._Codelet_Destroy

def Codelet_GetPluginDictionary(*args):
  return _StGermain.Codelet_GetPluginDictionary(*args)
Codelet_GetPluginDictionary = _StGermain.Codelet_GetPluginDictionary
class DummyComponent(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, DummyComponent, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, DummyComponent, name)
    __repr__ = _swig_repr
    __swig_setmethods__["_sizeOfSelf"] = _StGermain.DummyComponent__sizeOfSelf_set
    __swig_getmethods__["_sizeOfSelf"] = _StGermain.DummyComponent__sizeOfSelf_get
    if _newclass:_sizeOfSelf = _swig_property(_StGermain.DummyComponent__sizeOfSelf_get, _StGermain.DummyComponent__sizeOfSelf_set)
    __swig_setmethods__["_deleteSelf"] = _StGermain.DummyComponent__deleteSelf_set
    __swig_getmethods__["_deleteSelf"] = _StGermain.DummyComponent__deleteSelf_get
    if _newclass:_deleteSelf = _swig_property(_StGermain.DummyComponent__deleteSelf_get, _StGermain.DummyComponent__deleteSelf_set)
    __swig_setmethods__["type"] = _StGermain.DummyComponent_type_set
    __swig_getmethods__["type"] = _StGermain.DummyComponent_type_get
    if _newclass:type = _swig_property(_StGermain.DummyComponent_type_get, _StGermain.DummyComponent_type_set)
    __swig_setmethods__["nRefs"] = _StGermain.DummyComponent_nRefs_set
    __swig_getmethods__["nRefs"] = _StGermain.DummyComponent_nRefs_get
    if _newclass:nRefs = _swig_property(_StGermain.DummyComponent_nRefs_get, _StGermain.DummyComponent_nRefs_set)
    __swig_setmethods__["_delete"] = _StGermain.DummyComponent__delete_set
    __swig_getmethods__["_delete"] = _StGermain.DummyComponent__delete_get
    if _newclass:_delete = _swig_property(_StGermain.DummyComponent__delete_get, _StGermain.DummyComponent__delete_set)
    __swig_setmethods__["_print"] = _StGermain.DummyComponent__print_set
    __swig_getmethods__["_print"] = _StGermain.DummyComponent__print_get
    if _newclass:_print = _swig_property(_StGermain.DummyComponent__print_get, _StGermain.DummyComponent__print_set)
    __swig_setmethods__["_copy"] = _StGermain.DummyComponent__copy_set
    __swig_getmethods__["_copy"] = _StGermain.DummyComponent__copy_get
    if _newclass:_copy = _swig_property(_StGermain.DummyComponent__copy_get, _StGermain.DummyComponent__copy_set)
    __swig_setmethods__["name"] = _StGermain.DummyComponent_name_set
    __swig_getmethods__["name"] = _StGermain.DummyComponent_name_get
    if _newclass:name = _swig_property(_StGermain.DummyComponent_name_get, _StGermain.DummyComponent_name_set)
    __swig_setmethods__["nameAllocationType"] = _StGermain.DummyComponent_nameAllocationType_set
    __swig_getmethods__["nameAllocationType"] = _StGermain.DummyComponent_nameAllocationType_get
    if _newclass:nameAllocationType = _swig_property(_StGermain.DummyComponent_nameAllocationType_get, _StGermain.DummyComponent_nameAllocationType_set)
    __swig_setmethods__["_defaultConstructor"] = _StGermain.DummyComponent__defaultConstructor_set
    __swig_getmethods__["_defaultConstructor"] = _StGermain.DummyComponent__defaultConstructor_get
    if _newclass:_defaultConstructor = _swig_property(_StGermain.DummyComponent__defaultConstructor_get, _StGermain.DummyComponent__defaultConstructor_set)
    __swig_setmethods__["_construct"] = _StGermain.DummyComponent__construct_set
    __swig_getmethods__["_construct"] = _StGermain.DummyComponent__construct_get
    if _newclass:_construct = _swig_property(_StGermain.DummyComponent__construct_get, _StGermain.DummyComponent__construct_set)
    __swig_setmethods__["_build"] = _StGermain.DummyComponent__build_set
    __swig_getmethods__["_build"] = _StGermain.DummyComponent__build_get
    if _newclass:_build = _swig_property(_StGermain.DummyComponent__build_get, _StGermain.DummyComponent__build_set)
    __swig_setmethods__["_initialise"] = _StGermain.DummyComponent__initialise_set
    __swig_getmethods__["_initialise"] = _StGermain.DummyComponent__initialise_get
    if _newclass:_initialise = _swig_property(_StGermain.DummyComponent__initialise_get, _StGermain.DummyComponent__initialise_set)
    __swig_setmethods__["_execute"] = _StGermain.DummyComponent__execute_set
    __swig_getmethods__["_execute"] = _StGermain.DummyComponent__execute_get
    if _newclass:_execute = _swig_property(_StGermain.DummyComponent__execute_get, _StGermain.DummyComponent__execute_set)
    __swig_setmethods__["_destroy"] = _StGermain.DummyComponent__destroy_set
    __swig_getmethods__["_destroy"] = _StGermain.DummyComponent__destroy_get
    if _newclass:_destroy = _swig_property(_StGermain.DummyComponent__destroy_get, _StGermain.DummyComponent__destroy_set)
    __swig_setmethods__["isConstructed"] = _StGermain.DummyComponent_isConstructed_set
    __swig_getmethods__["isConstructed"] = _StGermain.DummyComponent_isConstructed_get
    if _newclass:isConstructed = _swig_property(_StGermain.DummyComponent_isConstructed_get, _StGermain.DummyComponent_isConstructed_set)
    __swig_setmethods__["isBuilt"] = _StGermain.DummyComponent_isBuilt_set
    __swig_getmethods__["isBuilt"] = _StGermain.DummyComponent_isBuilt_get
    if _newclass:isBuilt = _swig_property(_StGermain.DummyComponent_isBuilt_get, _StGermain.DummyComponent_isBuilt_set)
    __swig_setmethods__["isInitialised"] = _StGermain.DummyComponent_isInitialised_set
    __swig_getmethods__["isInitialised"] = _StGermain.DummyComponent_isInitialised_get
    if _newclass:isInitialised = _swig_property(_StGermain.DummyComponent_isInitialised_get, _StGermain.DummyComponent_isInitialised_set)
    __swig_setmethods__["hasExecuted"] = _StGermain.DummyComponent_hasExecuted_set
    __swig_getmethods__["hasExecuted"] = _StGermain.DummyComponent_hasExecuted_get
    if _newclass:hasExecuted = _swig_property(_StGermain.DummyComponent_hasExecuted_get, _StGermain.DummyComponent_hasExecuted_set)
    __swig_setmethods__["isDestroyed"] = _StGermain.DummyComponent_isDestroyed_set
    __swig_getmethods__["isDestroyed"] = _StGermain.DummyComponent_isDestroyed_get
    if _newclass:isDestroyed = _swig_property(_StGermain.DummyComponent_isDestroyed_get, _StGermain.DummyComponent_isDestroyed_set)
    __swig_setmethods__["constructType"] = _StGermain.DummyComponent_constructType_set
    __swig_getmethods__["constructType"] = _StGermain.DummyComponent_constructType_get
    if _newclass:constructType = _swig_property(_StGermain.DummyComponent_constructType_get, _StGermain.DummyComponent_constructType_set)
    __swig_setmethods__["buildType"] = _StGermain.DummyComponent_buildType_set
    __swig_getmethods__["buildType"] = _StGermain.DummyComponent_buildType_get
    if _newclass:buildType = _swig_property(_StGermain.DummyComponent_buildType_get, _StGermain.DummyComponent_buildType_set)
    __swig_setmethods__["initialiseType"] = _StGermain.DummyComponent_initialiseType_set
    __swig_getmethods__["initialiseType"] = _StGermain.DummyComponent_initialiseType_get
    if _newclass:initialiseType = _swig_property(_StGermain.DummyComponent_initialiseType_get, _StGermain.DummyComponent_initialiseType_set)
    __swig_setmethods__["executeType"] = _StGermain.DummyComponent_executeType_set
    __swig_getmethods__["executeType"] = _StGermain.DummyComponent_executeType_get
    if _newclass:executeType = _swig_property(_StGermain.DummyComponent_executeType_get, _StGermain.DummyComponent_executeType_set)
    __swig_setmethods__["destroyType"] = _StGermain.DummyComponent_destroyType_set
    __swig_getmethods__["destroyType"] = _StGermain.DummyComponent_destroyType_get
    if _newclass:destroyType = _swig_property(_StGermain.DummyComponent_destroyType_get, _StGermain.DummyComponent_destroyType_set)
    def __init__(self): 
        this = _StGermain.new_DummyComponent()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _StGermain.delete_DummyComponent
    __del__ = lambda self : None;
DummyComponent_swigregister = _StGermain.DummyComponent_swigregister
DummyComponent_swigregister(DummyComponent)


def _DummyComponent_New(*args):
  return _StGermain._DummyComponent_New(*args)
_DummyComponent_New = _StGermain._DummyComponent_New

def _DummyComponent_DefaultNew(*args):
  return _StGermain._DummyComponent_DefaultNew(*args)
_DummyComponent_DefaultNew = _StGermain._DummyComponent_DefaultNew

def _DummyComponent_Delete(*args):
  return _StGermain._DummyComponent_Delete(*args)
_DummyComponent_Delete = _StGermain._DummyComponent_Delete

def _DummyComponent_Print(*args):
  return _StGermain._DummyComponent_Print(*args)
_DummyComponent_Print = _StGermain._DummyComponent_Print

def _DummyComponent_Copy(*args):
  return _StGermain._DummyComponent_Copy(*args)
_DummyComponent_Copy = _StGermain._DummyComponent_Copy

def _DummyComponent_AssignFromXML(*args):
  return _StGermain._DummyComponent_AssignFromXML(*args)
_DummyComponent_AssignFromXML = _StGermain._DummyComponent_AssignFromXML

def _DummyComponent_Build(*args):
  return _StGermain._DummyComponent_Build(*args)
_DummyComponent_Build = _StGermain._DummyComponent_Build

def _DummyComponent_Initialise(*args):
  return _StGermain._DummyComponent_Initialise(*args)
_DummyComponent_Initialise = _StGermain._DummyComponent_Initialise

def _DummyComponent_Execute(*args):
  return _StGermain._DummyComponent_Execute(*args)
_DummyComponent_Execute = _StGermain._DummyComponent_Execute

def _DummyComponent_Destroy(*args):
  return _StGermain._DummyComponent_Destroy(*args)
_DummyComponent_Destroy = _StGermain._DummyComponent_Destroy
class UnitDefinition_Type(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, UnitDefinition_Type, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, UnitDefinition_Type, name)
    __repr__ = _swig_repr
    __swig_setmethods__["lengPower"] = _StGermain.UnitDefinition_Type_lengPower_set
    __swig_getmethods__["lengPower"] = _StGermain.UnitDefinition_Type_lengPower_get
    if _newclass:lengPower = _swig_property(_StGermain.UnitDefinition_Type_lengPower_get, _StGermain.UnitDefinition_Type_lengPower_set)
    __swig_setmethods__["massPower"] = _StGermain.UnitDefinition_Type_massPower_set
    __swig_getmethods__["massPower"] = _StGermain.UnitDefinition_Type_massPower_get
    if _newclass:massPower = _swig_property(_StGermain.UnitDefinition_Type_massPower_get, _StGermain.UnitDefinition_Type_massPower_set)
    __swig_setmethods__["timePower"] = _StGermain.UnitDefinition_Type_timePower_set
    __swig_getmethods__["timePower"] = _StGermain.UnitDefinition_Type_timePower_get
    if _newclass:timePower = _swig_property(_StGermain.UnitDefinition_Type_timePower_get, _StGermain.UnitDefinition_Type_timePower_set)
    __swig_setmethods__["tempPower"] = _StGermain.UnitDefinition_Type_tempPower_set
    __swig_getmethods__["tempPower"] = _StGermain.UnitDefinition_Type_tempPower_get
    if _newclass:tempPower = _swig_property(_StGermain.UnitDefinition_Type_tempPower_get, _StGermain.UnitDefinition_Type_tempPower_set)
    __swig_setmethods__["currPower"] = _StGermain.UnitDefinition_Type_currPower_set
    __swig_getmethods__["currPower"] = _StGermain.UnitDefinition_Type_currPower_get
    if _newclass:currPower = _swig_property(_StGermain.UnitDefinition_Type_currPower_get, _StGermain.UnitDefinition_Type_currPower_set)
    __swig_setmethods__["c"] = _StGermain.UnitDefinition_Type_c_set
    __swig_getmethods__["c"] = _StGermain.UnitDefinition_Type_c_get
    if _newclass:c = _swig_property(_StGermain.UnitDefinition_Type_c_get, _StGermain.UnitDefinition_Type_c_set)
    def __init__(self): 
        this = _StGermain.new_UnitDefinition_Type()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _StGermain.delete_UnitDefinition_Type
    __del__ = lambda self : None;
UnitDefinition_Type_swigregister = _StGermain.UnitDefinition_Type_swigregister
UnitDefinition_Type_swigregister(UnitDefinition_Type)
DummyComponent_Type = cvar.DummyComponent_Type

class Scaling(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Scaling, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Scaling, name)
    __repr__ = _swig_repr
    __swig_setmethods__["_sizeOfSelf"] = _StGermain.Scaling__sizeOfSelf_set
    __swig_getmethods__["_sizeOfSelf"] = _StGermain.Scaling__sizeOfSelf_get
    if _newclass:_sizeOfSelf = _swig_property(_StGermain.Scaling__sizeOfSelf_get, _StGermain.Scaling__sizeOfSelf_set)
    __swig_setmethods__["_deleteSelf"] = _StGermain.Scaling__deleteSelf_set
    __swig_getmethods__["_deleteSelf"] = _StGermain.Scaling__deleteSelf_get
    if _newclass:_deleteSelf = _swig_property(_StGermain.Scaling__deleteSelf_get, _StGermain.Scaling__deleteSelf_set)
    __swig_setmethods__["type"] = _StGermain.Scaling_type_set
    __swig_getmethods__["type"] = _StGermain.Scaling_type_get
    if _newclass:type = _swig_property(_StGermain.Scaling_type_get, _StGermain.Scaling_type_set)
    __swig_setmethods__["nRefs"] = _StGermain.Scaling_nRefs_set
    __swig_getmethods__["nRefs"] = _StGermain.Scaling_nRefs_get
    if _newclass:nRefs = _swig_property(_StGermain.Scaling_nRefs_get, _StGermain.Scaling_nRefs_set)
    __swig_setmethods__["_delete"] = _StGermain.Scaling__delete_set
    __swig_getmethods__["_delete"] = _StGermain.Scaling__delete_get
    if _newclass:_delete = _swig_property(_StGermain.Scaling__delete_get, _StGermain.Scaling__delete_set)
    __swig_setmethods__["_print"] = _StGermain.Scaling__print_set
    __swig_getmethods__["_print"] = _StGermain.Scaling__print_get
    if _newclass:_print = _swig_property(_StGermain.Scaling__print_get, _StGermain.Scaling__print_set)
    __swig_setmethods__["_copy"] = _StGermain.Scaling__copy_set
    __swig_getmethods__["_copy"] = _StGermain.Scaling__copy_get
    if _newclass:_copy = _swig_property(_StGermain.Scaling__copy_get, _StGermain.Scaling__copy_set)
    __swig_setmethods__["name"] = _StGermain.Scaling_name_set
    __swig_getmethods__["name"] = _StGermain.Scaling_name_get
    if _newclass:name = _swig_property(_StGermain.Scaling_name_get, _StGermain.Scaling_name_set)
    __swig_setmethods__["nameAllocationType"] = _StGermain.Scaling_nameAllocationType_set
    __swig_getmethods__["nameAllocationType"] = _StGermain.Scaling_nameAllocationType_get
    if _newclass:nameAllocationType = _swig_property(_StGermain.Scaling_nameAllocationType_get, _StGermain.Scaling_nameAllocationType_set)
    __swig_setmethods__["_defaultConstructor"] = _StGermain.Scaling__defaultConstructor_set
    __swig_getmethods__["_defaultConstructor"] = _StGermain.Scaling__defaultConstructor_get
    if _newclass:_defaultConstructor = _swig_property(_StGermain.Scaling__defaultConstructor_get, _StGermain.Scaling__defaultConstructor_set)
    __swig_setmethods__["_construct"] = _StGermain.Scaling__construct_set
    __swig_getmethods__["_construct"] = _StGermain.Scaling__construct_get
    if _newclass:_construct = _swig_property(_StGermain.Scaling__construct_get, _StGermain.Scaling__construct_set)
    __swig_setmethods__["_build"] = _StGermain.Scaling__build_set
    __swig_getmethods__["_build"] = _StGermain.Scaling__build_get
    if _newclass:_build = _swig_property(_StGermain.Scaling__build_get, _StGermain.Scaling__build_set)
    __swig_setmethods__["_initialise"] = _StGermain.Scaling__initialise_set
    __swig_getmethods__["_initialise"] = _StGermain.Scaling__initialise_get
    if _newclass:_initialise = _swig_property(_StGermain.Scaling__initialise_get, _StGermain.Scaling__initialise_set)
    __swig_setmethods__["_execute"] = _StGermain.Scaling__execute_set
    __swig_getmethods__["_execute"] = _StGermain.Scaling__execute_get
    if _newclass:_execute = _swig_property(_StGermain.Scaling__execute_get, _StGermain.Scaling__execute_set)
    __swig_setmethods__["_destroy"] = _StGermain.Scaling__destroy_set
    __swig_getmethods__["_destroy"] = _StGermain.Scaling__destroy_get
    if _newclass:_destroy = _swig_property(_StGermain.Scaling__destroy_get, _StGermain.Scaling__destroy_set)
    __swig_setmethods__["isConstructed"] = _StGermain.Scaling_isConstructed_set
    __swig_getmethods__["isConstructed"] = _StGermain.Scaling_isConstructed_get
    if _newclass:isConstructed = _swig_property(_StGermain.Scaling_isConstructed_get, _StGermain.Scaling_isConstructed_set)
    __swig_setmethods__["isBuilt"] = _StGermain.Scaling_isBuilt_set
    __swig_getmethods__["isBuilt"] = _StGermain.Scaling_isBuilt_get
    if _newclass:isBuilt = _swig_property(_StGermain.Scaling_isBuilt_get, _StGermain.Scaling_isBuilt_set)
    __swig_setmethods__["isInitialised"] = _StGermain.Scaling_isInitialised_set
    __swig_getmethods__["isInitialised"] = _StGermain.Scaling_isInitialised_get
    if _newclass:isInitialised = _swig_property(_StGermain.Scaling_isInitialised_get, _StGermain.Scaling_isInitialised_set)
    __swig_setmethods__["hasExecuted"] = _StGermain.Scaling_hasExecuted_set
    __swig_getmethods__["hasExecuted"] = _StGermain.Scaling_hasExecuted_get
    if _newclass:hasExecuted = _swig_property(_StGermain.Scaling_hasExecuted_get, _StGermain.Scaling_hasExecuted_set)
    __swig_setmethods__["isDestroyed"] = _StGermain.Scaling_isDestroyed_set
    __swig_getmethods__["isDestroyed"] = _StGermain.Scaling_isDestroyed_get
    if _newclass:isDestroyed = _swig_property(_StGermain.Scaling_isDestroyed_get, _StGermain.Scaling_isDestroyed_set)
    __swig_setmethods__["constructType"] = _StGermain.Scaling_constructType_set
    __swig_getmethods__["constructType"] = _StGermain.Scaling_constructType_get
    if _newclass:constructType = _swig_property(_StGermain.Scaling_constructType_get, _StGermain.Scaling_constructType_set)
    __swig_setmethods__["buildType"] = _StGermain.Scaling_buildType_set
    __swig_getmethods__["buildType"] = _StGermain.Scaling_buildType_get
    if _newclass:buildType = _swig_property(_StGermain.Scaling_buildType_get, _StGermain.Scaling_buildType_set)
    __swig_setmethods__["initialiseType"] = _StGermain.Scaling_initialiseType_set
    __swig_getmethods__["initialiseType"] = _StGermain.Scaling_initialiseType_get
    if _newclass:initialiseType = _swig_property(_StGermain.Scaling_initialiseType_get, _StGermain.Scaling_initialiseType_set)
    __swig_setmethods__["executeType"] = _StGermain.Scaling_executeType_set
    __swig_getmethods__["executeType"] = _StGermain.Scaling_executeType_get
    if _newclass:executeType = _swig_property(_StGermain.Scaling_executeType_get, _StGermain.Scaling_executeType_set)
    __swig_setmethods__["destroyType"] = _StGermain.Scaling_destroyType_set
    __swig_getmethods__["destroyType"] = _StGermain.Scaling_destroyType_get
    if _newclass:destroyType = _swig_property(_StGermain.Scaling_destroyType_get, _StGermain.Scaling_destroyType_set)
    __swig_setmethods__["length"] = _StGermain.Scaling_length_set
    __swig_getmethods__["length"] = _StGermain.Scaling_length_get
    if _newclass:length = _swig_property(_StGermain.Scaling_length_get, _StGermain.Scaling_length_set)
    __swig_setmethods__["time"] = _StGermain.Scaling_time_set
    __swig_getmethods__["time"] = _StGermain.Scaling_time_get
    if _newclass:time = _swig_property(_StGermain.Scaling_time_get, _StGermain.Scaling_time_set)
    __swig_setmethods__["mass"] = _StGermain.Scaling_mass_set
    __swig_getmethods__["mass"] = _StGermain.Scaling_mass_get
    if _newclass:mass = _swig_property(_StGermain.Scaling_mass_get, _StGermain.Scaling_mass_set)
    __swig_setmethods__["temperature"] = _StGermain.Scaling_temperature_set
    __swig_getmethods__["temperature"] = _StGermain.Scaling_temperature_get
    if _newclass:temperature = _swig_property(_StGermain.Scaling_temperature_get, _StGermain.Scaling_temperature_set)
    __swig_setmethods__["electricCurrent"] = _StGermain.Scaling_electricCurrent_set
    __swig_getmethods__["electricCurrent"] = _StGermain.Scaling_electricCurrent_get
    if _newclass:electricCurrent = _swig_property(_StGermain.Scaling_electricCurrent_get, _StGermain.Scaling_electricCurrent_set)
    __swig_setmethods__["info_stream"] = _StGermain.Scaling_info_stream_set
    __swig_getmethods__["info_stream"] = _StGermain.Scaling_info_stream_get
    if _newclass:info_stream = _swig_property(_StGermain.Scaling_info_stream_get, _StGermain.Scaling_info_stream_set)
    __swig_setmethods__["error_stream"] = _StGermain.Scaling_error_stream_set
    __swig_getmethods__["error_stream"] = _StGermain.Scaling_error_stream_get
    if _newclass:error_stream = _swig_property(_StGermain.Scaling_error_stream_get, _StGermain.Scaling_error_stream_set)
    def __init__(self): 
        this = _StGermain.new_Scaling()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _StGermain.delete_Scaling
    __del__ = lambda self : None;
Scaling_swigregister = _StGermain.Scaling_swigregister
Scaling_swigregister(Scaling)
Scaling_Type = cvar.Scaling_Type


def Scaling_New(*args):
  return _StGermain.Scaling_New(*args)
Scaling_New = _StGermain.Scaling_New

def _Scaling_New(*args):
  return _StGermain._Scaling_New(*args)
_Scaling_New = _StGermain._Scaling_New

def _Scaling_DefaultNew(*args):
  return _StGermain._Scaling_DefaultNew(*args)
_Scaling_DefaultNew = _StGermain._Scaling_DefaultNew

def _Scaling_AssignFromXML(*args):
  return _StGermain._Scaling_AssignFromXML(*args)
_Scaling_AssignFromXML = _StGermain._Scaling_AssignFromXML

def _Scaling_Build(*args):
  return _StGermain._Scaling_Build(*args)
_Scaling_Build = _StGermain._Scaling_Build

def _Scaling_Initialise(*args):
  return _StGermain._Scaling_Initialise(*args)
_Scaling_Initialise = _StGermain._Scaling_Initialise

def _Scaling_Destroy(*args):
  return _StGermain._Scaling_Destroy(*args)
_Scaling_Destroy = _StGermain._Scaling_Destroy

def _Scaling_Init(*args):
  return _StGermain._Scaling_Init(*args)
_Scaling_Init = _StGermain._Scaling_Init

def _Scaling_ScaleList(*args):
  return _StGermain._Scaling_ScaleList(*args)
_Scaling_ScaleList = _StGermain._Scaling_ScaleList

def _Scaling_ScaleEntry(*args):
  return _StGermain._Scaling_ScaleEntry(*args)
_Scaling_ScaleEntry = _StGermain._Scaling_ScaleEntry

def Scaling_Unscale(*args):
  return _StGermain.Scaling_Unscale(*args)
Scaling_Unscale = _StGermain.Scaling_Unscale

def Scaling_Scale(*args):
  return _StGermain.Scaling_Scale(*args)
Scaling_Scale = _StGermain.Scaling_Scale

def Scaling_Parse(*args):
  return _StGermain.Scaling_Parse(*args)
Scaling_Parse = _StGermain.Scaling_Parse

def Scaling_ParseDimCoeff(*args):
  return _StGermain.Scaling_ParseDimCoeff(*args)
Scaling_ParseDimCoeff = _StGermain.Scaling_ParseDimCoeff

def Scaling_ScaleDictionary(*args):
  return _StGermain.Scaling_ScaleDictionary(*args)
Scaling_ScaleDictionary = _StGermain.Scaling_ScaleDictionary
# This file is compatible with both classic and new-style classes.


